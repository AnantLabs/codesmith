<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="CodeSmith.QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA EditableRoot" %>
<%@ Register Name="CompositeKeyMethods" Template="..\..\Common\CompositeKeyMethods.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Constructor" Template="..\..\Common\Constructor.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="DataPortalCreate" Template="..\..\Common\DataPortalCreate.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Exists" Template="..\..\Common\Exists.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="IsDirty" Template="..\..\Common\IsDirty.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Properties" Template="..\..\Common\Properties.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ValidationRules" Template="..\..\Common\ValidationRules.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="PartialMethods" Template="..\..\Common\DataPortalPartialMethods.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.CSharpExtensions" Path="..\..\..\Common" %>
<%@ Assembly Name="CodeSmith.QuickStart" Path="..\..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="SchemaExplorer" %>
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using <%= VersionInfo %>.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class '<%= Entity.ClassName %>.cs'.
//
//     Template path: <%= CodeTemplateInfo.FileName %>
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region Using declarations

using System;

using Csla;
<% if( DataAccessImplementation == DataAccessMethod.LinqToSQL) { %>
using <%=LinqToSQLContextNamespace%>;
using DAL=<%=LinqToSQLContextNamespace%>;
<% }%>
<% if(IsCSLA40) { %>
using Csla.Rules;
<% } else { %>
using Csla.Validation;
<% } %>
<% if(IncludeSilverlightSupport) { %>
#if SILVERLIGHT
using Csla.Serialization;
#else
using Csla.Data;
#endif
<% } else { %>
using Csla.Data;
<% } %>

#endregion

namespace <%= BusinessProjectName %>
{
    [Serializable]
<% if(DataAccessImplementation == DataAccessMethod.ObjectFactoryNone || DataAccessImplementation == DataAccessMethod.ObjectFactoryParameterizedSQL || DataAccessImplementation == DataAccessMethod.ObjectFactoryStoredProcedures){ %>
    [Csla.Server.ObjectFactory(FactoryNames.<%= Entity.ClassName %>FactoryName)]
<% } %>
    public partial class <%= BusinessClassName %><%= Entity.GenericProperty %> : BusinessBase< <%= BusinessClassName %><%= Entity.GenericProperty %> >
    {
<%/*  Documentation code handled in the Constructor.cst template  */
   RenderHelper(new Constructor()); %>

<%/*  Documentation code handled in the ValidationRules.cst template  */
   RenderHelper(new ValidationRules()); %>

<%/*  Documentation code handled in the Properties.cst template  */
   RenderHelper(new Properties()); %>

<% if(IncludeSilverlightSupport) { %>
#if !SILVERLIGHT
<% } %>
        #region Synchronous Factory Methods 

        /// <summary>
        /// Creates a new object of type <see cref="<%=BusinessClassName%><%= Entity.GenericProperty %>"/>. 
        /// </summary>
        /// <returns>Returns a newly instantiated collection of type <see cref="<%=BusinessClassName%><%= Entity.GenericProperty %>"/>.</returns>	
        public static <%= BusinessClassName %><%= Entity.GenericProperty %> New<%= BusinessClassName %>()
        {
            return DataPortal.Create< <%= BusinessClassName %><%= Entity.GenericProperty %> >();
        }

<% foreach(SearchCriteria sc in Entity.SearchCriteria()) { %>
        /// <summary>
        /// Returns a <see cref="<%=BusinessClassName%><%= Entity.GenericProperty %>"/> object of the specified criteria. 
        /// </summary>
<% foreach(Member item in  sc.Members) { %>
        /// <param name="<%= item.VariableName%>"><%if(item.HasDescription){%><%=item.Description%>.<%}else{%>No additional detail available.<%}%></param>
<%}%>
        /// <returns>A <see cref="<%=BusinessClassName%><%= Entity.GenericProperty %>"/> object of the specified criteria.</returns>
        public static <%= BusinessClassName %><%= Entity.GenericProperty %> <%= sc.MethodName %>(<%= sc.Members.BuildParametersVariables() %>)
        {
            var criteria = new <%= CriteriaClassName %><%= Entity.GenericProperty %> {<%= sc.Members.BuildObjectInitializer() %>};
            <%= sc.Members.BuildNullableObjectInitializer()%>
            
            return DataPortal.Fetch< <%= BusinessClassName %><%= Entity.GenericProperty %> >(criteria);
        }
<% } %>

<% if(UseDeferredDeletion){ %>
        //public static void Delete<%= BusinessClassName %>(<%= Entity.PrimaryKey.KeyMembers.BuildParametersVariables() %>)
        //{
        //    var criteria = new <%= CriteriaClassName %><%= Entity.GenericProperty %> {<%= Entity.PrimaryKey.KeyMembers.BuildObjectInitializer() %>};
        //    <%= Entity.PrimaryKey.KeyMembers.BuildNullableObjectInitializer()%>
        //    
        //    DataPortal.Delete<% if(IsCSLA40) { %>< <%= BusinessClassName %><%= Entity.GenericProperty %> ><% } %>(criteria);
        //}
<% } else { %>
        public static void Delete<%= BusinessClassName %>(<%= Entity.PrimaryKey.KeyMembers.BuildParametersVariables() %>)
        {
            var criteria = new <%= CriteriaClassName %><%= Entity.GenericProperty %> {<%= Entity.PrimaryKey.KeyMembers.BuildObjectInitializer() %>};
            <%= Entity.PrimaryKey.KeyMembers.BuildNullableObjectInitializer()%>
            
            DataPortal.Delete<% if(IsCSLA40) { %>< <%= BusinessClassName %><%= Entity.GenericProperty %> ><% } %>(criteria);
        }
<% } %>

        #endregion
<% if(IncludeSilverlightSupport) { %>
#endif

        #region Asynchronous Factory Methods

#if SILVERLIGHT
        public static void New<%= BusinessClassName %>Async(EventHandler<DataPortalResult<<%= BusinessClassName %><%= Entity.GenericProperty %>>> handler)
        {
            var dp = new DataPortal<<%= BusinessClassName %><%= Entity.GenericProperty %>>();
            dp.CreateCompleted += handler;
            dp.BeginCreate();
        }
<% foreach(SearchCriteria sc in Entity.SearchCriteria()) { %>

        public static void <%= sc.MethodName %>Async(<%= sc.Members.BuildParametersVariables() %>, EventHandler<DataPortalResult< <%= BusinessClassName %><%= Entity.GenericProperty %> >> handler)
        {
            var criteria = new <%= CriteriaClassName %><%= Entity.GenericProperty %>{ <%= sc.Members.BuildObjectInitializer() %>};
            <%= sc.Members.BuildNullableObjectInitializer()%>
            
            var dp = new DataPortal< <%= BusinessClassName %><%= Entity.GenericProperty %> >();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }
<% } %> 

<% if(UseDeferredDeletion){ %>
        //public static void Delete<%= BusinessClassName %>(<%= Entity.PrimaryKey.KeyMembers.BuildParametersVariables() %>)
        //{
        //    var criteria = new <%= CriteriaClassName %><%= Entity.GenericProperty %> {<%= Entity.PrimaryKey.KeyMembers.BuildObjectInitializer() %>};
        //    <%= Entity.PrimaryKey.KeyMembers.BuildNullableObjectInitializer()%>
        //    
        //    DataPortal.Delete<% if(IsCSLA40) { %>< <%= BusinessClassName %><%= Entity.GenericProperty %> ><% } %>(criteria);
        //}
<% } else { %>
        public static void Delete<%= BusinessClassName %>Async(<%= Entity.PrimaryKey.KeyMembers.BuildParametersVariables()%>, EventHandler<DataPortalResult<<%= BusinessClassName %><%= Entity.GenericProperty %>>> handler)
        {
            var criteria = new <%= CriteriaClassName %><%= Entity.GenericProperty %>{<%= Entity.PrimaryKey.KeyMembers.BuildObjectInitializer() %>};
            <%=Entity.PrimaryKey.KeyMembers.BuildNullableObjectInitializer()%>
            
            var dp = new DataPortal< <%= BusinessClassName %><%= Entity.GenericProperty %> >();
            dp.DeleteCompleted += handler;
            dp.BeginDelete(criteria);
        }
<% } %>
#endif
        
        #endregion
<% } %>

<%/*  Documentation code handled in the IsDirty.cst template  */
   RenderHelper(new IsDirty()); %>
<%/*  Documentation code handled in the appropriate PartialMethods template  */
   RenderHelper(new PartialMethods()); %>
<%/*  Documentation code handled in the Exists.cst template  */
   RenderHelper(new Exists()); %>
<%/*  Documentation code handled in the CompositeKeyMethods.cst template  */
   RenderHelper(new CompositeKeyMethods()); %>
    }
}