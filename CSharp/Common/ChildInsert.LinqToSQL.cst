<%-- Author: Blake Niemyjski --%>
<%--         Joe McPherson   --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="CodeSmith.QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA Map" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.CSharpExtensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.QuickStart" Path="..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.QuickStart" %>
			//LinqToSQL Modification
			bool cancel = false;
            OnChildInserting(ref cancel);
            if (cancel) return;
			
			// Get <%= StringUtil.ToPascalCase(Entity.Table.Name) %> data for a single criteria
            using (var ctx = ContextManager<DAL.PetshopDataContext>.GetManager(LinqToSQLHelper.ConnectionString, true))
			{
				DAL.<%= StringUtil.ToPascalCase(Entity.Table.Name) %> item = new DAL.<%= StringUtil.ToPascalCase(Entity.Table.Name) %>();
			
<%= Entity.MembersUpdateInsert.BuildLinqToSQLCommandParameters(false,true,false,4)%>
			
				ctx.DataContext.<%= StringUtil.ToPascalCase(Entity.Table.Name) %>.InsertOnSubmit(item);
           	 	ctx.DataContext.SubmitChanges();

<% 	foreach(Member member in Entity.PrimaryKey.KeyMembers)%>
<%	{%>
<%		if(!member.IsIdentity)%>
<%		{%>
				LoadProperty(_<%= member.VariableName %>Property, this.<%= member.PropertyName %>);
<%		}%>
<%	} %>
<% 	if(Entity.AssociatedToManyUnion.Count > 0 || Entity.AssociatedManyToOne.Count > 0)
	{%>         	
				FieldManager.UpdateChildren(this);
<% 	} %>
				OnChildInserted();
			}
