<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="Generator.CSLA.EntityCodeTemplate" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.CSharpExtensions" Path="..\..\Common" %>
<%@ Assembly Name="Generator.CSLA" Path="..\..\Common" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="Generator.CSLA" %>
        #region Contructor(s)

        public <%= BusinessClassName %>()
        { /* Require use of factory methods */ }

<% if(Entity.HasKey) { %>
        internal <%= BusinessClassName %>(<%= Entity.GetProperties(PropertyType.Key).BuildParametersVariables() %>)
        {
            using(BypassPropertyChecks)
            {
<% foreach(var property in Entity.GetProperties(PropertyType.Key)) { if(UseMemberVariables) { %>
                <%= property.PrivateMemberVariableName %> = <%= property.VariableName %>;
<% } else { %>
                LoadProperty(<%= property.PrivateMemberVariableName %>Property, <%= property.VariableName %>);
<% } } %>
            }
        }

<% } %>
<% if(IncludeSilverlightSupport) { %>
#if !SILVERLIGHT
<% } %>
<%if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL || DataAccessImplementation == DataAccessMethod.StoredProcedures){ %>
        internal <%= BusinessClassName %>(SafeDataReader reader)
        {
            Map(reader);
<% if(RenderOptionalContent) { %>
            MarkAsChild();  
<% } %>
        }
<% } %>
<%  if(DataAccessImplementation == DataAccessMethod.LinqToSQL ) { %>
        internal <%= BusinessClassName %>(DAL.<%=Entity.Name%> DataSource)
        {
            Map(DataSource);
<% if(RenderOptionalContent) { %>
            MarkAsChild();  
<% } %>
<% if(IncludeSilverlightSupport) { %>
#endif
<% } } %>
        #endregion