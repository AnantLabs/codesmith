<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="Generator.CSLA.EntityCodeTemplate" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="Generator.CSLA" Path="..\..\Common" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>

        #region Map

        private void Map(SafeDataReader reader)
        {
            bool cancel = false;
            OnMapping(reader, ref cancel);
            if (cancel) return;

<% foreach(IProperty property in Entity.GetProperties(PropertyType.NoConcurrency)) { if(UseMemberVariables) { %>
    <% if( property.IsNullable && property.SystemType != "System.String" && property.SystemType != "System.Byte[]") {%>
            <%= property.PrivateMemberVariableName %> = reader.IsDBNull("<%= property.KeyName %>") ? (<%= property.SystemType %>)null : <%if(!property.HasByteArrayColumn()) { %>reader.<%= property.GetReaderMethod() %>("<%= property.KeyName %>");<% } else { %>ADOHelper.GetBytes(reader);<% } %>
    <% } else {%>
            <%= property.PrivateMemberVariableName %> = <%if(!property.HasByteArrayColumn()) { %>reader.<%= property.GetReaderMethod() %>("<%= property.KeyName %>");<% } else { %>ADOHelper.GetBytes(reader);<% } %>
<% } } else { %>
            LoadProperty(<%= property.PrivateMemberVariableName %>Property, <%if(!property.HasByteArrayColumn()) { %>reader["<%= property.KeyName %>"]);<% } else { %>ADOHelper.GetBytes(reader, "<%= property.KeyName %>"));<% } %>
<% } } %>

            OnMapped();
        }

        private void Child_Fetch(SafeDataReader reader)
        {
            Map(reader);
        }

        #endregion
