<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="CodeSmith.QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA Map" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.QuickStart" Path="..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.QuickStart" %>
        #region Business Rules

        /// <summary>
        /// Contains the Codesmith generated validation rules.
        /// </summary>
        protected override void AddBusinessRules()
        {
            // Call the base class, if this call isn't made than any declared System.ComponentModel.DataAnnotations rules will not work.
            base.AddBusinessRules();

            if(AddBusinessValidationRules())
                return;

<%     foreach(Member member in Entity.MembersNoRowVersion){ %>
<% if(member.SystemType == "System.String" ) { %>
<% if(!member.IsNullable) { %>
<% if(IsCSLA40) { %>
            BusinessRules.AddRule(new Csla.Rules.CommonRules.Required(<%= member.PrivateMemberVariableName %>Property));
<% } else { %>
            ValidationRules.AddRule(CommonRules.StringRequired, <%= member.PrivateMemberVariableName %>Property);
<% } }
if(!member.ExcludeBusinessSizeRule()) { %>
<% if(IsCSLA40) { %>
            BusinessRules.AddRule(new Csla.Rules.CommonRules.MaxLength(<%= member.PrivateMemberVariableName %>Property, <%= member.Size %>));
<% } else { %>
            ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(<%= member.PrivateMemberVariableName %>Property, <%= member.Size %>));
<% } } } } %>
        }

        #endregion
