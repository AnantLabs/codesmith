//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Data.Services.Common;
namespace Petshop.Data
{
    /// <summary>
    /// The class representing the dbo.Orders table.
    /// </summary>
    [Table(Name="dbo.Orders")]
    [DataContract(IsReference=true)]
    [ScaffoldTable(true)]
    [MetadataType(typeof(Metadata))]
	[DataServiceKey("OrderId")]
    public partial class Orders
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Orders"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Orders()
        {
            OnCreated();
            Initialize();
        }
        
        private void Initialize()
        {
            _lineItemList = new EntitySet<LineItem>(
                new System.Action<LineItem>(this.Attach_LineItemList),
                new System.Action<LineItem>(this.Detach_LineItemList));
            _orderStatusList = new EntitySet<OrderStatus>(
                new System.Action<OrderStatus>(this.Attach_OrderStatusList),
                new System.Action<OrderStatus>(this.Detach_OrderStatusList));
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _orderId = default(int);

        /// <summary>
        /// Gets the OrderId column value.
        /// </summary>
        [Column(Name="OrderId", Storage="_orderId", DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        [DataMember(Order=1)]
        public int OrderId
        {
            get { return _orderId; }
            set
            {
                if (_orderId != value)
                {
                    OnOrderIdChanging(value);
                    OnPropertyChanging("OrderId");
                    _orderId = value;
                    OnPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        
        private string _userId;

        /// <summary>
        /// Gets or sets the UserId column value.
        /// </summary>
        [Column(Name="UserId", Storage="_userId", DbType="varchar(20) NOT NULL", CanBeNull=false)]
        [DataMember(Order=2)]
        public string UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    OnUserIdChanging(value);
                    OnPropertyChanging("UserId");
                    _userId = value;
                    OnPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        
        private System.DateTime _orderDate;

        /// <summary>
        /// Gets or sets the OrderDate column value.
        /// </summary>
        [Column(Name="OrderDate", Storage="_orderDate", DbType="datetime NOT NULL", CanBeNull=false)]
        [DataMember(Order=3)]
        public System.DateTime OrderDate
        {
            get { return _orderDate; }
            set
            {
                if (_orderDate != value)
                {
                    OnOrderDateChanging(value);
                    OnPropertyChanging("OrderDate");
                    _orderDate = value;
                    OnPropertyChanged("OrderDate");
                    OnOrderDateChanged();
                }
            }
        }
        
        private string _shipAddr1;

        /// <summary>
        /// Gets or sets the ShipAddr1 column value.
        /// </summary>
        [Column(Name="ShipAddr1", Storage="_shipAddr1", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=4)]
        public string ShipAddr1
        {
            get { return _shipAddr1; }
            set
            {
                if (_shipAddr1 != value)
                {
                    OnShipAddr1Changing(value);
                    OnPropertyChanging("ShipAddr1");
                    _shipAddr1 = value;
                    OnPropertyChanged("ShipAddr1");
                    OnShipAddr1Changed();
                }
            }
        }
        
        private string _shipAddr2;

        /// <summary>
        /// Gets or sets the ShipAddr2 column value.
        /// </summary>
        [Column(Name="ShipAddr2", Storage="_shipAddr2", DbType="varchar(80)")]
        [DataMember(Order=5)]
        public string ShipAddr2
        {
            get { return _shipAddr2; }
            set
            {
                if (_shipAddr2 != value)
                {
                    OnShipAddr2Changing(value);
                    OnPropertyChanging("ShipAddr2");
                    _shipAddr2 = value;
                    OnPropertyChanged("ShipAddr2");
                    OnShipAddr2Changed();
                }
            }
        }
        
        private string _shipCity;

        /// <summary>
        /// Gets or sets the ShipCity column value.
        /// </summary>
        [Column(Name="ShipCity", Storage="_shipCity", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=6)]
        public string ShipCity
        {
            get { return _shipCity; }
            set
            {
                if (_shipCity != value)
                {
                    OnShipCityChanging(value);
                    OnPropertyChanging("ShipCity");
                    _shipCity = value;
                    OnPropertyChanged("ShipCity");
                    OnShipCityChanged();
                }
            }
        }
        
        private string _shipState;

        /// <summary>
        /// Gets or sets the ShipState column value.
        /// </summary>
        [Column(Name="ShipState", Storage="_shipState", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=7)]
        public string ShipState
        {
            get { return _shipState; }
            set
            {
                if (_shipState != value)
                {
                    OnShipStateChanging(value);
                    OnPropertyChanging("ShipState");
                    _shipState = value;
                    OnPropertyChanged("ShipState");
                    OnShipStateChanged();
                }
            }
        }
        
        private string _shipZip;

        /// <summary>
        /// Gets or sets the ShipZip column value.
        /// </summary>
        [Column(Name="ShipZip", Storage="_shipZip", DbType="varchar(20) NOT NULL", CanBeNull=false)]
        [DataMember(Order=8)]
        public string ShipZip
        {
            get { return _shipZip; }
            set
            {
                if (_shipZip != value)
                {
                    OnShipZipChanging(value);
                    OnPropertyChanging("ShipZip");
                    _shipZip = value;
                    OnPropertyChanged("ShipZip");
                    OnShipZipChanged();
                }
            }
        }
        
        private string _shipCountry;

        /// <summary>
        /// Gets or sets the ShipCountry column value.
        /// </summary>
        [Column(Name="ShipCountry", Storage="_shipCountry", DbType="varchar(20) NOT NULL", CanBeNull=false)]
        [DataMember(Order=9)]
        public string ShipCountry
        {
            get { return _shipCountry; }
            set
            {
                if (_shipCountry != value)
                {
                    OnShipCountryChanging(value);
                    OnPropertyChanging("ShipCountry");
                    _shipCountry = value;
                    OnPropertyChanged("ShipCountry");
                    OnShipCountryChanged();
                }
            }
        }
        
        private string _billAddr1;

        /// <summary>
        /// Gets or sets the BillAddr1 column value.
        /// </summary>
        [Column(Name="BillAddr1", Storage="_billAddr1", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=10)]
        public string BillAddr1
        {
            get { return _billAddr1; }
            set
            {
                if (_billAddr1 != value)
                {
                    OnBillAddr1Changing(value);
                    OnPropertyChanging("BillAddr1");
                    _billAddr1 = value;
                    OnPropertyChanged("BillAddr1");
                    OnBillAddr1Changed();
                }
            }
        }
        
        private string _billAddr2;

        /// <summary>
        /// Gets or sets the BillAddr2 column value.
        /// </summary>
        [Column(Name="BillAddr2", Storage="_billAddr2", DbType="varchar(80)")]
        [DataMember(Order=11)]
        public string BillAddr2
        {
            get { return _billAddr2; }
            set
            {
                if (_billAddr2 != value)
                {
                    OnBillAddr2Changing(value);
                    OnPropertyChanging("BillAddr2");
                    _billAddr2 = value;
                    OnPropertyChanged("BillAddr2");
                    OnBillAddr2Changed();
                }
            }
        }
        
        private string _billCity;

        /// <summary>
        /// Gets or sets the BillCity column value.
        /// </summary>
        [Column(Name="BillCity", Storage="_billCity", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=12)]
        public string BillCity
        {
            get { return _billCity; }
            set
            {
                if (_billCity != value)
                {
                    OnBillCityChanging(value);
                    OnPropertyChanging("BillCity");
                    _billCity = value;
                    OnPropertyChanged("BillCity");
                    OnBillCityChanged();
                }
            }
        }
        
        private string _billState;

        /// <summary>
        /// Gets or sets the BillState column value.
        /// </summary>
        [Column(Name="BillState", Storage="_billState", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=13)]
        public string BillState
        {
            get { return _billState; }
            set
            {
                if (_billState != value)
                {
                    OnBillStateChanging(value);
                    OnPropertyChanging("BillState");
                    _billState = value;
                    OnPropertyChanged("BillState");
                    OnBillStateChanged();
                }
            }
        }
        
        private string _billZip;

        /// <summary>
        /// Gets or sets the BillZip column value.
        /// </summary>
        [Column(Name="BillZip", Storage="_billZip", DbType="varchar(20) NOT NULL", CanBeNull=false)]
        [DataMember(Order=14)]
        public string BillZip
        {
            get { return _billZip; }
            set
            {
                if (_billZip != value)
                {
                    OnBillZipChanging(value);
                    OnPropertyChanging("BillZip");
                    _billZip = value;
                    OnPropertyChanged("BillZip");
                    OnBillZipChanged();
                }
            }
        }
        
        private string _billCountry;

        /// <summary>
        /// Gets or sets the BillCountry column value.
        /// </summary>
        [Column(Name="BillCountry", Storage="_billCountry", DbType="varchar(20) NOT NULL", CanBeNull=false)]
        [DataMember(Order=15)]
        public string BillCountry
        {
            get { return _billCountry; }
            set
            {
                if (_billCountry != value)
                {
                    OnBillCountryChanging(value);
                    OnPropertyChanging("BillCountry");
                    _billCountry = value;
                    OnPropertyChanged("BillCountry");
                    OnBillCountryChanged();
                }
            }
        }
        
        private string _courier;

        /// <summary>
        /// Gets or sets the Courier column value.
        /// </summary>
        [Column(Name="Courier", Storage="_courier", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=16)]
        public string Courier
        {
            get { return _courier; }
            set
            {
                if (_courier != value)
                {
                    OnCourierChanging(value);
                    OnPropertyChanging("Courier");
                    _courier = value;
                    OnPropertyChanged("Courier");
                    OnCourierChanged();
                }
            }
        }
        
        private decimal _totalPrice;

        /// <summary>
        /// Gets or sets the TotalPrice column value.
        /// </summary>
        [Column(Name="TotalPrice", Storage="_totalPrice", DbType="decimal(10,2) NOT NULL", CanBeNull=false)]
        [DataMember(Order=17)]
        public decimal TotalPrice
        {
            get { return _totalPrice; }
            set
            {
                if (_totalPrice != value)
                {
                    OnTotalPriceChanging(value);
                    OnPropertyChanging("TotalPrice");
                    _totalPrice = value;
                    OnPropertyChanged("TotalPrice");
                    OnTotalPriceChanged();
                }
            }
        }
        
        private string _billToFirstName;

        /// <summary>
        /// Gets or sets the BillToFirstName column value.
        /// </summary>
        [Column(Name="BillToFirstName", Storage="_billToFirstName", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=18)]
        public string BillToFirstName
        {
            get { return _billToFirstName; }
            set
            {
                if (_billToFirstName != value)
                {
                    OnBillToFirstNameChanging(value);
                    OnPropertyChanging("BillToFirstName");
                    _billToFirstName = value;
                    OnPropertyChanged("BillToFirstName");
                    OnBillToFirstNameChanged();
                }
            }
        }
        
        private string _billToLastName;

        /// <summary>
        /// Gets or sets the BillToLastName column value.
        /// </summary>
        [Column(Name="BillToLastName", Storage="_billToLastName", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=19)]
        public string BillToLastName
        {
            get { return _billToLastName; }
            set
            {
                if (_billToLastName != value)
                {
                    OnBillToLastNameChanging(value);
                    OnPropertyChanging("BillToLastName");
                    _billToLastName = value;
                    OnPropertyChanged("BillToLastName");
                    OnBillToLastNameChanged();
                }
            }
        }
        
        private string _shipToFirstName;

        /// <summary>
        /// Gets or sets the ShipToFirstName column value.
        /// </summary>
        [Column(Name="ShipToFirstName", Storage="_shipToFirstName", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=20)]
        public string ShipToFirstName
        {
            get { return _shipToFirstName; }
            set
            {
                if (_shipToFirstName != value)
                {
                    OnShipToFirstNameChanging(value);
                    OnPropertyChanging("ShipToFirstName");
                    _shipToFirstName = value;
                    OnPropertyChanged("ShipToFirstName");
                    OnShipToFirstNameChanged();
                }
            }
        }
        
        private string _shipToLastName;

        /// <summary>
        /// Gets or sets the ShipToLastName column value.
        /// </summary>
        [Column(Name="ShipToLastName", Storage="_shipToLastName", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember(Order=21)]
        public string ShipToLastName
        {
            get { return _shipToLastName; }
            set
            {
                if (_shipToLastName != value)
                {
                    OnShipToLastNameChanging(value);
                    OnPropertyChanging("ShipToLastName");
                    _shipToLastName = value;
                    OnPropertyChanged("ShipToLastName");
                    OnShipToLastNameChanged();
                }
            }
        }
        
        private int _authorizationNumber;

        /// <summary>
        /// Gets or sets the AuthorizationNumber column value.
        /// </summary>
        [Column(Name="AuthorizationNumber", Storage="_authorizationNumber", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember(Order=22)]
        public int AuthorizationNumber
        {
            get { return _authorizationNumber; }
            set
            {
                if (_authorizationNumber != value)
                {
                    OnAuthorizationNumberChanging(value);
                    OnPropertyChanging("AuthorizationNumber");
                    _authorizationNumber = value;
                    OnPropertyChanged("AuthorizationNumber");
                    OnAuthorizationNumberChanged();
                }
            }
        }
        
        private string _locale;

        /// <summary>
        /// Gets or sets the Locale column value.
        /// </summary>
        [Column(Name="Locale", Storage="_locale", DbType="varchar(20) NOT NULL", CanBeNull=false)]
        [DataMember(Order=23)]
        public string Locale
        {
            get { return _locale; }
            set
            {
                if (_locale != value)
                {
                    OnLocaleChanging(value);
                    OnPropertyChanging("Locale");
                    _locale = value;
                    OnPropertyChanged("Locale");
                    OnLocaleChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntitySet<LineItem> _lineItemList;
        
        /// <summary>
        /// Gets or sets the LineItem association.
        /// </summary>
        [Association(Name="Orders_LineItem", Storage="_lineItemList", ThisKey="OrderId", OtherKey="OrderId")]
        [DataMember]
        public EntitySet<LineItem> LineItemList
        {
            get { return _lineItemList; }
            set { _lineItemList.Assign(value); }
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Attach_LineItemList(LineItem entity)
        {
            OnPropertyChanging(null);
            entity.Orders = this;
            OnPropertyChanged(null);
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Detach_LineItemList(LineItem entity)
        {
            OnPropertyChanging(null);
            entity.Orders = null;
            OnPropertyChanged(null);
        }
        
        private EntitySet<OrderStatus> _orderStatusList;
        
        /// <summary>
        /// Gets or sets the OrderStatus association.
        /// </summary>
        [Association(Name="Orders_OrderStatus", Storage="_orderStatusList", ThisKey="OrderId", OtherKey="OrderId")]
        [DataMember]
        public EntitySet<OrderStatus> OrderStatusList
        {
            get { return _orderStatusList; }
            set { _orderStatusList.Assign(value); }
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Attach_OrderStatusList(OrderStatus entity)
        {
            OnPropertyChanging(null);
            entity.Orders = this;
            OnPropertyChanged(null);
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Detach_OrderStatusList(OrderStatus entity)
        {
            OnPropertyChanging(null);
            entity.Orders = null;
            OnPropertyChanged(null);
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when OrderId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnOrderIdChanging(int value);
        /// <summary>Called after OrderId has Changed.</summary>
        partial void OnOrderIdChanged();
        /// <summary>Called when UserId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUserIdChanging(string value);
        /// <summary>Called after UserId has Changed.</summary>
        partial void OnUserIdChanged();
        /// <summary>Called when OrderDate is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnOrderDateChanging(System.DateTime value);
        /// <summary>Called after OrderDate has Changed.</summary>
        partial void OnOrderDateChanged();
        /// <summary>Called when ShipAddr1 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipAddr1Changing(string value);
        /// <summary>Called after ShipAddr1 has Changed.</summary>
        partial void OnShipAddr1Changed();
        /// <summary>Called when ShipAddr2 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipAddr2Changing(string value);
        /// <summary>Called after ShipAddr2 has Changed.</summary>
        partial void OnShipAddr2Changed();
        /// <summary>Called when ShipCity is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipCityChanging(string value);
        /// <summary>Called after ShipCity has Changed.</summary>
        partial void OnShipCityChanged();
        /// <summary>Called when ShipState is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipStateChanging(string value);
        /// <summary>Called after ShipState has Changed.</summary>
        partial void OnShipStateChanged();
        /// <summary>Called when ShipZip is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipZipChanging(string value);
        /// <summary>Called after ShipZip has Changed.</summary>
        partial void OnShipZipChanged();
        /// <summary>Called when ShipCountry is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipCountryChanging(string value);
        /// <summary>Called after ShipCountry has Changed.</summary>
        partial void OnShipCountryChanged();
        /// <summary>Called when BillAddr1 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillAddr1Changing(string value);
        /// <summary>Called after BillAddr1 has Changed.</summary>
        partial void OnBillAddr1Changed();
        /// <summary>Called when BillAddr2 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillAddr2Changing(string value);
        /// <summary>Called after BillAddr2 has Changed.</summary>
        partial void OnBillAddr2Changed();
        /// <summary>Called when BillCity is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillCityChanging(string value);
        /// <summary>Called after BillCity has Changed.</summary>
        partial void OnBillCityChanged();
        /// <summary>Called when BillState is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillStateChanging(string value);
        /// <summary>Called after BillState has Changed.</summary>
        partial void OnBillStateChanged();
        /// <summary>Called when BillZip is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillZipChanging(string value);
        /// <summary>Called after BillZip has Changed.</summary>
        partial void OnBillZipChanged();
        /// <summary>Called when BillCountry is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillCountryChanging(string value);
        /// <summary>Called after BillCountry has Changed.</summary>
        partial void OnBillCountryChanged();
        /// <summary>Called when Courier is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCourierChanging(string value);
        /// <summary>Called after Courier has Changed.</summary>
        partial void OnCourierChanged();
        /// <summary>Called when TotalPrice is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTotalPriceChanging(decimal value);
        /// <summary>Called after TotalPrice has Changed.</summary>
        partial void OnTotalPriceChanged();
        /// <summary>Called when BillToFirstName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillToFirstNameChanging(string value);
        /// <summary>Called after BillToFirstName has Changed.</summary>
        partial void OnBillToFirstNameChanged();
        /// <summary>Called when BillToLastName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBillToLastNameChanging(string value);
        /// <summary>Called after BillToLastName has Changed.</summary>
        partial void OnBillToLastNameChanged();
        /// <summary>Called when ShipToFirstName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipToFirstNameChanging(string value);
        /// <summary>Called after ShipToFirstName has Changed.</summary>
        partial void OnShipToFirstNameChanged();
        /// <summary>Called when ShipToLastName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShipToLastNameChanging(string value);
        /// <summary>Called after ShipToLastName has Changed.</summary>
        partial void OnShipToLastNameChanged();
        /// <summary>Called when AuthorizationNumber is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAuthorizationNumberChanging(int value);
        /// <summary>Called after AuthorizationNumber has Changed.</summary>
        partial void OnAuthorizationNumberChanged();
        /// <summary>Called when Locale is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLocaleChanging(string value);
        /// <summary>Called after Locale has Changed.</summary>
        partial void OnLocaleChanged();
        #endregion
        
        #region Serialization
        
        private bool serializing;
        
        [OnSerializing()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public void OnSerializing(StreamingContext context) {
            serializing = true;
        }
        
        [OnSerialized()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public void OnSerialized(StreamingContext context) {
            serializing = false;
        }
        
        [OnDeserializing()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public void OnDeserializing(StreamingContext context) {
            Initialize();
        }
        
        #endregion
        
    }
}

