//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CodeSmith: v5.2.1, CSLA Templates: v1.5.0.1413, CSLA Framework: v3.8.2.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'ProductList.cs'.
//
//     Template: EditableChildList.Generated.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region Using declarations

using System;
using System.Collections.Generic;
using Csla;

#endregion

namespace PetShop.Tests.StoredProcedures
{
    [Serializable]
    public partial class ProductList : BusinessListBase< ProductList, Product >
    {
        #region Factory Methods 
        
        internal static ProductList NewList()
        {
            return DataPortal.CreateChild< ProductList >();
        }

        internal static ProductList GetByProductId(System.String productId)
        {
            return DataPortal.FetchChild< ProductList >(
                new ProductCriteria{ProductId = productId});
        }

        internal static ProductList GetByName(System.String name)
        {
            return DataPortal.FetchChild< ProductList >(
                new ProductCriteria{Name = name});
        }

        internal static ProductList GetByCategoryId(System.String categoryId)
        {
            return DataPortal.FetchChild< ProductList >(
                new ProductCriteria{CategoryId = categoryId});
        }

        internal static ProductList GetByCategoryIdName(System.String categoryId, System.String name)
        {
            return DataPortal.FetchChild< ProductList >(
                new ProductCriteria{CategoryId = categoryId, Name = name});
        }

        internal static ProductList GetByCategoryIdProductIdName(System.String categoryId, System.String productId, System.String name)
        {
            return DataPortal.FetchChild< ProductList >(
                new ProductCriteria{CategoryId = categoryId, ProductId = productId, Name = name});
        }

        internal static ProductList GetAll()
        {
            return DataPortal.FetchChild< ProductList >(new ProductCriteria());
        }

        private ProductList()
        {
            AllowNew = true;
            MarkAsChild();
        }
        
        #endregion

        #region Properties
        
        protected override object AddNewCore()
        {
            Product item = PetShop.Tests.StoredProcedures.Product.NewProduct();
            Add(item);
            return item;
        }
        
        #endregion


        #region Exists Command

        public static bool Exists(ProductCriteria criteria)
        {
            return PetShop.Tests.StoredProcedures.Product.Exists(criteria);
        }

        #endregion
    }
}