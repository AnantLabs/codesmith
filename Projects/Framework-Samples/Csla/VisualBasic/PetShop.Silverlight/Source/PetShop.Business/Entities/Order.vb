'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using CodeSmith: v5.2.2, CSLA Templates: v3.0.0.1845, CSLA Framework: v4.0.0.
'       Changes to this template will not be lost.
'
'     Template: SwitchableObject.cst
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System

Imports Csla
Imports Csla.Security
Imports Csla.Rules

Namespace PetShop.Business
    Public Partial Class Order
#Region "Business Rules"
    
        ''' <summary>
        ''' All custom rules need to be placed in this method.
        ''' </summary>
        ''' <Returns>Return true to override the generated rules If false generated rules will be run.</Returns>
        Protected Function AddBusinessValidationRules() As Boolean
            ' TODO: add validation rules
            'ValidationRules.AddRule(RuleMethod, "")
    
            Return False
        End Function
    
#End Region
    
#Region "Authorization Rules"
    
#If Not Silverlight Then
        Protected Shared Sub AddObjectAuthorizationRules()
            'Csla.Rules.BusinessRules.AddRule(GetType(Order), New Csla.Rules.CommonRules.IsInRole(Csla.Rules.AuthorizationActions.CreateObject, "SomeRole"))
            'Csla.Rules.BusinessRules.AddRule(GetType(Order), New Csla.Rules.CommonRules.IsInRole(Csla.Rules.AuthorizationActions.EditObject, "SomeRole"))
            'Csla.Rules.BusinessRules.AddRule(GetType(Order), New Csla.Rules.CommonRules.IsInRole(Csla.Rules.AuthorizationActions.DeleteObject, "SomeRole", "SomeAdminRole"))
        End Sub
#End If

	
    #End Region

#Region "Custom Factory Methods"

    ''' <summary>
    ''' Uses the profile's uniqueID to look up the order.
    ''' </summary>
    ''' <param name="uniqueId">assumes UserId == Profile.UniqueId</param>
    ''' <returns>an Order.</returns>
    Public Shared Function GetOrder(ByVal uniqueId As String) As Order
        Dim criteria As New OrderCriteria
        criteria.UserId = uniqueId

        Return DataPortal.Fetch(Of Order)(criteria)
    End Function

#End Region

#Region "Properties"

    Private Shared ReadOnly _itemsProperty As PropertyInfo(Of LineItemList) = RegisterProperty(Of LineItemList)(Function(p As Order) p.Items, Csla.RelationshipTypes.LazyLoad)
    Public ReadOnly Property Items() As LineItemList
        Get
            If Not FieldManager.FieldExists(_itemsProperty) Then
                    SetProperty(_itemsProperty, LineItemList.GetByOrderId(OrderId))
            End If

            Return GetProperty(_itemsProperty)
        End Get
    End Property

    Private _creditCard As CreditCard
    Public Property CreditCard() As CreditCard
        Get
            Return _creditCard
        End Get
        Set(ByVal value As CreditCard)
            _creditCard = value
        End Set
    End Property

#End Region

    End Class
End Namespace