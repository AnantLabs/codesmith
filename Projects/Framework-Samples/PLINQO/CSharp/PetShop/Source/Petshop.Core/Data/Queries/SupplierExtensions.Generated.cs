//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Data.Linq;

namespace PetShop.Core.Data
{
    /// <summary>
    /// The query extension class for Supplier.
    /// </summary>
    public static partial class SupplierExtensions
    {

        /// <summary>
        /// Gets an instance by the primary key.
        /// </summary>
        public static PetShop.Core.Data.Supplier ByKey(this IQueryable<PetShop.Core.Data.Supplier> queryable, int suppId)
        {
            var entity = queryable as System.Data.Linq.Table<PetShop.Core.Data.Supplier>;
            if (entity != null && entity.Context.LoadOptions == null)
                return Query.ByKey.Invoke((PetShop.Core.Data.PetShopDataContext)entity.Context, suppId);
            
            return queryable.FirstOrDefault(s => s.SuppId == suppId);
        }

        /// <summary>
        /// Immediately deletes the entity by the primary key from the underlying data source with a single delete command.
        /// </summary>
        /// <param name="table">Represents a table for a particular type in the underlying database containing rows are to be deleted.</param>
        /// <returns>The number of rows deleted from the database.</returns>
        public static int Delete(this System.Data.Linq.Table<PetShop.Core.Data.Supplier> table, int suppId)
        {
            return table.Delete(s => s.SuppId == suppId);
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.Name"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByName(this IQueryable<PetShop.Core.Data.Supplier> queryable, string name)
        {
            return queryable.Where(s => object.Equals(s.Name, name));
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.Status"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByStatus(this IQueryable<PetShop.Core.Data.Supplier> queryable, string status)
        {
            return queryable.Where(s => s.Status == status);
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.Addr1"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByAddr1(this IQueryable<PetShop.Core.Data.Supplier> queryable, string addr1)
        {
            return queryable.Where(s => object.Equals(s.Addr1, addr1));
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.Addr2"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByAddr2(this IQueryable<PetShop.Core.Data.Supplier> queryable, string addr2)
        {
            return queryable.Where(s => object.Equals(s.Addr2, addr2));
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.City"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByCity(this IQueryable<PetShop.Core.Data.Supplier> queryable, string city)
        {
            return queryable.Where(s => object.Equals(s.City, city));
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.State"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByState(this IQueryable<PetShop.Core.Data.Supplier> queryable, string state)
        {
            return queryable.Where(s => object.Equals(s.State, state));
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.Zip"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByZip(this IQueryable<PetShop.Core.Data.Supplier> queryable, string zip)
        {
            return queryable.Where(s => object.Equals(s.Zip, zip));
        }
        
        /// <summary>
        /// Gets a query for <see cref="Supplier.Phone"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.Supplier> ByPhone(this IQueryable<PetShop.Core.Data.Supplier> queryable, string phone)
        {
            return queryable.Where(s => object.Equals(s.Phone, phone));
        }

        #region Query
        /// <summary>
        /// A private class for lazy loading static compiled queries.
        /// </summary>
        private static partial class Query
        {

            internal static readonly Func<PetShop.Core.Data.PetShopDataContext, int, PetShop.Core.Data.Supplier> ByKey = 
                System.Data.Linq.CompiledQuery.Compile(
                    (PetShop.Core.Data.PetShopDataContext db, int suppId) => 
                        db.Supplier.FirstOrDefault(s => s.SuppId == suppId));

        }
        #endregion
    }
}

