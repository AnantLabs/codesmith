
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO NOT MODIFY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Linq
Imports System.Linq
Imports System.Runtime.CompilerServices
Imports System.Linq.Dynamic

Namespace PetShop.Core.Data
    ''' <summary>
    ''' The query extension class for Profile.
    ''' </summary>
    Public Module ProfileExtensions
        ''' <summary>
        ''' Gets an instance by the primary key.
        ''' </summary>
        <System.Runtime.CompilerServices.Extension> _
        Public Function GetByKey(ByVal queryable As IQueryable(Of PetShop.Core.Data.Profile), ByVal uniqueID As Integer) As PetShop.Core.Data.Profile

            Dim entity As System.Data.Linq.Table(Of PetShop.Core.Data.Profile) = CType(queryable, Table(Of PetShop.Core.Data.Profile))
            If (entity IsNot Nothing AndAlso entity.Context.LoadOptions Is Nothing) Then
                Return Query.GetByKey.Invoke(DirectCast(entity.Context, PetShop.Core.Data.PetshopDataContext), uniqueID)
            End If

            Return queryable.FirstOrDefault(Function(p)p.UniqueID = uniqueID)
        End Function
        
        ''' <summary>
        ''' Immediately deletes the entity by the primary key from the underlying data source with a single delete command.
        ''' </summary>
        ''' <param name="table">Represents a table for a particular type in the underlying database containing rows are to be deleted.</param>
        ''' <returns>The number of rows deleted from the database.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function Delete(ByVal table As System.Data.Linq.Table(Of PetShop.Core.Data.Profile), ByVal uniqueID As Integer) As Integer
            Return table.Delete(Function(p)p.UniqueID = uniqueID)
        End Function

        ''' <summary>
        ''' Gets an instance by using a unique index.
        ''' </summary>
        ''' <returns>An instance of the entity or null if not found.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function GetByUsernameApplicationName(ByVal queryable As IQueryable(Of PetShop.Core.Data.Profile), ByVal username As String, ByVal applicationName As String) As PetShop.Core.Data.Profile

            Dim entity As Table(Of PetShop.Core.Data.Profile) = CType(queryable, Table(Of PetShop.Core.Data.Profile))
            If (entity IsNot Nothing AndAlso entity.Context.LoadOptions Is Nothing) Then
                Return Query.GetByUsernameApplicationName.Invoke(DirectCast(entity.Context,PetShop.Core.Data.PetshopDataContext), username, applicationName)
            End If

            Return queryable.FirstOrDefault(Function(p)p.Username = username _
					AndAlso p.ApplicationName = applicationName)
        End Function

        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="uniqueID">UniqueID to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByUniqueID(queryable As IQueryable(Of PetShop.Core.Data.Profile), uniqueID As Integer) As IQueryable(Of PetShop.Core.Data.Profile)
            Return queryable.Where(Function(p)p.UniqueID = uniqueID)
        End Function
        
        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="uniqueID">UniqueID to search for.</param>
        ''' <param name="additionalValues">Additional values to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByUniqueID(queryable As IQueryable(Of PetShop.Core.Data.Profile), uniqueID As Integer, ParamArray additionalValues As Integer()) As IQueryable(Of PetShop.Core.Data.Profile)
            Dim UniqueIDList = New List(Of Integer)()
            UniqueIDList.Add(uniqueID)
        
            If additionalValues IsNot Nothing Then
                UniqueIDList.AddRange(additionalValues)
            End If
        
            If UniqueIDList.Count = 1 Then
                Return queryable.ByUniqueID(UniqueIDList(0))
            End If
        
            Dim expression = DynamicExpression.BuildExpression(Of PetShop.Core.Data.Profile, Boolean)("UniqueID", UniqueIDList)
            Return queryable.Where(expression)
        End Function

        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="username">Username to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByUsername(queryable As IQueryable(Of PetShop.Core.Data.Profile), username As String) As IQueryable(Of PetShop.Core.Data.Profile)
            Return queryable.Where(Function(p)p.Username = username)
        End Function
        
        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="username">Username to search for.</param>
        ''' <param name="additionalValues">Additional values to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByUsername(queryable As IQueryable(Of PetShop.Core.Data.Profile), username As String, ParamArray additionalValues As String()) As IQueryable(Of PetShop.Core.Data.Profile)
            Dim UsernameList = New List(Of String)()
            UsernameList.Add(username)
        
            If additionalValues IsNot Nothing Then
                UsernameList.AddRange(additionalValues)
            End If
        
            If UsernameList.Count = 1 Then
                Return queryable.ByUsername(UsernameList(0))
            End If
        
            Dim expression = DynamicExpression.BuildExpression(Of PetShop.Core.Data.Profile, Boolean)("Username", UsernameList)
            Return queryable.Where(expression)
        End Function

        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="applicationName">ApplicationName to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByApplicationName(queryable As IQueryable(Of PetShop.Core.Data.Profile), applicationName As String) As IQueryable(Of PetShop.Core.Data.Profile)
            Return queryable.Where(Function(p)p.ApplicationName = applicationName)
        End Function
        
        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="applicationName">ApplicationName to search for.</param>
        ''' <param name="additionalValues">Additional values to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByApplicationName(queryable As IQueryable(Of PetShop.Core.Data.Profile), applicationName As String, ParamArray additionalValues As String()) As IQueryable(Of PetShop.Core.Data.Profile)
            Dim ApplicationNameList = New List(Of String)()
            ApplicationNameList.Add(applicationName)
        
            If additionalValues IsNot Nothing Then
                ApplicationNameList.AddRange(additionalValues)
            End If
        
            If ApplicationNameList.Count = 1 Then
                Return queryable.ByApplicationName(ApplicationNameList(0))
            End If
        
            Dim expression = DynamicExpression.BuildExpression(Of PetShop.Core.Data.Profile, Boolean)("ApplicationName", ApplicationNameList)
            Return queryable.Where(expression)
        End Function

        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="isAnonymous">IsAnonymous to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByIsAnonymous(queryable As IQueryable(Of PetShop.Core.Data.Profile), isAnonymous As Boolean?) As IQueryable(Of PetShop.Core.Data.Profile)
            Return queryable.Where(Function(p) Object.Equals(p.IsAnonymous, isAnonymous))
        End Function
        
        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="isAnonymous">IsAnonymous to search for.</param>
        ''' <param name="additionalValues">Additional values to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByIsAnonymous(queryable As IQueryable(Of PetShop.Core.Data.Profile), isAnonymous As Boolean?, ParamArray additionalValues As Boolean?()) As IQueryable(Of PetShop.Core.Data.Profile)
            Dim IsAnonymousList = New List(Of Boolean?)()
            IsAnonymousList.Add(isAnonymous)
        
            If additionalValues IsNot Nothing Then
                IsAnonymousList.AddRange(additionalValues)
            Else
                IsAnonymousList.Add(Nothing)
            End If
        
            If IsAnonymousList.Count = 1 Then
                Return queryable.ByIsAnonymous(IsAnonymousList(0))
            End If
        
            Dim expression = DynamicExpression.BuildExpression(Of PetShop.Core.Data.Profile, Boolean)("IsAnonymous", IsAnonymousList)
            Return queryable.Where(expression)
        End Function

        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="lastActivityDate">LastActivityDate to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByLastActivityDate(queryable As IQueryable(Of PetShop.Core.Data.Profile), lastActivityDate As Date?) As IQueryable(Of PetShop.Core.Data.Profile)
            Return queryable.Where(Function(p) Object.Equals(p.LastActivityDate, lastActivityDate))
        End Function
        
        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="lastActivityDate">LastActivityDate to search for.</param>
        ''' <param name="additionalValues">Additional values to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByLastActivityDate(queryable As IQueryable(Of PetShop.Core.Data.Profile), lastActivityDate As Date?, ParamArray additionalValues As Date?()) As IQueryable(Of PetShop.Core.Data.Profile)
            Dim LastActivityDateList = New List(Of Date?)()
            LastActivityDateList.Add(lastActivityDate)
        
            If additionalValues IsNot Nothing Then
                LastActivityDateList.AddRange(additionalValues)
            Else
                LastActivityDateList.Add(Nothing)
            End If
        
            If LastActivityDateList.Count = 1 Then
                Return queryable.ByLastActivityDate(LastActivityDateList(0))
            End If
        
            Dim expression = DynamicExpression.BuildExpression(Of PetShop.Core.Data.Profile, Boolean)("LastActivityDate", LastActivityDateList)
            Return queryable.Where(expression)
        End Function

        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="lastUpdatedDate">LastUpdatedDate to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByLastUpdatedDate(queryable As IQueryable(Of PetShop.Core.Data.Profile), lastUpdatedDate As Date?) As IQueryable(Of PetShop.Core.Data.Profile)
            Return queryable.Where(Function(p) Object.Equals(p.LastUpdatedDate, lastUpdatedDate))
        End Function
        
        ''' <summary>
        ''' Gets a query for <see cref="PetShop.Core.Data.Profile"/>.
        ''' </summary>
        ''' <param name="queryable">Query to append where clause.</param>
        ''' <param name="lastUpdatedDate">LastUpdatedDate to search for.</param>
        ''' <param name="additionalValues">Additional values to search for.</param>
        ''' <returns>IQueryable with additional where clause.</returns>
        <System.Runtime.CompilerServices.Extension> _
        Public Function ByLastUpdatedDate(queryable As IQueryable(Of PetShop.Core.Data.Profile), lastUpdatedDate As Date?, ParamArray additionalValues As Date?()) As IQueryable(Of PetShop.Core.Data.Profile)
            Dim LastUpdatedDateList = New List(Of Date?)()
            LastUpdatedDateList.Add(lastUpdatedDate)
        
            If additionalValues IsNot Nothing Then
                LastUpdatedDateList.AddRange(additionalValues)
            Else
                LastUpdatedDateList.Add(Nothing)
            End If
        
            If LastUpdatedDateList.Count = 1 Then
                Return queryable.ByLastUpdatedDate(LastUpdatedDateList(0))
            End If
        
            Dim expression = DynamicExpression.BuildExpression(Of PetShop.Core.Data.Profile, Boolean)("LastUpdatedDate", LastUpdatedDateList)
            Return queryable.Where(expression)
        End Function

        'Insert User Defined Extensions here.
        'Anything outside of this Region will be lost at regeneration
        #Region "User Extensions"


        #End Region

        #Region "Query"
        ''' <summary>
        ''' A private class for lazy loading static compiled queries.
        ''' </summary>
        Private Partial Class Query


            Friend Shared ReadOnly GetByKey As Func(Of PetshopDataContext, Integer, PetShop.Core.Data.Profile) = _
                CompiledQuery.Compile( _
                    Function(db As PetshopDataContext , ByVal uniqueID As Integer) _
                        db.Profile.FirstOrDefault(Function(p)p.UniqueID = uniqueID))

            Friend Shared ReadOnly GetByUsernameApplicationName As Func(Of PetshopDataContext, String, String, PetShop.Core.Data.Profile) = _
                CompiledQuery.Compile( _
                    Function(db As PetshopDataContext , ByVal username As String, ByVal applicationName As String) _
                        db.Profile.FirstOrDefault(Function(p)p.Username = username _
							AndAlso p.ApplicationName = applicationName))

            ' Add your compiled queries here.
            'Anything outside of this Region will be lost at regeneration
            #Region "User Queries"

            #End Region

        End Class
        #End Region
    End Module
End Namespace

