'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO Not MODIfY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Diagnostics
Imports System.Runtime.Serialization
Imports System.ComponentModel.DataAnnotations
Imports System.Data.Services.Common

Namespace Petshop.Data
    ''' <summary>
    ''' The class representing the dbo.Cart table.
    ''' </summary>
    <Table(Name:="dbo.Cart")> _
    <DataContract(IsReference:=True)> _
    <ScaffoldTable(True)> _
    <MetadataType(GetType(Cart.Metadata))> _
	<DataServiceKey("CartID")> _
    public Partial Class Cart
        Inherits LinqEntityBase
        
        #Region "Default Constructor"
        ''' <summary>
        ''' Initializes a new instance of the <see cref="Cart"/> class.
        ''' </summary>
        <DebuggerNonUserCodeAttribute()> _
        public  Sub New()
              OnCreated()
            Initialize()
        End Sub
        
        Private Sub Initialize()
            _profiles = Nothing
        End Sub
        #End Region

        #Region "Column Mapped Properties"
        
        Private _cartID As Integer = Nothing

        ''' <summary>
        ''' Gets the CartID column value.
        ''' </summary>
        <Column(Name:="CartID", Storage:="_cartID", DbType:="int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, CanBeNull:=false)> _
        <DataMember(Order:=1)> _
        public Property CartID As Integer
            Get 
                return _cartID 
            End Get
            Set
                If  Not _cartID.Equals(value) Then
                    OnCartIDChanging(value)
                    OnPropertyChanging("CartID")
                    _cartID = value
                    OnPropertyChanged("CartID")
                    OnCartIDChanged()
                End If
            End Set
        End Property
        
        Private _uniqueID As Integer

        ''' <summary>
        ''' Gets or sets the UniqueID column value.
        ''' </summary>
        <Column(Name:="UniqueID", Storage:="_uniqueID", DbType:="int NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=2)> _
        public Property UniqueID As Integer
            Get 
                return _uniqueID 
            End Get
            Set
                If  Not _uniqueID.Equals(value) Then
                    If (_profiles.HasLoadedOrAssignedValue) Then
                        Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
                    End If
                    OnUniqueIDChanging(value)
                    OnPropertyChanging("UniqueID")
                    _uniqueID = value
                    OnPropertyChanged("UniqueID")
                    OnUniqueIDChanged()
                End If
            End Set
        End Property
        
        Private _itemId As String

        ''' <summary>
        ''' Gets or sets the ItemId column value.
        ''' </summary>
        <Column(Name:="ItemId", Storage:="_itemId", DbType:="varchar(10) NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=3)> _
        public Property ItemId As String
            Get 
                return _itemId 
            End Get
            Set
                If String.IsNullOrEmpty(_itemId) OrElse  Not _itemId.Equals(value) Then
                    OnItemIdChanging(value)
                    OnPropertyChanging("ItemId")
                    _itemId = value
                    OnPropertyChanged("ItemId")
                    OnItemIdChanged()
                End If
            End Set
        End Property
        
        Private _name As String

        ''' <summary>
        ''' Gets or sets the Name column value.
        ''' </summary>
        <Column(Name:="Name", Storage:="_name", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=4)> _
        public Property Name As String
            Get 
                return _name 
            End Get
            Set
                If String.IsNullOrEmpty(_name) OrElse  Not _name.Equals(value) Then
                    OnNameChanging(value)
                    OnPropertyChanging("Name")
                    _name = value
                    OnPropertyChanged("Name")
                    OnNameChanged()
                End If
            End Set
        End Property
        
        Private _type As String

        ''' <summary>
        ''' Gets or sets the Type column value.
        ''' </summary>
        <Column(Name:="Type", Storage:="_type", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=5)> _
        public Property Type As String
            Get 
                return _type 
            End Get
            Set
                If String.IsNullOrEmpty(_type) OrElse  Not _type.Equals(value) Then
                    OnTypeChanging(value)
                    OnPropertyChanging("Type")
                    _type = value
                    OnPropertyChanged("Type")
                    OnTypeChanged()
                End If
            End Set
        End Property
        
        Private _price As Decimal

        ''' <summary>
        ''' Gets or sets the Price column value.
        ''' </summary>
        <Column(Name:="Price", Storage:="_price", DbType:="decimal(10,2) NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=6)> _
        public Property Price As Decimal
            Get 
                return _price 
            End Get
            Set
                If  Not _price.Equals(value) Then
                    OnPriceChanging(value)
                    OnPropertyChanging("Price")
                    _price = value
                    OnPropertyChanged("Price")
                    OnPriceChanged()
                End If
            End Set
        End Property
        
        Private _categoryId As String

        ''' <summary>
        ''' Gets or sets the CategoryId column value.
        ''' </summary>
        <Column(Name:="CategoryId", Storage:="_categoryId", DbType:="varchar(10) NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=7)> _
        public Property CategoryId As String
            Get 
                return _categoryId 
            End Get
            Set
                If String.IsNullOrEmpty(_categoryId) OrElse  Not _categoryId.Equals(value) Then
                    OnCategoryIdChanging(value)
                    OnPropertyChanging("CategoryId")
                    _categoryId = value
                    OnPropertyChanged("CategoryId")
                    OnCategoryIdChanged()
                End If
            End Set
        End Property
        
        Private _productId As String

        ''' <summary>
        ''' Gets or sets the ProductId column value.
        ''' </summary>
        <Column(Name:="ProductId", Storage:="_productId", DbType:="varchar(10) NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=8)> _
        public Property ProductId As String
            Get 
                return _productId 
            End Get
            Set
                If String.IsNullOrEmpty(_productId) OrElse  Not _productId.Equals(value) Then
                    OnProductIdChanging(value)
                    OnPropertyChanging("ProductId")
                    _productId = value
                    OnPropertyChanged("ProductId")
                    OnProductIdChanged()
                End If
            End Set
        End Property
        
        Private _isShoppingCart As Boolean

        ''' <summary>
        ''' Gets or sets the IsShoppingCart column value.
        ''' </summary>
        <Column(Name:="IsShoppingCart", Storage:="_isShoppingCart", DbType:="bit NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=9)> _
        public Property IsShoppingCart As Boolean
            Get 
                return _isShoppingCart 
            End Get
            Set
                If  Not _isShoppingCart.Equals(value) Then
                    OnIsShoppingCartChanging(value)
                    OnPropertyChanging("IsShoppingCart")
                    _isShoppingCart = value
                    OnPropertyChanged("IsShoppingCart")
                    OnIsShoppingCartChanged()
                End If
            End Set
        End Property
        
        Private _quantity As Integer

        ''' <summary>
        ''' Gets or sets the Quantity column value.
        ''' </summary>
        <Column(Name:="Quantity", Storage:="_quantity", DbType:="int NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=10)> _
        public Property Quantity As Integer
            Get 
                return _quantity 
            End Get
            Set
                If  Not _quantity.Equals(value) Then
                    OnQuantityChanging(value)
                    OnPropertyChanging("Quantity")
                    _quantity = value
                    OnPropertyChanged("Quantity")
                    OnQuantityChanged()
                End If
            End Set
        End Property
        #End Region
        
        #Region "Association Mapped Properties"
        
        Private  _profiles As EntityRef(Of Profiles)

        ''' <summary>
        ''' Gets or sets the Profiles association.
        ''' </summary>
        <Association(Name:="Profiles_Cart", Storage:="_profiles", ThisKey:="UniqueID", OtherKey:="UniqueID", IsUnique:=true, IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")> _
        <DataMember(Order:=11, EmitDefaultValue:=False)> _
        public Property Profiles As Profiles
            Get
                Return _profiles.Entity 
            End Get
            Set
                Dim previousValue As Profiles = _profiles.Entity
                If Not previousValue Is value Or _profiles.HasLoadedOrAssignedValue = False Then
                    OnPropertyChanging("Profiles")
                    If previousValue IsNot Nothing Then
                        _profiles.Entity = Nothing
                        previousValue.CartList.Remove(Me)
                    End If
                    _profiles.Entity = value
                    If value IsNot Nothing Then
                        value.CartList.Add(Me)
                        _uniqueID = value.UniqueID
                    Else
                        _uniqueID = Nothing
                    End If
                    OnPropertyChanged("Profiles")
                End If
            End Set
        End Property
           #End Region
        
        #Region "Extensibility Method Definitions"
        ''' <summary>Called when this instance is loaded.</summary>
        Private Partial Sub OnLoaded()
        End Sub
        ''' <summary>Called when this instance is being saved.</summary>
        Private Partial Sub OnValidate(ByVal action As ChangeAction)
        End Sub
        ''' <summary>Called when this instance is created.</summary>
        Private Partial Sub OnCreated()
        End Sub
        ''' <summary>Called when CartID is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnCartIDChanging(ByVal value As Integer)
        End Sub
        ''' <summary>Called after CartID has Changed.</summary>
        Private Partial Sub OnCartIDChanged()
        End Sub
        ''' <summary>Called when UniqueID is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnUniqueIDChanging(ByVal value As Integer)
        End Sub
        ''' <summary>Called after UniqueID has Changed.</summary>
        Private Partial Sub OnUniqueIDChanged()
        End Sub
        ''' <summary>Called when ItemId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnItemIdChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after ItemId has Changed.</summary>
        Private Partial Sub OnItemIdChanged()
        End Sub
        ''' <summary>Called when Name is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnNameChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Name has Changed.</summary>
        Private Partial Sub OnNameChanged()
        End Sub
        ''' <summary>Called when Type is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnTypeChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Type has Changed.</summary>
        Private Partial Sub OnTypeChanged()
        End Sub
        ''' <summary>Called when Price is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnPriceChanging(ByVal value As Decimal)
        End Sub
        ''' <summary>Called after Price has Changed.</summary>
        Private Partial Sub OnPriceChanged()
        End Sub
        ''' <summary>Called when CategoryId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnCategoryIdChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after CategoryId has Changed.</summary>
        Private Partial Sub OnCategoryIdChanged()
        End Sub
        ''' <summary>Called when ProductId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnProductIdChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after ProductId has Changed.</summary>
        Private Partial Sub OnProductIdChanged()
        End Sub
        ''' <summary>Called when IsShoppingCart is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnIsShoppingCartChanging(ByVal value As Boolean)
        End Sub
        ''' <summary>Called after IsShoppingCart has Changed.</summary>
        Private Partial Sub OnIsShoppingCartChanged()
        End Sub
        ''' <summary>Called when Quantity is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnQuantityChanging(ByVal value As Integer)
        End Sub
        ''' <summary>Called after Quantity has Changed.</summary>
        Private Partial Sub OnQuantityChanged()
        End Sub
        #End Region
        
        
        #Region "Serialization"
        
        
        <OnDeserializing(), _
         EditorBrowsableAttribute(EditorBrowsableState.Never)> _
        Public Sub OnDeserializing(ByVal context As StreamingContext)
            Initialize
        End Sub
        
        #End Region
    
    End Class
End Namespace

