<%--
	Author: Chris Lasater
		
	
	Description: Runs project Build for DataLayer
		
	Remarks:
		
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Src="../Utility/ProjectHelper.cs" Inherits="Utility.ProjectHelper" Description="Scripts BusinessObjects" Debug="True" %>

<%@ XmlProperty Name="ProcedureMap" Schema="../ProceduresToMap.xsd" Default="../ProceduresToMap.xml" Category="Context" Description="The procedure map XML file." %>


<%@ Register Name="AboutFormTemplate" Template="AboutForm.cst" %>
<%@ Register Name="AboutFormDesignerTemplate" Template="AboutForm.Designer.cst" %>
<%@ Register Name="AboutFormResourceTemplate" Template="AboutForm.resx.cst" %>

<%@ Register Name="ApplicationEntryTemplate" Template="ApplicationEntry.cst" %>

<%@ Register Name="AppConfigTemplate" Template="AppConfig.cst" %>
<%@ Register Name="MainMDITemplate" Template="MainMDI.cst" %>
<%@ Register Name="MainMDIDesignerTemplate" Template="MainMDI.Designer.cst" %>
<%@ Register Name="MainMDIResourcesTemplate" Template="MainMDI.resx.cst" %>

<%@ Register Name="CollectionGridFormTemplate" Template="CollectionGridForm.cst" %>
<%@ Register Name="CollectionGridFormDesignerTemplate" Template="CollectionGridForm.Designer.cst" %>
<%@ Register Name="CollectionGridFormResourcesTemplate" Template="CollectionGridForm.resx.cst" %>
<%@ Register Name="RecordAddFormTemplate" Template="RecordAddForm.cst" %>
<%@ Register Name="RecordAddFormDesignerTemplate" Template="RecordAddForm.Designer.cst" %>
<%@ Register Name="RecordAddFormResourcesTemplate" Template="RecordAddForm.resx.cst" %>
<%@ Register Name="RecordEditFormTemplate" Template="RecordEditForm.cst" %>
<%@ Register Name="RecordEditFormDesignerTemplate" Template="RecordEditForm.Designer.cst" %>
<%@ Register Name="RecordEditFormResourcesTemplate" Template="RecordEditForm.resx.cst" %>

<%@ Register Name="AssemblyInfoTemplate" Template="Properties/AssemblyInfo.cst" %>
<%@ Register Name="MDIFormsProjectTemplate" Template="MDIForms.cst" %>

<%@ Assembly Name="System.Design" %>
<%@ Import NameSpace="System.IO" %>
<%@ Import NameSpace="System.Text.RegularExpressions" %>
<%@ Import NameSpace="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Import NameSpace="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import NameSpace="CodeSmith.CustomProperties" %>

<% BuildProject(); %>

<script runat="template">
public void BuildProject()
{
	try
	{
		this.Response.WriteLine("Begin CodeSmith Build of BL...");
		
		PreserveRegionsMergeStrategy strategy = new PreserveRegionsMergeStrategy("^[ \t]*(?i:Programmer)", "C#");
		// instantiate the sub-template
		AssemblyInfoTemplate asm = this.Create<AssemblyInfoTemplate>();	
		asm.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, asm,strategy,string.Format("MDIForms{0}Properties{1}AssemblyInfo.cs",Path.DirectorySeparatorChar,Path.DirectorySeparatorChar), OutPutDirectory);
		
		#region AboutFormTemplate Template Instantiation	
		
		// instantiate the sub-template
		AboutFormTemplate ab = this.Create<AboutFormTemplate>();	
		ab.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, ab,strategy,string.Format("MDIForms{0}AboutForm.cs",Path.DirectorySeparatorChar), OutPutDirectory);
		
		// instantiate the sub-template
		AboutFormDesignerTemplate abd = this.Create<AboutFormDesignerTemplate>();	
		abd.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, abd,strategy,string.Format("MDIForms{0}AboutForm.Designer.cs",Path.DirectorySeparatorChar), OutPutDirectory);
		
		// instantiate the sub-template
		AboutFormResourceTemplate abr = this.Create<AboutFormResourceTemplate>();	
		abr.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, abr,strategy,string.Format("MDIForms{0}AboutForm.resx",Path.DirectorySeparatorChar), OutPutDirectory);
				
		#endregion
		
		#region Main Application Details
		// instantiate the sub-template
		ApplicationEntryTemplate ape = this.Create<ApplicationEntryTemplate>();	
		ape.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, ape,strategy,string.Format("MDIForms{0}ApplicationEntry.cs",Path.DirectorySeparatorChar), OutPutDirectory);
		
		AppConfigTemplate config = this.Create<AppConfigTemplate>();	
		config.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, config,strategy,string.Format("MDIForms{0}App.Config",Path.DirectorySeparatorChar), OutPutDirectory);
		
		// instantiate the sub-template
		MainMDITemplate mmdi = this.Create<MainMDITemplate>();	
		mmdi.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, mmdi,strategy,string.Format("MDIForms{0}MainMDI.cs",Path.DirectorySeparatorChar), OutPutDirectory);
		
		// instantiate the sub-template
		MainMDIDesignerTemplate mmdd = this.Create<MainMDIDesignerTemplate>();	
		mmdd.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, mmdd,strategy,string.Format("MDIForms{0}MainMDI.Designer.cs",Path.DirectorySeparatorChar), OutPutDirectory);
		
		// instantiate the sub-template
		MainMDIResourcesTemplate mmdr = this.Create<MainMDIResourcesTemplate>();	
		mmdr.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, mmdr,strategy,string.Format("MDIForms{0}MainMDI.resx",Path.DirectorySeparatorChar), OutPutDirectory);
		
		#endregion
		
		this.Response.WriteLine(string.Empty);		
		for(int i = 0;i < ProcedureMap.RecordSets.Count; i++)
		{
			this.Response.WriteLine("Generating source (" + GetSingularName(ProcedureMap.RecordSets[i].Name) + ") ...");				
			
			#region CollectionGrid
			// instantiate the sub-template
			CollectionGridFormTemplate cg = this.Create<CollectionGridFormTemplate>();
			cg.RecordSetName = ProcedureMap.RecordSets[i].Name;
			if(!string.IsNullOrEmpty(ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name))
			{
				//this.TargetDatabase.ConnectionString = ProcedureMap.RecordSets[i].UpdateStoredProcedure.ConnectionString;
				cg.UpdateStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Owner,DateTime.Now);
			}
			
			//this.TargetDatabase.ConnectionString = ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.ConnectionString;
			cg.SelectCollectionStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Owner,DateTime.Now);
			cg.RegisterOutput(this.OutputFile);
			BuildSubTemplate(this, cg,strategy,string.Format("MDIForms{0}{1}Form.cs",Path.DirectorySeparatorChar,GetPluralName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
					
			// instantiate the sub-template
			CollectionGridFormDesignerTemplate cgd = this.Create<CollectionGridFormDesignerTemplate>();
			cgd.RecordSetName = ProcedureMap.RecordSets[i].Name;
			if(!string.IsNullOrEmpty(ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name))
			{
				//this.TargetDatabase.ConnectionString = ProcedureMap.RecordSets[i].UpdateStoredProcedure.ConnectionString;
				cgd.UpdateStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Owner,DateTime.Now);
			}				
			//this.TargetDatabase.ConnectionString = ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.ConnectionString;
			cgd.SelectCollectionStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Owner,DateTime.Now);
			cgd.RegisterOutput(this.OutputFile);
			BuildSubTemplate(this, cgd,strategy,string.Format("MDIForms{0}{1}Form.Designer.cs",Path.DirectorySeparatorChar,GetPluralName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
					
			// instantiate the sub-template
			CollectionGridFormResourcesTemplate cgr = this.Create<CollectionGridFormResourcesTemplate>();
			cgd.RecordSetName = ProcedureMap.RecordSets[i].Name;
			cgr.RegisterOutput(this.OutputFile);
			BuildSubTemplate(this, cgr,strategy,string.Format("MDIForms{0}{1}Form.resx",Path.DirectorySeparatorChar,GetPluralName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
					
			#endregion
			
			if(!string.IsNullOrEmpty(ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name))
			{
				//this.TargetDatabase.ConnectionString = ProcedureMap.RecordSets[i].UpdateStoredProcedure.ConnectionString;
				
				#region Add Record Form Template Instantiation				
				
				// instantiate the sub-template
				RecordAddFormTemplate raf = this.Create<RecordAddFormTemplate>();
				raf.RecordSetName = ProcedureMap.RecordSets[i].Name;
				raf.SelectCollectionStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Owner,DateTime.Now);
				raf.UpdateStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Owner,DateTime.Now);
				raf.RegisterOutput(this.OutputFile);
				BuildSubTemplate(this, raf,strategy,string.Format("MDIForms{0}{1}AddForm.cs",Path.DirectorySeparatorChar,GetSingularName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
						
				// instantiate the sub-template
				RecordAddFormDesignerTemplate rad = this.Create<RecordAddFormDesignerTemplate>();
				rad.RecordSetName = ProcedureMap.RecordSets[i].Name;
				rad.UpdateStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Owner,DateTime.Now);
				rad.RegisterOutput(this.OutputFile);
				BuildSubTemplate(this, rad,strategy,string.Format("MDIForms{0}{1}AddForm.Designer.cs",Path.DirectorySeparatorChar,GetSingularName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
									
				// instantiate the sub-template
				RecordAddFormResourcesTemplate rar = this.Create<RecordAddFormResourcesTemplate>();
				rar.RegisterOutput(this.OutputFile);
				BuildSubTemplate(this, rar,strategy,string.Format("MDIForms{0}{1}AddForm.resx",Path.DirectorySeparatorChar,GetSingularName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
						
				#endregion
				
				#region Edit Record Form Template Instantiation
				// instantiate the sub-template
				RecordEditFormTemplate reft = this.Create<RecordEditFormTemplate>();
				reft.RecordSetName = ProcedureMap.RecordSets[i].Name;
				reft.SelectCollectionStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].SelectCollectionStoredProcedure.Command.Owner,DateTime.Now);
				reft.UpdateStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Owner,DateTime.Now);
				reft.RegisterOutput(this.OutputFile);
				BuildSubTemplate(this, reft,strategy,string.Format("MDIForms{0}{1}EditForm.cs",Path.DirectorySeparatorChar,GetSingularName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
						
				// instantiate the sub-template
				RecordEditFormDesignerTemplate red = this.Create<RecordEditFormDesignerTemplate>();
				red.RecordSetName = ProcedureMap.RecordSets[i].Name;
				red.UpdateStoredProcedure = new SchemaExplorer.CommandSchema(this.TargetDatabase,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Name,ProcedureMap.RecordSets[i].UpdateStoredProcedure.Command.Owner,DateTime.Now);
				red.RegisterOutput(this.OutputFile);
				BuildSubTemplate(this, red,strategy,string.Format("MDIForms{0}{1}EditForm.Designer.cs",Path.DirectorySeparatorChar,GetSingularName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
									
				// instantiate the sub-template
				RecordEditFormResourcesTemplate rer = this.Create<RecordEditFormResourcesTemplate>();
				rer.RegisterOutput(this.OutputFile);
				BuildSubTemplate(this, rer,strategy,string.Format("MDIForms{0}{1}EditForm.resx",Path.DirectorySeparatorChar,GetSingularName(ProcedureMap.RecordSets[i].Name)), OutPutDirectory);
						
				#endregion
			}
		}
		MDIFormsProjectTemplate mdi = this.Create<MDIFormsProjectTemplate>();
		mdi.UserInterfaceProjectGuid = this.ProjectGuid;
		mdi.RegisterOutput(this.OutputFile);
		BuildSubTemplate(this, mdi, null, string.Format("MDIForms{0}{1}.{2}.MDIForms.csproj",Path.DirectorySeparatorChar,CompanyNameSpace, ProjectNameSpace), OutPutDirectory);
		
		string pathFrom = Path.Combine(Path.GetDirectoryName(this.CodeTemplateInfo.FullPath),"Resources");
		string pathTo = Path.Combine(this.OutPutDirectory,string.Format("MDIForms{0}Resources{1}",Path.DirectorySeparatorChar,Path.DirectorySeparatorChar));
		this.Response.WriteLine(string.Format("Moving Resource Files From : {0}",pathFrom));
		this.Response.WriteLine(string.Format("Moving Resource Files to : {0}",pathTo));
		this.Response.WriteLine(MoveFiles(pathFrom,"*.*",pathTo));
		
		pathFrom = Path.GetDirectoryName(this.CodeTemplateInfo.FullPath);
		pathTo = Path.Combine(this.OutPutDirectory,string.Format("MDIForms{0}",Path.DirectorySeparatorChar));
		this.Response.WriteLine(string.Format("Moving Resource Files From : {0}",pathFrom));
		this.Response.WriteLine(string.Format("Moving Resource Files to : {0}",pathTo));
		this.Response.WriteLine(MoveFiles(pathFrom,"*.config",pathTo));
		
	}
	catch(Exception ex)
	{
		this.Response.WriteLine(string.Format("Exception Message: {0}",ex.Message));
		this.Response.WriteLine(string.Format("Exception Body: {0}",ex.ToString()));
		
	}
	finally
	{
		
	}
}


</script>