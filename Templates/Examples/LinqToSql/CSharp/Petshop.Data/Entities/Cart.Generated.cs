
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace Petshop.Data
{
    /// <summary>
    /// The class representing the dbo.Cart table.
    /// </summary>
    [Table(Name="dbo.Cart")]
    [DataContract]
    public partial class Cart
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Cart"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Cart()
        {
            OnCreated();
            _profiles = default(EntityRef<Profiles>);
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _cartID = default(int);

        /// <summary>
        /// Gets the CartID column value.
        /// </summary>
        [Column(Name="CartID", Storage="_cartID", DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        [DataMember]
        public int CartID
        {
            get { return _cartID; }
            set
            {
                if (_cartID != value)
                {
                    OnCartIDChanging(value);
                    OnPropertyChanging("CartID");
                    _cartID = value;
                    OnPropertyChanged("CartID");
                    OnCartIDChanged();
                }
            }
        }
        
        private int _uniqueID;

        /// <summary>
        /// Gets or sets the UniqueID column value.
        /// </summary>
        [Column(Name="UniqueID", Storage="_uniqueID", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember]
        public int UniqueID
        {
            get { return _uniqueID; }
            set
            {
                if (_uniqueID != value)
                {
                    if (_profiles.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnUniqueIDChanging(value);
                    OnPropertyChanging("UniqueID");
                    _uniqueID = value;
                    OnPropertyChanged("UniqueID");
                    OnUniqueIDChanged();
                }
            }
        }
        
        private string _itemId;

        /// <summary>
        /// Gets or sets the ItemId column value.
        /// </summary>
        [Column(Name="ItemId", Storage="_itemId", DbType="varchar(10) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string ItemId
        {
            get { return _itemId; }
            set
            {
                if (_itemId != value)
                {
                    OnItemIdChanging(value);
                    OnPropertyChanging("ItemId");
                    _itemId = value;
                    OnPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the Name column value.
        /// </summary>
        [Column(Name="Name", Storage="_name", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        
        private string _type;

        /// <summary>
        /// Gets or sets the Type column value.
        /// </summary>
        [Column(Name="Type", Storage="_type", DbType="varchar(80) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string Type
        {
            get { return _type; }
            set
            {
                if (_type != value)
                {
                    OnTypeChanging(value);
                    OnPropertyChanging("Type");
                    _type = value;
                    OnPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        
        private decimal _price;

        /// <summary>
        /// Gets or sets the Price column value.
        /// </summary>
        [Column(Name="Price", Storage="_price", DbType="decimal(10,2) NOT NULL", CanBeNull=false)]
        [DataMember]
        public decimal Price
        {
            get { return _price; }
            set
            {
                if (_price != value)
                {
                    OnPriceChanging(value);
                    OnPropertyChanging("Price");
                    _price = value;
                    OnPropertyChanged("Price");
                    OnPriceChanged();
                }
            }
        }
        
        private string _categoryId;

        /// <summary>
        /// Gets or sets the CategoryId column value.
        /// </summary>
        [Column(Name="CategoryId", Storage="_categoryId", DbType="varchar(10) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string CategoryId
        {
            get { return _categoryId; }
            set
            {
                if (_categoryId != value)
                {
                    OnCategoryIdChanging(value);
                    OnPropertyChanging("CategoryId");
                    _categoryId = value;
                    OnPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        
        private string _productId;

        /// <summary>
        /// Gets or sets the ProductId column value.
        /// </summary>
        [Column(Name="ProductId", Storage="_productId", DbType="varchar(10) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string ProductId
        {
            get { return _productId; }
            set
            {
                if (_productId != value)
                {
                    OnProductIdChanging(value);
                    OnPropertyChanging("ProductId");
                    _productId = value;
                    OnPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        
        private bool _isShoppingCart;

        /// <summary>
        /// Gets or sets the IsShoppingCart column value.
        /// </summary>
        [Column(Name="IsShoppingCart", Storage="_isShoppingCart", DbType="bit NOT NULL", CanBeNull=false)]
        [DataMember]
        public bool IsShoppingCart
        {
            get { return _isShoppingCart; }
            set
            {
                if (_isShoppingCart != value)
                {
                    OnIsShoppingCartChanging(value);
                    OnPropertyChanging("IsShoppingCart");
                    _isShoppingCart = value;
                    OnPropertyChanged("IsShoppingCart");
                    OnIsShoppingCartChanged();
                }
            }
        }
        
        private int _quantity;

        /// <summary>
        /// Gets or sets the Quantity column value.
        /// </summary>
        [Column(Name="Quantity", Storage="_quantity", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember]
        public int Quantity
        {
            get { return _quantity; }
            set
            {
                if (_quantity != value)
                {
                    OnQuantityChanging(value);
                    OnPropertyChanging("Quantity");
                    _quantity = value;
                    OnPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntityRef<Profiles> _profiles;

        /// <summary>
        /// Gets or sets the Profiles association.
        /// </summary>
        [Association(Name="Profiles_Cart", Storage="_profiles", ThisKey="UniqueID", OtherKey="UniqueID", IsUnique=true, IsForeignKey=true)]
        [DataMember]
        public Profiles Profiles
        {
            get { return _profiles.Entity; }
            set
            {
                Profiles previousValue = _profiles.Entity;
                if (previousValue != value || _profiles.HasLoadedOrAssignedValue == false)
                {
                    OnPropertyChanging("Profiles");
                    if (previousValue != null)
                    {
                        _profiles.Entity = null;
                        previousValue.CartList.Remove(this);
                    }
                    _profiles.Entity = value;
                    if (value != null)
                    {
                        value.CartList.Add(this);
                        _uniqueID = value.UniqueID;
                    }
                    else
                    {
                        _uniqueID = default(int);
                    }
                    OnPropertyChanged("Profiles");
                }
            }
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when CartID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCartIDChanging(int value);
        /// <summary>Called after CartID has Changed.</summary>
        partial void OnCartIDChanged();
        /// <summary>Called when UniqueID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUniqueIDChanging(int value);
        /// <summary>Called after UniqueID has Changed.</summary>
        partial void OnUniqueIDChanged();
        /// <summary>Called when ItemId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnItemIdChanging(string value);
        /// <summary>Called after ItemId has Changed.</summary>
        partial void OnItemIdChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        /// <summary>Called when Type is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTypeChanging(string value);
        /// <summary>Called after Type has Changed.</summary>
        partial void OnTypeChanged();
        /// <summary>Called when Price is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPriceChanging(decimal value);
        /// <summary>Called after Price has Changed.</summary>
        partial void OnPriceChanged();
        /// <summary>Called when CategoryId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCategoryIdChanging(string value);
        /// <summary>Called after CategoryId has Changed.</summary>
        partial void OnCategoryIdChanged();
        /// <summary>Called when ProductId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnProductIdChanging(string value);
        /// <summary>Called after ProductId has Changed.</summary>
        partial void OnProductIdChanged();
        /// <summary>Called when IsShoppingCart is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsShoppingCartChanging(bool value);
        /// <summary>Called after IsShoppingCart has Changed.</summary>
        partial void OnIsShoppingCartChanged();
        /// <summary>Called when Quantity is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnQuantityChanging(int value);
        /// <summary>Called after Quantity has Changed.</summary>
        partial void OnQuantityChanged();
        #endregion
        
    }
}

