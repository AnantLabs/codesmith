
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace Petshop.Data
{
    /// <summary>
    /// The class representing the dbo.Category table.
    /// </summary>
    [Table(Name="dbo.Category")]
    [DataContract]
    public partial class Category
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Category"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Category()
        {
            OnCreated();
            _productList = new EntitySet<Product>(
                new System.Action<Product>(this.Attach_ProductList),
                new System.Action<Product>(this.Detach_ProductList));
        }
        #endregion
        
        #region Column Mapped Properties
        
        private string _categoryId;

        /// <summary>
        /// Gets or sets the CategoryId column value.
        /// </summary>
        [Column(Name="CategoryId", Storage="_categoryId", DbType="varchar(10) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        [DataMember]
        public string CategoryId
        {
            get { return _categoryId; }
            set
            {
                if (_categoryId != value)
                {
                    OnCategoryIdChanging(value);
                    OnPropertyChanging("CategoryId");
                    _categoryId = value;
                    OnPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the Name column value.
        /// </summary>
        [Column(Name="Name", Storage="_name", DbType="varchar(80)")]
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        
        private string _descn;

        /// <summary>
        /// Gets or sets the Descn column value.
        /// </summary>
        [Column(Name="Descn", Storage="_descn", DbType="varchar(255)")]
        [DataMember]
        public string Descn
        {
            get { return _descn; }
            set
            {
                if (_descn != value)
                {
                    OnDescnChanging(value);
                    OnPropertyChanging("Descn");
                    _descn = value;
                    OnPropertyChanged("Descn");
                    OnDescnChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntitySet<Product> _productList;
        
        /// <summary>
        /// Gets or sets the Product association.
        /// </summary>
        [Association(Name="Category_Product", Storage="_productList", ThisKey="CategoryId", OtherKey="CategoryId")]
        [DataMember]
        public EntitySet<Product> ProductList
        {
            get { return _productList; }
            set { _productList.Assign(value); }
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Attach_ProductList(Product entity)
        {
            OnPropertyChanging(null);
            entity.Category = this;
            OnPropertyChanged(null);
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Detach_ProductList(Product entity)
        {
            OnPropertyChanging(null);
            entity.Category = null;
            OnPropertyChanged(null);
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when CategoryId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCategoryIdChanging(string value);
        /// <summary>Called after CategoryId has Changed.</summary>
        partial void OnCategoryIdChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        /// <summary>Called when Descn is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDescnChanging(string value);
        /// <summary>Called after Descn has Changed.</summary>
        partial void OnDescnChanged();
        #endregion
        
    }
}

