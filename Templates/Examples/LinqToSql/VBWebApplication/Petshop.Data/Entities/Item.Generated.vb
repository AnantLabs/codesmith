'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO Not MODIfY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Diagnostics
Imports System.Runtime.Serialization
Imports System.ComponentModel.DataAnnotations
Imports System.Data.Services.Common

Namespace Petshop.Data
    ''' <summary>
    ''' The class representing the dbo.Item table.
    ''' </summary>
    <Table(Name:="dbo.Item")> _
    <DataContract(IsReference:=True)> _
    <ScaffoldTable(True)> _
    <MetadataType(GetType(Item.Metadata))> _
	<DataServiceKey("ItemId")> _
    public Partial Class Item
        Inherits LinqEntityBase
        
        #Region "Default Constructor"
        ''' <summary>
        ''' Initializes a new instance of the <see cref="Item"/> class.
        ''' </summary>
        <DebuggerNonUserCodeAttribute()> _
        public  Sub New()
              OnCreated()
            Initialize()
        End Sub
        
        Private Sub Initialize()
            _product = Nothing
            _supplier1 = Nothing
        End Sub
        #End Region

        #Region "Column Mapped Properties"
        
        Private _itemId As String

        ''' <summary>
        ''' Gets or sets the ItemId column value.
        ''' </summary>
        <Column(Name:="ItemId", Storage:="_itemId", DbType:="varchar(10) NOT NULL", IsPrimaryKey:=true, CanBeNull:=false)> _
        <DataMember(Order:=1)> _
        public Property ItemId As String
            Get 
                return _itemId 
            End Get
            Set
                If String.IsNullOrEmpty(_itemId) OrElse  Not _itemId.Equals(value) Then
                    OnItemIdChanging(value)
                    OnPropertyChanging("ItemId")
                    _itemId = value
                    OnPropertyChanged("ItemId")
                    OnItemIdChanged()
                End If
            End Set
        End Property
        
        Private _productId As String

        ''' <summary>
        ''' Gets or sets the ProductId column value.
        ''' </summary>
        <Column(Name:="ProductId", Storage:="_productId", DbType:="varchar(10) NOT NULL", CanBeNull:=false)> _
        <DataMember(Order:=2)> _
        public Property ProductId As String
            Get 
                return _productId 
            End Get
            Set
                If String.IsNullOrEmpty(_productId) OrElse  Not _productId.Equals(value) Then
                    If (_product.HasLoadedOrAssignedValue) Then
                        Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
                    End If
                    OnProductIdChanging(value)
                    OnPropertyChanging("ProductId")
                    _productId = value
                    OnPropertyChanged("ProductId")
                    OnProductIdChanged()
                End If
            End Set
        End Property
        
        Private _listPrice As Nullable(Of Decimal)

        ''' <summary>
        ''' Gets or sets the ListPrice column value.
        ''' </summary>
        <Column(Name:="ListPrice", Storage:="_listPrice", DbType:="decimal(10,2)")> _
        <DataMember(Order:=3)> _
        public Property ListPrice As Nullable(Of Decimal)
            Get 
                return _listPrice 
            End Get
            Set
                If  Not _listPrice.Equals(value) Then
                    OnListPriceChanging(value)
                    OnPropertyChanging("ListPrice")
                    _listPrice = value
                    OnPropertyChanged("ListPrice")
                    OnListPriceChanged()
                End If
            End Set
        End Property
        
        Private _unitCost As Nullable(Of Decimal)

        ''' <summary>
        ''' Gets or sets the UnitCost column value.
        ''' </summary>
        <Column(Name:="UnitCost", Storage:="_unitCost", DbType:="decimal(10,2)")> _
        <DataMember(Order:=4)> _
        public Property UnitCost As Nullable(Of Decimal)
            Get 
                return _unitCost 
            End Get
            Set
                If  Not _unitCost.Equals(value) Then
                    OnUnitCostChanging(value)
                    OnPropertyChanging("UnitCost")
                    _unitCost = value
                    OnPropertyChanged("UnitCost")
                    OnUnitCostChanged()
                End If
            End Set
        End Property
        
        Private _supplier As Nullable(Of Integer)

        ''' <summary>
        ''' Gets or sets the Supplier column value.
        ''' </summary>
        <Column(Name:="Supplier", Storage:="_supplier", DbType:="int")> _
        <DataMember(Order:=5)> _
        public Property Supplier As Nullable(Of Integer)
            Get 
                return _supplier 
            End Get
            Set
                If  Not _supplier.Equals(value) Then
                    If (_supplier1.HasLoadedOrAssignedValue) Then
                        Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
                    End If
                    OnSupplierChanging(value)
                    OnPropertyChanging("Supplier")
                    _supplier = value
                    OnPropertyChanged("Supplier")
                    OnSupplierChanged()
                End If
            End Set
        End Property
        
        Private _status As String

        ''' <summary>
        ''' Gets or sets the Status column value.
        ''' </summary>
        <Column(Name:="Status", Storage:="_status", DbType:="varchar(2)")> _
        <DataMember(Order:=6)> _
        public Property Status As String
            Get 
                return _status 
            End Get
            Set
                If String.IsNullOrEmpty(_status) OrElse  Not _status.Equals(value) Then
                    OnStatusChanging(value)
                    OnPropertyChanging("Status")
                    _status = value
                    OnPropertyChanged("Status")
                    OnStatusChanged()
                End If
            End Set
        End Property
        
        Private _name As String

        ''' <summary>
        ''' Gets or sets the Name column value.
        ''' </summary>
        <Column(Name:="Name", Storage:="_name", DbType:="varchar(80)")> _
        <DataMember(Order:=7)> _
        public Property Name As String
            Get 
                return _name 
            End Get
            Set
                If String.IsNullOrEmpty(_name) OrElse  Not _name.Equals(value) Then
                    OnNameChanging(value)
                    OnPropertyChanging("Name")
                    _name = value
                    OnPropertyChanged("Name")
                    OnNameChanged()
                End If
            End Set
        End Property
        
        Private _image As String

        ''' <summary>
        ''' Gets or sets the Image column value.
        ''' </summary>
        <Column(Name:="Image", Storage:="_image", DbType:="varchar(80)")> _
        <DataMember(Order:=8)> _
        public Property Image As String
            Get 
                return _image 
            End Get
            Set
                If String.IsNullOrEmpty(_image) OrElse  Not _image.Equals(value) Then
                    OnImageChanging(value)
                    OnPropertyChanging("Image")
                    _image = value
                    OnPropertyChanged("Image")
                    OnImageChanged()
                End If
            End Set
        End Property
        #End Region
        
        #Region "Association Mapped Properties"
        
        Private  _product As EntityRef(Of Product)

        ''' <summary>
        ''' Gets or sets the Product association.
        ''' </summary>
        <Association(Name:="Product_Item", Storage:="_product", ThisKey:="ProductId", OtherKey:="ProductId", IsUnique:=true, IsForeignKey:=true, DeleteOnNull:=true)> _
        <DataMember(Order:=9, EmitDefaultValue:=False)> _
        public Property Product As Product
            Get
                Return _product.Entity 
            End Get
            Set
                Dim previousValue As Product = _product.Entity
                If Not previousValue Is value Or _product.HasLoadedOrAssignedValue = False Then
                    OnPropertyChanging("Product")
                    If previousValue IsNot Nothing Then
                        _product.Entity = Nothing
                        previousValue.ItemList.Remove(Me)
                    End If
                    _product.Entity = value
                    If value IsNot Nothing Then
                        value.ItemList.Add(Me)
                        _productId = value.ProductId
                    Else
                        _productId = Nothing
                    End If
                    OnPropertyChanged("Product")
                End If
            End Set
        End Property
        Private  _supplier1 As EntityRef(Of Supplier)

        ''' <summary>
        ''' Gets or sets the Supplier association.
        ''' </summary>
        <Association(Name:="Supplier_Item", Storage:="_supplier1", ThisKey:="Supplier", OtherKey:="SuppId", IsUnique:=true, IsForeignKey:=true)> _
        <DataMember(Order:=10, EmitDefaultValue:=False)> _
        public Property Supplier1 As Supplier
            Get
                Return _supplier1.Entity 
            End Get
            Set
                Dim previousValue As Supplier = _supplier1.Entity
                If Not previousValue Is value Or _supplier1.HasLoadedOrAssignedValue = False Then
                    OnPropertyChanging("Supplier1")
                    If previousValue IsNot Nothing Then
                        _supplier1.Entity = Nothing
                        previousValue.ItemList.Remove(Me)
                    End If
                    _supplier1.Entity = value
                    If value IsNot Nothing Then
                        value.ItemList.Add(Me)
                        _supplier = value.SuppId
                    Else
                        _supplier = Nothing
                    End If
                    OnPropertyChanged("Supplier1")
                End If
            End Set
        End Property
           #End Region
        
        #Region "Extensibility Method Definitions"
        ''' <summary>Called when this instance is loaded.</summary>
        Private Partial Sub OnLoaded()
        End Sub
        ''' <summary>Called when this instance is being saved.</summary>
        Private Partial Sub OnValidate(ByVal action As ChangeAction)
        End Sub
        ''' <summary>Called when this instance is created.</summary>
        Private Partial Sub OnCreated()
        End Sub
        ''' <summary>Called when ItemId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnItemIdChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after ItemId has Changed.</summary>
        Private Partial Sub OnItemIdChanged()
        End Sub
        ''' <summary>Called when ProductId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnProductIdChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after ProductId has Changed.</summary>
        Private Partial Sub OnProductIdChanged()
        End Sub
        ''' <summary>Called when ListPrice is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnListPriceChanging(ByVal value As Nullable(Of Decimal))
        End Sub
        ''' <summary>Called after ListPrice has Changed.</summary>
        Private Partial Sub OnListPriceChanged()
        End Sub
        ''' <summary>Called when UnitCost is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnUnitCostChanging(ByVal value As Nullable(Of Decimal))
        End Sub
        ''' <summary>Called after UnitCost has Changed.</summary>
        Private Partial Sub OnUnitCostChanged()
        End Sub
        ''' <summary>Called when Supplier is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnSupplierChanging(ByVal value As Nullable(Of Integer))
        End Sub
        ''' <summary>Called after Supplier has Changed.</summary>
        Private Partial Sub OnSupplierChanged()
        End Sub
        ''' <summary>Called when Status is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnStatusChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Status has Changed.</summary>
        Private Partial Sub OnStatusChanged()
        End Sub
        ''' <summary>Called when Name is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnNameChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Name has Changed.</summary>
        Private Partial Sub OnNameChanged()
        End Sub
        ''' <summary>Called when Image is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnImageChanging(ByVal value As String)
        End Sub
        ''' <summary>Called after Image has Changed.</summary>
        Private Partial Sub OnImageChanged()
        End Sub
        #End Region
        
        
        #Region "Serialization"
        
        
        <OnDeserializing(), _
         EditorBrowsableAttribute(EditorBrowsableState.Never)> _
        Public Sub OnDeserializing(ByVal context As StreamingContext)
            Initialize
        End Sub
        
        #End Region
    
    End Class
End Namespace

