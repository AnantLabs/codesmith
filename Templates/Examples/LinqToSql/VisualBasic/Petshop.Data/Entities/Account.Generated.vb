

'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO Not MODIfY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Diagnostics
Imports System.Runtime.Serialization

Namespace Petshop.Data
    ''' <summary>
    ''' The class representing the dbo.Account table.
    ''' </summary>
    <Table(Name:="dbo.Account")> _
    <System.Runtime.Serialization.DataContractAttribute()> _
    public Partial Class Account
        Inherits LinqEntityBase
        
        #Region "Default Constructor"
        ''' <summary>
        ''' Initializes a new instance of the <see cref="Account"/> class.
        ''' </summary>
        <DebuggerNonUserCodeAttribute()> _
        public  Sub New()
            OnCreated()
            _profiles = Nothing
        End Sub
        #End Region
        
        #Region "Column Mapped Properties"
        
        Private _accountID As Integer = Nothing

        ''' <summary>
        ''' Gets the AccountID column value.
        ''' </summary>
        <Column(Name:="AccountID", Storage:="_accountID", DbType:="int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, CanBeNull:=false)> _
        <DataMember()> _
        public Property AccountID As Integer
            Get 
				return _accountID 
			End Get
            Set
                If Not _accountID.Equals(value) Then
                    OnAccountIDChanging(value)
                    OnPropertyChanging("AccountID")
                    _accountID = value
                    OnPropertyChanged("AccountID")
                    OnAccountIDChanged()
                End If
            End Set
        End Property
        
        Private _uniqueID As Integer

        ''' <summary>
        ''' Gets or sets the UniqueID column value.
        ''' </summary>
        <Column(Name:="UniqueID", Storage:="_uniqueID", DbType:="int NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property UniqueID As Integer
            Get 
				return _uniqueID 
			End Get
            Set
                If Not _uniqueID.Equals(value) Then
                    If (_profiles.HasLoadedOrAssignedValue) Then
                        Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
                    End If
                    OnUniqueIDChanging(value)
                    OnPropertyChanging("UniqueID")
                    _uniqueID = value
                    OnPropertyChanged("UniqueID")
                    OnUniqueIDChanged()
                End If
            End Set
        End Property
        
        Private _email As String

        ''' <summary>
        ''' Gets or sets the Email column value.
        ''' </summary>
        <Column(Name:="Email", Storage:="_email", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property Email As String
            Get 
				return _email 
			End Get
            Set
                If Not _email.Equals(value) Then
                    OnEmailChanging(value)
                    OnPropertyChanging("Email")
                    _email = value
                    OnPropertyChanged("Email")
                    OnEmailChanged()
                End If
            End Set
        End Property
        
        Private _firstName As String

        ''' <summary>
        ''' Gets or sets the FirstName column value.
        ''' </summary>
        <Column(Name:="FirstName", Storage:="_firstName", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property FirstName As String
            Get 
				return _firstName 
			End Get
            Set
                If Not _firstName.Equals(value) Then
                    OnFirstNameChanging(value)
                    OnPropertyChanging("FirstName")
                    _firstName = value
                    OnPropertyChanged("FirstName")
                    OnFirstNameChanged()
                End If
            End Set
        End Property
        
        Private _lastName As String

        ''' <summary>
        ''' Gets or sets the LastName column value.
        ''' </summary>
        <Column(Name:="LastName", Storage:="_lastName", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property LastName As String
            Get 
				return _lastName 
			End Get
            Set
                If Not _lastName.Equals(value) Then
                    OnLastNameChanging(value)
                    OnPropertyChanging("LastName")
                    _lastName = value
                    OnPropertyChanged("LastName")
                    OnLastNameChanged()
                End If
            End Set
        End Property
        
        Private _address1 As String

        ''' <summary>
        ''' Gets or sets the Address1 column value.
        ''' </summary>
        <Column(Name:="Address1", Storage:="_address1", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property Address1 As String
            Get 
				return _address1 
			End Get
            Set
                If Not _address1.Equals(value) Then
                    OnAddress1Changing(value)
                    OnPropertyChanging("Address1")
                    _address1 = value
                    OnPropertyChanged("Address1")
                    OnAddress1Changed()
                End If
            End Set
        End Property
        
        Private _address2 As String

        ''' <summary>
        ''' Gets or sets the Address2 column value.
        ''' </summary>
        <Column(Name:="Address2", Storage:="_address2", DbType:="varchar(80)")> _
        <DataMember()> _
        public Property Address2 As String
            Get 
				return _address2 
			End Get
            Set
                If Not _address2.Equals(value) Then
                    OnAddress2Changing(value)
                    OnPropertyChanging("Address2")
                    _address2 = value
                    OnPropertyChanged("Address2")
                    OnAddress2Changed()
                End If
            End Set
        End Property
        
        Private _city As String

        ''' <summary>
        ''' Gets or sets the City column value.
        ''' </summary>
        <Column(Name:="City", Storage:="_city", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property City As String
            Get 
				return _city 
			End Get
            Set
                If Not _city.Equals(value) Then
                    OnCityChanging(value)
                    OnPropertyChanging("City")
                    _city = value
                    OnPropertyChanged("City")
                    OnCityChanged()
                End If
            End Set
        End Property
        
        Private _state As String

        ''' <summary>
        ''' Gets or sets the State column value.
        ''' </summary>
        <Column(Name:="State", Storage:="_state", DbType:="varchar(80) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property State As String
            Get 
				return _state 
			End Get
            Set
                If Not _state.Equals(value) Then
                    OnStateChanging(value)
                    OnPropertyChanging("State")
                    _state = value
                    OnPropertyChanged("State")
                    OnStateChanged()
                End If
            End Set
        End Property
        
        Private _zip As String

        ''' <summary>
        ''' Gets or sets the Zip column value.
        ''' </summary>
        <Column(Name:="Zip", Storage:="_zip", DbType:="varchar(20) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property Zip As String
            Get 
				return _zip 
			End Get
            Set
                If Not _zip.Equals(value) Then
                    OnZipChanging(value)
                    OnPropertyChanging("Zip")
                    _zip = value
                    OnPropertyChanged("Zip")
                    OnZipChanged()
                End If
            End Set
        End Property
        
        Private _country As String

        ''' <summary>
        ''' Gets or sets the Country column value.
        ''' </summary>
        <Column(Name:="Country", Storage:="_country", DbType:="varchar(20) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property Country As String
            Get 
				return _country 
			End Get
            Set
                If Not _country.Equals(value) Then
                    OnCountryChanging(value)
                    OnPropertyChanging("Country")
                    _country = value
                    OnPropertyChanged("Country")
                    OnCountryChanged()
                End If
            End Set
        End Property
        
        Private _phone As String

        ''' <summary>
        ''' Gets or sets the Phone column value.
        ''' </summary>
        <Column(Name:="Phone", Storage:="_phone", DbType:="varchar(20)")> _
        <DataMember()> _
        public Property Phone As String
            Get 
				return _phone 
			End Get
            Set
                If Not _phone.Equals(value) Then
                    OnPhoneChanging(value)
                    OnPropertyChanging("Phone")
                    _phone = value
                    OnPropertyChanged("Phone")
                    OnPhoneChanged()
                End If
            End Set
        End Property
        #End Region
        
        #Region "Association Mapped Properties"
        
        Private  _profiles As EntityRef(Of Profiles)

        ''' <summary>
        ''' Gets or sets the Profiles association.
        ''' </summary>
        <Association(Name:="Profiles_Account", Storage:="_profiles", ThisKey:="UniqueID", OtherKey:="UniqueID", IsUnique:=true, IsForeignKey:=true)> _
        <DataMember()> _
        public Property Profiles As Profiles
            Get  
				Return _profiles.Entity 
			End Get
            Set
                Dim previousValue As Profiles = _profiles.Entity
                If Not previousValue Is value Or _profiles.HasLoadedOrAssignedValue = False Then
                    OnPropertyChanging("Profiles")
                    If previousValue IsNot Nothing Then
                        _profiles.Entity = Nothing
                        previousValue.AccountList.Remove(Me)
                    End If
                    _profiles.Entity = value
                    If value IsNot Nothing Then
                        value.AccountList.Add(Me)
                        _uniqueID = value.UniqueID
                    Else
                        _uniqueID = Nothing
                    End If
                    OnPropertyChanged("Profiles")
                End If
            End SET
        End PROPERTY
        #End Region
        
        #Region "Extensibility Method Definitions"
        ''' <summary>Called when this instance is loaded.</summary>
        Private Partial Sub OnLoaded()
		End Sub
        ''' <summary>Called when this instance is being saved.</summary>
        Private Partial Sub OnValidate(ByVal action As ChangeAction)
		End Sub
        ''' <summary>Called when this instance is created.</summary>
        Private Partial Sub OnCreated()
		End Sub
        ''' <summary>Called when AccountID is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnAccountIDChanging(ByVal value As Integer)
		End Sub
        ''' <summary>Called after AccountID has Changed.</summary>
        Private Partial Sub OnAccountIDChanged()
		End Sub
        ''' <summary>Called when UniqueID is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnUniqueIDChanging(ByVal value As Integer)
		End Sub
        ''' <summary>Called after UniqueID has Changed.</summary>
        Private Partial Sub OnUniqueIDChanged()
		End Sub
        ''' <summary>Called when Email is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnEmailChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after Email has Changed.</summary>
        Private Partial Sub OnEmailChanged()
		End Sub
        ''' <summary>Called when FirstName is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnFirstNameChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after FirstName has Changed.</summary>
        Private Partial Sub OnFirstNameChanged()
		End Sub
        ''' <summary>Called when LastName is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnLastNameChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after LastName has Changed.</summary>
        Private Partial Sub OnLastNameChanged()
		End Sub
        ''' <summary>Called when Address1 is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnAddress1Changing(ByVal value As String)
		End Sub
        ''' <summary>Called after Address1 has Changed.</summary>
        Private Partial Sub OnAddress1Changed()
		End Sub
        ''' <summary>Called when Address2 is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnAddress2Changing(ByVal value As String)
		End Sub
        ''' <summary>Called after Address2 has Changed.</summary>
        Private Partial Sub OnAddress2Changed()
		End Sub
        ''' <summary>Called when City is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnCityChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after City has Changed.</summary>
        Private Partial Sub OnCityChanged()
		End Sub
        ''' <summary>Called when State is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnStateChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after State has Changed.</summary>
        Private Partial Sub OnStateChanged()
		End Sub
        ''' <summary>Called when Zip is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnZipChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after Zip has Changed.</summary>
        Private Partial Sub OnZipChanged()
		End Sub
        ''' <summary>Called when Country is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnCountryChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after Country has Changed.</summary>
        Private Partial Sub OnCountryChanged()
		End Sub
        ''' <summary>Called when Phone is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnPhoneChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after Phone has Changed.</summary>
        Private Partial Sub OnPhoneChanged()
		End Sub
        #End Region
        
    End Class
End Namespace

