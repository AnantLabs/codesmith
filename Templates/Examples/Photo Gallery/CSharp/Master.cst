<%-- 
Name: Gallery Generator
Author: Blake Niemyjski
Description: Generates a photo gallery.
--%>
<%@ CodeTemplate OutputType="None" Src="Common.cs" Inherits="CodeSmith.Samples.PhotoCodeTemplate" Language="C#" TargetLanguage="Text" CompilerVersion="v3.5" Description="Template description here." %>
<%@ Register Name="MainPage" Template="MainPage.cst" MergeProperties="True" ExcludeProperties="SourceDirectory" %>
<%@ Register Name="PhotoPage" Template="PhotoPage.cst" MergeProperties="False" %>
<%@ Import Namespace="System.IO" %>

<script runat="template">

public override void Render(TextWriter writer)
{
    string sourceDir = SourceDirectory;
	string outputDirectory = Path.GetFullPath(OutputDirectory);
	
    // Create Directory if it doesn't already exist.
	if (!Directory.Exists(outputDirectory)) 
		Directory.CreateDirectory(outputDirectory);
    
    if(CopyImagesToOutputDirectory)
    {
        string photoPath = Path.Combine(outputDirectory, "images");
        
        if (!Directory.Exists(photoPath))
		    Directory.CreateDirectory(photoPath);
        
        foreach(string path in Directory.GetFiles(SourceDirectory, "*.jpg"))
        {
            string filePath = Path.Combine(photoPath, GetName(new FileInfo(path)) + ".jpg");
            
            if(!File.Exists(filePath))
                File.Copy(path, Path.Combine(photoPath, GetName(new FileInfo(path)) + ".jpg"));
        }
        
        sourceDir = photoPath;
    }
    
    MainPage main = this.Create<MainPage>();
    this.CopyPropertiesTo(main);
    main.SourceDirectory = sourceDir;
    main.RenderToFile(Path.Combine(outputDirectory, "Default.html"), true);

    foreach (PhotoInformation image in GetPhotos(sourceDir, CopyImagesToOutputDirectory))
	{
	    Trace.WriteLine("Generating gallery page for: " + image.Name);
	
        PhotoPage photo = this.Create<PhotoPage>();
		this.CopyPropertiesTo(photo);
		photo.Name = image.Name;
        photo.Description = image.Description;
        photo.Path = image.Path;
        photo.PreviousImage = image.PreviousImage;
        photo.NextImage = image.NextImage;

        string path = Path.Combine(outputDirectory, string.Format("{0}.html", photo.Name));
        photo.RenderToFile(path, true);
	}
}

private string _outputDirectory = String.Empty;

[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))] 
[Category("1. Required")]
[Description("Directory where your gallery should be saved to.")]
public string OutputDirectory 
{
	get
	{
		// default to the directory that the template is located in
		if (_outputDirectory.Length == 0) 
			return ".\\";
		
		return _outputDirectory;
	}
	set
	{
		_outputDirectory = value;
		if (_outputDirectory.EndsWith("\\") == false)
		{
			_outputDirectory += "\\";
		}
	} 
}

private string _sourceDirectory = String.Empty;

[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))] 
[Category("1. Required")]
[Description("Directory where your pictures are located.")]
public string SourceDirectory 
{
	get
	{
		// default to the directory that the template is located in
		if (_sourceDirectory.Length == 0) 
			return ".\\";
		
		return _sourceDirectory;
	}
	set
	{
		_sourceDirectory = value;
		if (_sourceDirectory.EndsWith("\\") == false)
		{
			_sourceDirectory += "\\";
		}
	} 
}
</script>