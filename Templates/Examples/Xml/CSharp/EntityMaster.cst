<%-- 
Name: EntityMaster.cst
Author: Eric J. Smith
Description: Generates simplistic entity objects from an entity map file.  Select the NorthwindMap.xml for an example.
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="True" OutputType="None" Description="Generates simplistic entity objects from an entity map file." %>
<%@ XmlProperty Name="EntityMap" Schema="EntityMap.xsd" Default="NorthwindMap.xml" Category="Context" Description="The entity map XML file." %>
<%@ Register Name="EntityTemplate" Template="Entity.cst" %>
<%@ Assembly Name="System.Design" %>
<%@ Import NameSpace="System.IO" %>
<script runat="template">
private string _outputDirectory = String.Empty;

[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))] 
[Optional]
[Category("Output")]
[Description("The directory to output the results to.")]
public string OutputDirectory 
{
	get
	{
		// default to the directory that the template is located in
		if (_outputDirectory.Length == 0) return "output\\";
		
		return _outputDirectory;
	}
	set
	{
		_outputDirectory = value;
	}
}

public override void Render(TextWriter writer)
{
	string outputDirectory = Path.Combine(this.CodeTemplateInfo.DirectoryName, _outputDirectory);
	if (!outputDirectory.EndsWith("\\")) outputDirectory += "\\";
	if (!Directory.Exists(outputDirectory)) Directory.CreateDirectory(outputDirectory);
	
	foreach (Entity entity in EntityMap.Entities)
	{
		Trace.WriteLine("Generating entity source (" + entity.Name + ".cs" + ") for " + entity.Name + "...");
		EntityTemplate entityTemplate = new EntityTemplate();
		entityTemplate.EntityElement = entity;
		
		// Use a preserve regions merge strategy to preserve all of the custom regions in our entity classes when they are re-generated.
		PreserveRegionsMergeStrategy strategy = new PreserveRegionsMergeStrategy("^[ \t]*(?i:Custom)", "C#");
		entityTemplate.RenderToFile(outputDirectory + entity.Name + ".cs", strategy);
	}
}
</script>
