<%-- 
Name: Concrete DL Class Template
Author: Chris Lasater
Description: Allows generation of DL Base class from parameters
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="../../Utility/ProjectHelper.cs" Inherits="Utility.ProjectHelper" Description="Single Record Concrete Class Template" %>


<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>

using System;
using System.Data;
using System.Text;

//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by APOSA CodeSmith Domain Object Template.
//
//     Date:    <%= DateTime.Now.ToString("M/d/yyyy") %>
//     Time:    <%= DateTime.Now.ToString("h:mm tt") %>
//     Version: <%= typeof(CodeTemplate).Assembly.GetName().Version.ToString() %>
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace <%= CompanyNameSpace %>.<%=ProjectNameSpace%>.DataLayer.Base
{
    /// <summary>Indicates the database field parameters for importing.</summary>
    [AttributeUsage(AttributeTargets.Property)]
    internal abstract class DBPropertyInfoAttribute : Attribute
    {
        private int _size;
        private SqlDbType _sqlType;
        private ParameterDirection _direction;
        private bool _systemTypeAcceptsNulls = true;

        /// <summary>
        /// 
        /// </summary>
        /// <param name="sqlType"></param>
        /// <param name="direction"></param>
        public DBPropertyInfoAttribute(SqlDbType sqlType, ParameterDirection direction)
        {
            _sqlType = sqlType;
            _direction = direction;           
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="sqlType"></param>
        /// <param name="direction"></param>
        /// <param name="size"></param>
        public DBPropertyInfoAttribute(SqlDbType sqlType,ParameterDirection direction, int size)
        {
            _sqlType = sqlType;
            _direction = direction;
            _size = size;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="sqlType"></param>
        /// <param name="direction"></param>
        /// <param name="size"></param>
        /// <param name="systemTypeAcceptsNulls"></param>
        public DBPropertyInfoAttribute(SqlDbType sqlType, ParameterDirection direction, int size, bool systemTypeAcceptsNulls)
        {
            _sqlType = sqlType;
            _direction = direction;
            _size = size;
            _systemTypeAcceptsNulls = systemTypeAcceptsNulls;
        }
        /// <summary>
        /// 
        /// </summary>
        public int Size
        {
            get { return _size; }
        }
        /// <summary>
        /// 
        /// </summary>
        public SqlDbType SqlType
        {
            get { return _sqlType; }
        }
        /// <summary>
        /// 
        /// </summary>
        public ParameterDirection Direction
        {
            get { return _direction; }
        }
        /// <summary>
        /// Determines whether the system type (as in System.DateTime) can accept a null value
        /// </summary>
        public bool SystemTypeAcceptsNulls
        {
            get { return _systemTypeAcceptsNulls; }
        }
    }
}
<script runat="template">
#region Public Methods
public enum AccessibilityEnum
{
    Public,
    Protected,
    Internal,
    ProtectedInternal,
    Private
}

public override string GetFileName()
{
	return this.GetClassName() + ".cs";
}


public string GetClassName()
{
	return "DBPropertyInfoAttribute";	
}
#endregion



</script>