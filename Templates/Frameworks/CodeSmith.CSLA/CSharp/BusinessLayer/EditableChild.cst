<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 EditableChild" %>

<%@ Register Name="EditableChild" Template="Internal\EditableChild.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableChildDataAccess" Template="Internal\EditableChild.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableChildGenerated" Template="Internal\EditableChild.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
	foreach(Entity entity in Entities)
	{
		#region EditableChild
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("{0}.cs", entity.ClassName));
		
		EditableChild editableChild = this.Create<EditableChild>();
		this.CopyPropertiesTo(editableChild);
		editableChild.SourceTable = entity.Table;
		editableChild.BusinessClassName = entity.ClassName;
		
		if (!System.IO.File.Exists(parentFileName))
		{
			editableChild.RenderToFile(parentFileName, false);
		}
		
		#region EditableChild.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("{0}.Generated.cs", entity.ClassName));
		
		EditableChildGenerated editableChildGenerated = this.Create<EditableChildGenerated>();
		this.CopyPropertiesTo(editableChildGenerated);
		editableChildGenerated.SourceTable = entity.Table;
		editableChildGenerated.BusinessClassName = entity.ClassName;
		
		editableChildGenerated.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#region EditableChild.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("{0}.DataAccess.cs", entity.ClassName));
		
		EditableChildDataAccess editableChildDataAccess = this.Create<EditableChildDataAccess>();
		this.CopyPropertiesTo(editableChildDataAccess);
		editableChildDataAccess.SourceTable = entity.Table;
		editableChildDataAccess.BusinessClassName = entity.ClassName;
		
		editableChildDataAccess.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#endregion
	}
}

</script>