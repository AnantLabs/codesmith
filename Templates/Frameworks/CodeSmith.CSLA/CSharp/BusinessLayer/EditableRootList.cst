<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 EditableRootList" %>

<%@ Register Name="EditableRootList" Template="Internal\EditableRootList.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootListDataAccess" Template="Internal\EditableRootList.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootListGenerated" Template="Internal\EditableRootList.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
	foreach(Entity entity in Entities)
	{
		#region EditableRootList
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Collections\\{0}List.cs", entity.ClassName));
		
		EditableRootList editableRootList = this.Create<EditableRootList>();
		this.CopyPropertiesTo(editableRootList);
		editableRootList.SourceTable = entity.Table;
		editableRootList.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		if (!System.IO.File.Exists(parentFileName))
		{
			editableRootList.RenderToFile(parentFileName, false);
		}
		
		#region EditableRootList.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}List.Generated.cs", entity.ClassName));
		
		EditableRootListGenerated editableRootListGenerated = this.Create<EditableRootListGenerated>();
		this.CopyPropertiesTo(editableRootListGenerated);
		editableRootListGenerated.SourceTable = entity.Table;
		editableRootListGenerated.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		editableRootListGenerated.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#region EditableRootList.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}List.DataAccess.cs", entity.ClassName));
		
		EditableRootListDataAccess editableRootListDataAccess = this.Create<EditableRootListDataAccess>();
		this.CopyPropertiesTo(editableRootListDataAccess);
		editableRootListDataAccess.SourceTable = entity.Table;
		editableRootListDataAccess.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		editableRootListDataAccess.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#endregion
	}
}

</script>