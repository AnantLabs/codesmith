<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 ReadOnlyChildList" %>

<%@ Register Name="ReadOnlyChildList" Template="Internal\ReadOnlyChildList.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="ReadOnlyChildListDataAccess" Template="Internal\ReadOnlyChildList.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="ReadOnlyChildListGenerated" Template="Internal\ReadOnlyChildList.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
	foreach(Entity entity in Entities)
	{
		#region ReadOnlyChildList
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Collections\\{0}List.cs", entity.ClassName));
		
		ReadOnlyChildList readOnlyChildList = this.Create<ReadOnlyChildList>();
		this.CopyPropertiesTo(readOnlyChildList);
		readOnlyChildList.SourceTable = entity.Table;
		readOnlyChildList.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		if (!System.IO.File.Exists(parentFileName))
		{
			readOnlyChildList.RenderToFile(parentFileName, false);
		}
		
		#region ReadOnlyChildList.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}List.Generated.cs", entity.ClassName));
		
		ReadOnlyChildListGenerated readOnlyChildListGenerated = this.Create<ReadOnlyChildListGenerated>();
		this.CopyPropertiesTo(readOnlyChildListGenerated);
		readOnlyChildListGenerated.SourceTable = entity.Table;
		readOnlyChildListGenerated.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		readOnlyChildListGenerated.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#region ReadOnlyChildList.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}List.DataAccess.cs", entity.ClassName));
		
		ReadOnlyChildListDataAccess readOnlyChildListDataAccess = this.Create<ReadOnlyChildListDataAccess>();
		this.CopyPropertiesTo(readOnlyChildListDataAccess);
		readOnlyChildListDataAccess.SourceTable = entity.Table;
		readOnlyChildListDataAccess.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		readOnlyChildListDataAccess.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#endregion
	}
}

</script>