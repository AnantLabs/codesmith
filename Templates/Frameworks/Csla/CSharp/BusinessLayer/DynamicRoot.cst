<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.8.X DynamicRoot" %>

<%@ Register Name="DynamicRoot" Template="Internal\DynamicRoot.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootDataAccess" Template="Internal\DynamicRoot.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootDataAccessParameterized" Template="Internal\DynamicRoot.DataAccess.ParameterizedSQL.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootDataAccessStoredProcedures" Template="Internal\DynamicRoot.DataAccess.StoredProcedures.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootGenerated" Template="Internal\DynamicRoot.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Register Name="SqlStoredProcedures" Template="..\DataAccessLayer\Internal\SQLStoredProcedures.cst" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>
<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
    foreach(Entity entity in Entities)
    {
        #region DynamicRoot
        
        DynamicRoot dynamicRoot = this.Create<DynamicRoot>();
        this.CopyPropertiesTo(dynamicRoot);
        dynamicRoot.SourceTable = entity.Table;
        
        string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Entities\\{0}.cs", dynamicRoot.BusinessClassName));
        if (!System.IO.File.Exists(parentFileName))
        {
            dynamicRoot.RenderToFile(parentFileName, false);
        }
        
        #region DynamicRoot.Generated
        
        string fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.Generated.cs", dynamicRoot.BusinessClassName));
        
        DynamicRootGenerated dynamicRootGenerated = this.Create<DynamicRootGenerated>();
        this.CopyPropertiesTo(dynamicRootGenerated);
        dynamicRootGenerated.SourceTable = entity.Table;
        
        dynamicRootGenerated.RenderToFile(fileName, parentFileName, true);
        
        #endregion
        
        #region DynamicRoot.DataAccess
        
        fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.DataAccess.cs", dynamicRoot.BusinessClassName));
        if(DataAccessImplementation == DataAccessMethod.None)
        {
            DynamicRootDataAccess dynamicRootDataAccess = this.Create<DynamicRootDataAccess>();
            this.CopyPropertiesTo(dynamicRootDataAccess);
            dynamicRootDataAccess.SourceTable = entity.Table;
            
            dynamicRootDataAccess.RenderToFile(fileName, parentFileName, true);
        }
        else if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL)
        {
            DynamicRootDataAccessParameterized dynamicRootDataAccessParameterized = this.Create<DynamicRootDataAccessParameterized>();
            this.CopyPropertiesTo(dynamicRootDataAccessParameterized);
            dynamicRootDataAccessParameterized.SourceTable = entity.Table;
            
            dynamicRootDataAccessParameterized.RenderToFile(fileName, parentFileName, true);
        }
        else if(DataAccessImplementation == DataAccessMethod.StoredProcedures)
        {
            DynamicRootDataAccessStoredProcedures dynamicRootDataAccessStoredProcedures = this.Create<DynamicRootDataAccessStoredProcedures>();
            this.CopyPropertiesTo(dynamicRootDataAccessStoredProcedures);
            dynamicRootDataAccessStoredProcedures.SourceTable = entity.Table;

            dynamicRootDataAccessStoredProcedures.RenderToFile(fileName, parentFileName, true);

            //StoredProcedures
            fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.StoredProcedures.sql", dynamicRoot.BusinessClassName));
            SqlStoredProcedures sqlStoredProcedures = this.Create<SqlStoredProcedures>();
            this.CopyPropertiesTo(sqlStoredProcedures);
            sqlStoredProcedures.SourceTable = entity.Table;
            sqlStoredProcedures.DataProjectName = "Not needed for sql stored procedures.";
            
            sqlStoredProcedures.RenderToFile(fileName, parentFileName, true);
        }
        
        #endregion
        
        #endregion
    }
}

</script>