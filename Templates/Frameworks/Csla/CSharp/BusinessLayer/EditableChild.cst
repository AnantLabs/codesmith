<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.8.X EditableChild" %>

<%@ Register Name="EditableChild" Template="Internal\EditableChild.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableChildDataAccess" Template="Internal\EditableChild.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableChildDataAccessParameterized" Template="Internal\EditableChild.DataAccess.ParameterizedSQL.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableChildGenerated" Template="Internal\EditableChild.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
    foreach(Entity entity in Entities)
    {
        #region EditableChild
        
        EditableChild editableChild = this.Create<EditableChild>();
        this.CopyPropertiesTo(editableChild);
        editableChild.SourceTable = entity.Table;
        
        string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Entities\\{0}.cs", editableChild.BusinessClassName));
        if (!System.IO.File.Exists(parentFileName))
        {
            editableChild.RenderToFile(parentFileName, false);
        }
        
        #region EditableChild.Generated
        
        string fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.Generated.cs", editableChild.BusinessClassName));
        
        EditableChildGenerated editableChildGenerated = this.Create<EditableChildGenerated>();
        this.CopyPropertiesTo(editableChildGenerated);
        editableChildGenerated.SourceTable = entity.Table;
        
        editableChildGenerated.RenderToFile(fileName, parentFileName, true);
        
        #endregion
        
        #region EditableChild.DataAccess
        
        fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.DataAccess.cs", editableChild.BusinessClassName));
        if(DataAccessImplementation == DataAccessMethod.None)
        {
            EditableChildDataAccess editableChildDataAccess = this.Create<EditableChildDataAccess>();
            this.CopyPropertiesTo(editableChildDataAccess);
            editableChildDataAccess.SourceTable = entity.Table;
            
            editableChildDataAccess.RenderToFile(fileName, parentFileName, true);
        }
        else if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL)
        {
            EditableChildDataAccessParameterized editableChildDataAccessParameterized = this.Create<EditableChildDataAccessParameterized>();
            this.CopyPropertiesTo(editableChildDataAccessParameterized);
            editableChildDataAccessParameterized.SourceTable = entity.Table;
            
            editableChildDataAccessParameterized.RenderToFile(fileName, parentFileName, true);
        }
        
        #endregion
        
        #endregion
    }
}

</script>