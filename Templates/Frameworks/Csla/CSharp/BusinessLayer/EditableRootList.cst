<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.8.X EditableRootList" %>

<%@ Register Name="EditableRootList" Template="Internal\EditableRootList.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootListDataAccess" Template="Internal\EditableRootList.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootListDataAccessParameterized" Template="Internal\EditableRootList.DataAccess.ParameterizedSQL.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootListDataAccessStoredProcedures" Template="Internal\EditableRootList.DataAccess.StoredProcedures.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootListGenerated" Template="Internal\EditableRootList.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Register Name="SqlStoredProcedures" Template="..\DataAccessLayer\Internal\SQLStoredProcedures.cst" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<script runat="template">

public override void Render(System.IO.TextWriter writer)
{
    RegisterReferences();

    #region EditableRootList
    
    EditableRootList editableRootList = this.Create<EditableRootList>();
    this.CopyPropertiesTo(editableRootList);
    editableRootList.BusinessClassName = string.Format("{0}List", editableRootList.BusinessClassName);
    
    string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Collections\\{0}.cs", editableRootList.BusinessClassName));
    if (!System.IO.File.Exists(parentFileName))
    {
        editableRootList.RenderToFile(parentFileName, false);
    }
    
    #region EditableRootList.Generated
    
    string fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.Generated.cs", editableRootList.BusinessClassName));
    
    EditableRootListGenerated editableRootListGenerated = this.Create<EditableRootListGenerated>();
    this.CopyPropertiesTo(editableRootListGenerated);
    editableRootListGenerated.BusinessClassName = string.Format("{0}List", editableRootListGenerated.BusinessClassName);
    
    editableRootListGenerated.RenderToFile(fileName, parentFileName, true);
    
    #endregion
    
    #region EditableRootList.DataAccess
    
    fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.DataAccess.cs", editableRootList.BusinessClassName));
    if(DataAccessImplementation == DataAccessMethod.None)
    {
        EditableRootListDataAccess editableRootListDataAccess = this.Create<EditableRootListDataAccess>();
        this.CopyPropertiesTo(editableRootListDataAccess);
        editableRootListDataAccess.BusinessClassName = string.Format("{0}List", editableRootListDataAccess.BusinessClassName);
        
        editableRootListDataAccess.RenderToFile(fileName, parentFileName, true);
    }
    else if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL)
    {
        EditableRootListDataAccessParameterized editableRootListDataAccessParameterized = this.Create<EditableRootListDataAccessParameterized>();
        this.CopyPropertiesTo(editableRootListDataAccessParameterized);
        editableRootListDataAccessParameterized.BusinessClassName = string.Format("{0}List", editableRootListDataAccessParameterized.BusinessClassName);
        
        editableRootListDataAccessParameterized.RenderToFile(fileName, parentFileName, true);
    }
    else if(DataAccessImplementation == DataAccessMethod.StoredProcedures)
    {
        EditableRootListDataAccessStoredProcedures editableRootListDataAccessStoredProcedures = this.Create<EditableRootListDataAccessStoredProcedures>();
        this.CopyPropertiesTo(editableRootListDataAccessStoredProcedures);
        editableRootListDataAccessStoredProcedures.BusinessClassName = string.Format("{0}List", editableRootListDataAccessStoredProcedures.BusinessClassName);

        editableRootListDataAccessStoredProcedures.RenderToFile(fileName, parentFileName, true);

        //StoredProcedures
        fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.StoredProcedures.sql", editableRootList.BusinessClassName));
        SqlStoredProcedures sqlStoredProcedures = this.Create<SqlStoredProcedures>();
        this.CopyPropertiesTo(sqlStoredProcedures);
        
        sqlStoredProcedures.DataProjectName = "Not needed for sql stored procedures.";
        sqlStoredProcedures.RenderToFile(fileName, parentFileName, true);
    }
    
    #endregion
    
    #endregion

}

</script>