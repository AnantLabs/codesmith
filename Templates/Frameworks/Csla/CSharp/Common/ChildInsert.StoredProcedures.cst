<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA Map" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.CSharpExtensions" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
            bool cancel = false;
            OnChildInserting(ref cancel);
            if (cancel) return;

			if(connection.State != ConnectionState.Open) connection.Open();
            using(SqlCommand command = new SqlCommand("<%= GetInsertStoredProcedureName() %>", connection))
            {
                command.CommandType = CommandType.StoredProcedure;
                <%= Entity.MembersNoRowVersion.BuildCommandParameters(false, false, true, true) %>

<% if(Entity.HasRowVersionMember) { %>
                using(var reader = new SafeDataReader(command.ExecuteReader()))
                {
                    if(reader.Read())
                    {
                        _timestamp = ADOHelper.GetBytes(reader, "<%= Entity.RowVersionMember.ColumnName %>");
                    }
                }
<% } else { %>
                command.ExecuteNonQuery();
<% } if(Entity.HasIdentityMember) { %>
<% foreach(Member member in Entity.PrimaryKey.KeyMembers) { if(member.IsIdentity) { if(UseMemberVariables) { %>
                <%= member.PrivateMemberVariableName %> =  (<%= member.SystemType %>)command.Parameters["<%= member.BuildParameterVariableName() %>"].Value;
<% } else { %>
                LoadProperty(<%= member.PrivateMemberVariableName %>Property, (<%= member.SystemType %>)command.Parameters["<%= member.BuildParameterVariableName() %>"].Value);
<% } } } } %>
            }

            OnChildInserted();
