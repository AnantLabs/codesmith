<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 DynamicRoot" %>

<%@ Register Name="DynamicRoot" Template="Internal\DynamicRoot.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootDataAccess" Template="Internal\DynamicRoot.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootGenerated" Template="Internal\DynamicRoot.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>
<% Generate() %>

<script runat="template">

Public override void Generate()
{
    RegisterReferences()
    
	foreach(Entity entity in Entities)
	{
		#Region DynamicRoot
		
		DynamicRoot dynamicRoot = this.Create<DynamicRoot>()
		this.CopyPropertiesTo(dynamicRoot)
		dynamicRoot.SourceTable = entity.Table
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Entities\\{0}.cs", dynamicRoot.BusinessClassName))
		If Not (System.IO.File.Exists(parentFileName))
		{
			dynamicRoot.RenderToFile(parentFileName, false)
		}
		
		#Region DynamicRoot.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.Generated.cs", dynamicRoot.BusinessClassName))
		
		DynamicRootGenerated dynamicRootGenerated = this.Create<DynamicRootGenerated>()
		this.CopyPropertiesTo(dynamicRootGenerated)
		dynamicRootGenerated.SourceTable = entity.Table
		
		dynamicRootGenerated.RenderToFile(fileName, parentFileName, true)
		
		#End Region
		
		#Region DynamicRoot.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.DataAccess.cs", dynamicRoot.BusinessClassName))
		
		DynamicRootDataAccess dynamicRootDataAccess = this.Create<DynamicRootDataAccess>()
		this.CopyPropertiesTo(dynamicRootDataAccess)
		dynamicRootDataAccess.SourceTable = entity.Table
		
		dynamicRootDataAccess.RenderToFile(fileName, parentFileName, true)
		
		#End Region
		
		#End Region
	}
}

</script>