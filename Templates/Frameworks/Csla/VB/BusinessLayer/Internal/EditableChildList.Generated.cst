<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.7.X EditableChildList" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="SchemaExplorer" %>
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated Imports CSLA 3.7.X CodeSmith Templates.
'     Changes to this file will be lost after each regeneration.
'     To extend the functionality of this class, please modify the partial class '<%= BusinessClassName %>.vb.
'
'     Template: <%= CodeTemplateInfo.FileName %>
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System
Imports System.Collections.Generic

Imports Csla
Imports Csla.Data

<Serializable()> _
Public Partial Class <%= BusinessClassName %> 
    Inherits BusinessListBase(Of <%= BusinessClassName %>, <%= ChildBusinessClassName %>)
    
    #Region "Contructor(s)"
    
    Private Sub New()
		AllowNew = true
        MarkAsChild()
	End Sub
    
    #End Region
    
	#Region "Factory Methods" 
	
	Friend Shared Function NewList() As <%= BusinessClassName %>
		Return DataPortal.CreateChild(Of <%= BusinessClassName %>)()
	End Function
	
	Friend Shared Function Get<%= BusinessClassName %>(<%= Entity.PrimaryKey.KeyMembers.BuildParametersVariables() %>) As <%= BusinessClassName %>
		Return DataPortal.FetchChild(Of <%= BusinessClassName %>)(new <%= ChildBusinessClassName %>Criteria(<%= Entity.PrimaryKey.KeyMembers.BuildVariableArguments() %>))
	End Function
    
    Friend Shared Function GetAll() As <%= BusinessClassName %>
        Return DataPortal.FetchChild(Of <%= BusinessClassName %>)(new <%= ChildBusinessClassName %>Criteria())
    End Function
<%-- One-To-Many & Many-To-Many --%>
<% For Each association As AssociationMember In Entity.ManyToOne
For Each sc As SearchCriteria In association.ListSearchCriteria %>
    
    Friend Shared Function <%= sc.GetListMethodName(association) %>(<%= association.BuildParametersVariablesCriteria() %>) As <%= BusinessClassName %>
        Dim criteria As New <%= ChildBusinessClassName %>Criteria()
<% For Each member As MemberBase In sc.Members %>
        criteria.<%= member.BuildCriteriaObjectInitializer(Entity.Table.Name) %>
<% Next %>
        
        Return DataPortal.FetchChild(Of <%= BusinessClassName %>)(criteria)
    End Function
<%  Next
Next %>
	
	#End Region

	#Region "Business Methods"
	
	Protected Overrides Function AddNewCore() As Object
		Dim item As <%= ChildBusinessClassName %> = PetShop.Business.<%= ChildBusinessClassName %>.New<%= ChildBusinessClassName %>()
                Me.Add(item)
                Return item
	End Function
	
	#End Region
    
    End Class