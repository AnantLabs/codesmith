<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 ReadOnlyChildList" %>

<%@ Register Name="ReadOnlyChildList" Template="Internal\ReadOnlyChildList.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="ReadOnlyChildListDataAccess" Template="Internal\ReadOnlyChildList.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="ReadOnlyChildListGenerated" Template="Internal\ReadOnlyChildList.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate() %>

<script runat="template">

Public override void Generate()
{
    RegisterReferences()
    
	foreach(Entity entity in Entities)
	{
		#Region ReadOnlyChildList
		
		ReadOnlyChildList readOnlyChildList = this.Create<ReadOnlyChildList>()
		this.CopyPropertiesTo(readOnlyChildList)
		readOnlyChildList.SourceTable = entity.Table
		readOnlyChildList.BusinessClassName = string.Format("{0}List", readOnlyChildList.BusinessClassName)
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Collections\\{0}.cs", readOnlyChildList.BusinessClassName))
		If Not (System.IO.File.Exists(parentFileName))
		{
			readOnlyChildList.RenderToFile(parentFileName, false)
		}
		
		#Region ReadOnlyChildList.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.Generated.cs", readOnlyChildList.BusinessClassName))
		
		ReadOnlyChildListGenerated readOnlyChildListGenerated = this.Create<ReadOnlyChildListGenerated>()
		this.CopyPropertiesTo(readOnlyChildListGenerated)
		readOnlyChildListGenerated.SourceTable = entity.Table
		readOnlyChildListGenerated.BusinessClassName = string.Format("{0}List", readOnlyChildListGenerated.BusinessClassName)
		
		readOnlyChildListGenerated.RenderToFile(fileName, parentFileName, true)
		
		#End Region
		
		#Region ReadOnlyChildList.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.DataAccess.cs", readOnlyChildList.BusinessClassName))
		
		ReadOnlyChildListDataAccess readOnlyChildListDataAccess = this.Create<ReadOnlyChildListDataAccess>()
		this.CopyPropertiesTo(readOnlyChildListDataAccess)
		readOnlyChildListDataAccess.SourceTable = entity.Table
		readOnlyChildListDataAccess.BusinessClassName = string.Format("{0}List", readOnlyChildListDataAccess.BusinessClassName)
		
		readOnlyChildListDataAccess.RenderToFile(fileName, parentFileName, true)
		
		#End Region
		
		#End Region
	}
}

</script>