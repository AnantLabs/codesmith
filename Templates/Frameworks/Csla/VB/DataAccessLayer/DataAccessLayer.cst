<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.DataAccessCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 DataAccessLayer" %>

<%@ Register Name="ParameterizedSQL" Template="Internal\ParameterizedSQL.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ParameterizedSQLBase" Template="Internal\ParameterizedSQLBase.cst" MergeProperties="False" ExcludeProperties="" %>


<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>

<% Generate() %>

<script runat="template">

Public Overloads Overrides Sub Generate()
	If DataAccessImplementation = DataAccessMethod.ParameterizedSQL Then
		'ParameterizedSQL
		Dim parameterizedSQL As ParameterizedSQL = Me.Create(Of ParameterizedSQL)()
		Me.CopyPropertiesTo(parameterizedSQL)

		Dim fileName As String = System.IO.Path.Combine(Me.Location, "DataAccessLayer.vb")
		If Not System.IO.File.Exists(fileName) Then
			parameterizedSQL.RenderToFile(fileName, False)
		End If

		'ParameterizedSQLBase
		Dim parameterizedSQLBase As ParameterizedSQLBase = Me.Create(Of ParameterizedSQLBase)()
		Me.CopyPropertiesTo(parameterizedSQLBase)
		parameterizedSQLBase.DataClassName = String.Format("{0}Base", DataClassName)
		parameterizedSQLBase.RenderToFile(System.IO.Path.Combine(Me.Location, "Base\DataAccessLayerBase.vb"), True)
	End If
End Sub

</script>