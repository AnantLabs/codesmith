<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.DataAccessCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 DataAccessLayer" %>

<%@ Register Name="ParameterizedSQL" Template="Internal\ParameterizedSQL.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ParameterizedSQLBase" Template="Internal\ParameterizedSQLBase.cst" MergeProperties="False" ExcludeProperties="" %>


<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>

<% Generate() %>

<script runat="template">

Public override void Generate()
{
    if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL)
    {
        #region ParameterizedSQL
		
        ParameterizedSQL parameterizedSQL = this.Create<ParameterizedSQL>()
        this.CopyPropertiesTo(parameterizedSQL)
        
        string fileName = System.IO.Path.Combine(this.Location, "DataAccessLayer.cs")
		if (!System.IO.File.Exists(fileName))
		{
			parameterizedSQL.RenderToFile(fileName, false)
		}
        
		#region ParameterizedSQLBase
		
		ParameterizedSQLBase parameterizedSQLBase = this.Create<ParameterizedSQLBase>()
        this.CopyPropertiesTo(parameterizedSQLBase)
        parameterizedSQLBase.DataClassName = string.Format("{0}Base", DataClassName)
        
        parameterizedSQLBase.RenderToFile(System.IO.Path.Combine(this.Location, "Base\\DataAccessLayerBase.cs"), true)
		
		#endregion
        
        #endregion
    }
}

</script>