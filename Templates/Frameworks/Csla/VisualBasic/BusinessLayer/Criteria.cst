<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="Generator.CSLA.EntityCodeTemplate" %>
<%@ Register Name="Criteria" Template="Internal\Criteria.cst" %>
<%@ Register Name="CriteriaGenerated" Template="Internal\Criteria.Generated.cst" %>
<%@ Register Name="IGeneratedCriteriaTemplate" Template="Internal\IGeneratedCriteria.cst" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="Generator.CSLA" Path="..\..\Common" %>

<script runat="template">

Public Overloads Overrides Sub Render(writer As System.IO.TextWriter)
    RegisterReferences()

Dim parentFileName As String = System.IO.Path.Combine(Me.Location, String.Format("Criteria\{0}.vb", BusinessClassName))
Dim fileName As String = System.IO.Path.Combine(Location, String.Format("Criteria\{0}.Generated.vb", BusinessClassName))

RenderToFileHelper(Of Criteria)(parentFileName)
RenderToFileHelper(Of CriteriaGenerated)(fileName, parentFileName, True)
RenderToFileHelper(Of IGeneratedCriteriaTemplate)(System.IO.Path.Combine(Me.Location, "Criteria\Interfaces\IGeneratedCriteria.vb"), True)

End Sub

Public Overrides Function OnEntityChanging() As Boolean
    If String.IsNullOrEmpty(BusinessClassName) Then
        BusinessClassName = String.Concat(Entity.Name, "Criteria")
    End If

    If String.IsNullOrEmpty(CriteriaClassName) OrElse CriteriaClassName.Equals("Criteria", StringComparison.InvariantCultureIgnoreCase) Then
        CriteriaClassName = String.Concat(Entity.Name, "Criteria")
    End If

    Return False
End Function

</script>