<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA EditableRoot" %>
<%@ Register Name="CompositeKeyMethods" Template="..\..\Common\CompositeKeyMethods.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Constructor" Template="..\..\Common\ChildConstructor.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Exists" Template="..\..\Common\Exists.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="IsDirty" Template="..\..\Common\IsDirty.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Properties" Template="..\..\Common\Properties.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ValidationRules" Template="..\..\Common\ValidationRules.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="PartialMethods" Template="..\..\Common\ChildPartialMethods.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="SchemaExplorer" %>
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using <%= VersionInfo %>.
'     Changes to this file will be lost after each regeneration.
'     To extend the functionality of this class, please modify the partial class '<%= BusinessClassName %>.vb.
'
'     Template: <%= CodeTemplateInfo.FileName %>
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System

Imports Csla
Imports Csla.Data
<% If(IsCSLA40) Then %>
Imports Csla.Rules
<% Else %>
Imports Csla.Validation
<% End If %>
<% If(IncludeSilverlightSupport) Then %>
#If SILVERLIGHT Then
Imports Csla.Serialization
#End If
<% End If %>

<Serializable()> _
<% If(DataAccessImplementation = DataAccessMethod.ObjectFactoryNone Or DataAccessImplementation = DataAccessMethod.ObjectFactoryParameterizedSQL Or DataAccessImplementation = DataAccessMethod.ObjectFactoryStoredProcedures) %>
<Csla.Server.ObjectFactory(FactoryNames.<%= Entity.ClassName %>FactoryName)> _
<% End If %>
Public Partial Class <%= BusinessClassName %><%= Entity.GenericProperty %>
    Inherits BusinessBase(Of <%= BusinessClassName %><%= Entity.GenericProperty %>)

<% RenderHelper(New Constructor()) %>

<% RenderHelper(New ValidationRules()) %>

<% RenderHelper(New Properties()) %>

<% If(IncludeSilverlightSupport) Then %>
#If Not SILVERLIGHT Then
<% End If %>
    #Region "Synchronous Factory Methods"

    Friend Shared Function New<%= ChildBusinessClassName %><%= Entity.GenericProperty %>() As <%= ChildBusinessClassName %> 
        Return DataPortal.Create(Of <%= BusinessClassName %>)()
    End Function
<% For Each sc As SearchCriteria In  Entity.SearchCriteria() %>

    Friend Shared Function <%= sc.MethodName %>(<%= sc.Members.BuildParametersVariables() %>) As <%= BusinessClassName %><%= Entity.GenericProperty %>
        Dim criteria As New <%= BusinessClassName %>Criteria<%= Entity.GenericProperty %>()
        <%= sc.Members.BuildObjectInitializer() %>

        Return DataPortal.FetchChild(Of <%= ChildBusinessClassName %><%= Entity.GenericProperty %>)(criteria)
    End Function
<% Next %>

    #End Region
<% If(IncludeSilverlightSupport) Then %>

#End If        

    #Region "Asynchronous Factory Methods"

    Friend Shared Sub New<%= BusinessClassName %>Async(ByVal handler As EventHandler(Of DataPortalResult(Of <%= ChildBusinessClassName %><%= Entity.GenericProperty %>)))
        Dim dp As New DataPortal(Of <%= ChildBusinessClassName %><%= Entity.GenericProperty %>)()
        AddHandler dp.CreateCompleted, handler
        dp.BeginCreate()
    End Sub

   ' Child objects do not expose asynchronous factory get methods.

   ' Child objects do not expose asynchronous delete methods.

   #End Region

<% End If %>

<% RenderHelper(New Exists()) %>

<% RenderHelper(New IsDirty()) %>

<% RenderHelper(New CompositeKeyMethods()) %>
    
<% RenderHelper(New PartialMethods()) %>
End Class
