<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA 3.8.X NameValueList" %>
<%@ Register Name="Exists" Template="..\..\Common\ExistsList.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>

<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using <%= VersionInfo %>.
'     Changes to this file will be lost after each regeneration.
'     To extend the functionality of this class, please modify the partial class '<%= BusinessClassName %>.vb.
'
'     Template: <%= CodeTemplateInfo.FileName %>
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System

Imports Csla
<% If(IncludeSilverlightSupport) Then %>
#If SILVERLIGHT Then
Imports Csla.Serialization
#End If
<% End If %>

<Serializable()> _
Public Partial Class <%= BusinessClassName %> 
    Inherits NameValueListBase(Of Integer, String)

    #Region "Factory Methods"

    Private Shared _list As <%= BusinessClassName %>
<% If(IncludeSilverlightSupport) Then %>
#If Not SILVERLIGHT Then
<% End If %>
    #Region "Synchronous Factory Methods"
    Public Shared Function GetAll() As <%= BusinessClassName %>
        If (_list Is Nothing) Then
            _list = DataPortal.Fetch(Of <%= BusinessClassName %>)()
        End If
        
        Return _list
    End Function

    #End Region
<% If(IncludeSilverlightSupport) Then %>

#End If        

     #Region "Asynchronous Factory Methods"
        
    Public Shared Sub GetAllAsync(ByVal handler As EventHandler(Of DataPortalResult(Of <%= BusinessClassName %><%= Entity.GenericProperty %>)))
        Dim dp As New DataPortal(Of <%= BusinessClassName %><%= Entity.GenericProperty %>)()
        AddHandler dp.FetchCompleted, handler
        dp.BeginFetch()
    End Sub
    
    #End Region
<% End If %>

    Public Shared Sub InvalidateCache()
        _list = Nothing
    End Sub

    Private Sub New()
    End Sub
    
    #End Region


<% If DataAccessImplementation = DataAccessMethod.ObjectFactoryNone OrElse DataAccessImplementation = DataAccessMethod.ObjectFactoryParameterizedSQL OrElse DataAccessImplementation = DataAccessMethod.ObjectFactoryStoredProcedures Then %>
        #Region "Property overrides"

        ''' <summary>
        ''' Returns true if any children are dirty
        ''' </summary>
        Public Shadows ReadOnly Property IsDirty() As Boolean
            Get
                Return False
            End Get
        End Property

        #End Region

<% End If %>
End Class
