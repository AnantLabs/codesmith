<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="Generator.CSLA.EntityCodeTemplate" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="Generator.CSLA" Path="..\..\Common" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
#Region "Business Rules"

        ''' <summary>
        ''' Contains the CodeSmith generated validation rules.
        ''' </summary>
        Protected Overrides Sub AddBusinessRules()
            ' Call the base class, if this call isn't made than any declared System.ComponentModel.DataAnnotations rules will not work.
            MyBase.AddBusinessRules()

            If AddBusinessValidationRules() Then Exit Sub
    
    <%     For Each prop As IProperty In Entity.GetProperties(PropertyType.NoConcurrency) %>
    <% If (prop.SystemType = "System.String" ) Then  %>
    <% If Not prop.IsNullable Then %>
    <% If(IsCSLA43 OrElse IsCSLA45) Then %>
            BusinessRules.AddRule(New Global.Csla.Rules.CommonRules.Required(<%= prop.PrivateMemberVariableName %>Property))
    <% Else %>
            ValidationRules.AddRule(AddressOf Global.Csla.Validation.CommonRules.StringRequired, <%= prop.PrivateMemberVariableName %>Property)
    <%  End If
    End If
        If Not prop.ExcludeBusinessSizeRule() Then %>
    <% If(IsCSLA43 OrElse IsCSLA45) Then %>
            BusinessRules.AddRule(New Global.Csla.Rules.CommonRules.MaxLength(<%= prop.PrivateMemberVariableName %>Property, <%= prop.Size %>))
    <% Else %>
            ValidationRules.AddRule(AddressOf Global.Csla.Validation.CommonRules.StringMaxLength, New Global.Csla.Validation.CommonRules.MaxLengthRuleArgs(<%= prop.PrivateMemberVariableName %>Property, <%= prop.Size %>))
    <% End If 
        End If 
        End If 
    Next %>
        End Sub
    
#End Region

