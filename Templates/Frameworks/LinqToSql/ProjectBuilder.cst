<%-- 
Name: Quick Start
Author: Reggie Bradshaw
Description: Used to Quick Start Visual Studio Projects
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Assembly Name="System" %>
<%@ Assembly Name="ICSharpCode.SharpZipLib" Path="Common" %>
<%@ Assembly Name="QuickStartUtils" Path="Common"%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="ICSharpCode.SharpZipLib.Zip" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="QuickStartUtils" %>
<%@ Register Name="QuickStartSolution" Template="QuickStartSolution.cst" %>
<%@ Property Name="Location" Type="System.String" Default="" Optional="False" Category="1.Project" Description="This is the path to the project location." %>
<%@ Property Name="CodeSmithSamplesLocation" Type="System.String" Default="" Optional="True" Category="" Description="" %>
<%@ Property Name="ProjectName" Type="System.String" Default="" Optional="False" Category="1.Project" Description="Name of the project to be generated." %>
<%@ Property Name="Language" Type="QuickStartUtils.LanguageEnum" Default="CSharp" Optional="False" Category="1.Project" Description="Language the project will be in" %>
<%@ Property Name="ProjectType" Type="QuickStartUtils.ProjectTypeEnum" Default="DynamicData" Optional="False" Category="" Description="Type of Project to be created" %>
<%@ Property Name="DataContext" Type="System.String" Default="" Optional="False" Category="2.Data" Description="Name Space for the Data Project." %>
<%@ Property Name="IncludePlinqoFiles" Type="System.Boolean" Default="False" Optional="False" Category="2.Data" Description="Include a copy of the LinqToSql Templates in the project directory" %>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Default="" Optional="False" Category="3.Database" Description="Source Database" %>

<% CreateDirectoryStructure(); %>
<script runat="template">
	void CreateDirectoryStructure()
    {   
        //This is the location where web projects zip files should be found
        string zipFileLocation = String.Concat("Common\\", LanguageFolder);
			
		if(!Directory.Exists(Location))
		 Directory.CreateDirectory(Location);
		//Unzip the correct file
        FastZip fz = new FastZip();
        fz.ExtractZip(zipFileLocation + @"\" + FileName + @"." + LanguageAppendage + @".zip", Location, "");
		
        //Delete the vstempllate file b/c we will not be using it
		string vstemplate = QuickStartUtils.FindFileInDirectory(".vstemplate",Location);
        File.Delete(vstemplate);
        
		File.Copy(@".\Common\QuickStart.csp", Location + @"\QuickStart.csp");
		
		QuickStartSolution.SolutionItem solutionItem = new QuickStartSolution.SolutionItem();
		solutionItem.Name = ProjectName;
		solutionItem.Directory = Location;
		solutionItem.Guid = Guid.NewGuid();
        File.Move(Location + @"\" + FileName + @".csproj", Location + @"\" + ProjectName + @"." + LanguageAppendage + @"proj");
        QuickStartUtils.ReplaceAllInDirectory(Location, @"\$safeprojectname\$", ProjectName);
        QuickStartUtils.ReplaceAllInDirectory(Location, @"\$guid1\$", @"{" + solutionItem.Guid.ToString() + @"}");
        QuickStartUtils.ReplaceAllInDirectory(Location, @"\$if\$ \(\$targetframeworkversion\$ == 3.5\)", " ");
        QuickStartUtils.ReplaceAllInDirectory(Location, @"\$endif\$", " ");
        QuickStartUtils.FindAndReplace(Location + @"\web.config", @"<connectionStrings/>",
            @"<connectionStrings>
	            <add name=""" + SourceDatabase.Name + @"ConnectionString"" connectionString=""" + SourceDatabase.ConnectionString + @""" providerName=""System.Data.SqlClient""/>
              </connectionStrings>");

		// Create Solution
		QuickStartSolution quickStartSolution = this.Create<QuickStartSolution>();
		quickStartSolution.VisualStudioVersion = QuickStartSolution.VisualStudioVersionEnum.VS08;
		quickStartSolution.SolutionItems = new List<QuickStartSolution.SolutionItem>();
		quickStartSolution.SolutionItems.Add(solutionItem);
		quickStartSolution.RenderToFile(Path.Combine(Location, "Solution.sln"), true);

		if(IncludePlinqoFiles)
            QuickStartUtils.CopyDirectory(@"..\LinqToSql",Location + @"\LinqToSql",0);
			
        QuickStartUtils.FindAndReplace(Location + @"\QuickStart.csp", @"\$connectionString\$",SourceDatabase.ConnectionString);
        QuickStartUtils.FindAndReplace(Location + @"\QuickStart.csp", @"\$myDatabase\$", SourceDatabase.Database.Name);
        QuickStartUtils.FindAndReplace(Location + @"\QuickStart.csp", @"\$myContextNamespace\$", DataContext);
		QuickStartUtils.FindAndReplace(Location + @"\QuickStart.csp", @"\$language\$", LanguageFolder);
		
		UpdateProjectFile();
    }
	
	//Folder in vs web projects where the correct zip file is located
	protected string LanguageFolder
	{
		get { return (this.Language == QuickStartUtils.LanguageEnum.CSharp)	? "CSharp" : "VisualBasic"; }
	}
	//Some file names in the VS zip files hava an appendage that should be removed
	protected string LanguageAppendage 
	{
		get { return (this.Language == QuickStartUtils.LanguageEnum.CSharp) ? "cs" : "vb"; }
	}
	//A different zip file exists for each project type
	protected string FileName
	{
		get
		{
			string projectTypeFileName;
			switch (ProjectType)
			{
				default:
				case QuickStartUtils.ProjectTypeEnum.DynamicData:
					projectTypeFileName = "DynamicDataLinqToSqlWebApplication";
					break;
				case QuickStartUtils.ProjectTypeEnum.MVC:
					projectTypeFileName = "MvcWebApplicationProjectTemplateP5";
					break;
			}
			return projectTypeFileName;
		}
	}
	
	void UpdateProjectFile()
	{
		//The location in the csproj file directly below where we want to insert the csp include
        string projectInsertLocation = @"<Import Project=""\$\(MSBuildBinPath\)\\Microsoft\." + LanguageFolder + @"\.targets"" />";
		string reinsertString = @"<Import Project=""$(MSBuildBinPath)\Microsoft." + LanguageFolder + @".targets"" />";
        QuickStartUtils.FindAndReplace(Location + @"\" + ProjectName + @"." + LanguageAppendage + @"proj", projectInsertLocation,
                @"<ItemGroup>
                    <Generate Include=""QuickStart.csp"" />
                </ItemGroup>
                " + reinsertString);

        QuickStartUtils.FindAndReplace(Location + @"\" + ProjectName + @"." + LanguageAppendage + @"proj", @"</Project>",
            @"	<Import Project=""$(MSBuildExtensionsPath)\CodeSmith\CodeSmith.targets"" />
</Project>");
	}
</script>
