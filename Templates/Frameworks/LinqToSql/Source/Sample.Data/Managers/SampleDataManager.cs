
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using CodeSmith.Data;
using CodeSmith.Data.Rules;

namespace Sample.Data
{
    /// <summary>
    /// The data manager for a DataContext.
    /// </summary>
    public class SampleDataManager : DataManagerBase<SampleDataContext>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SampleDataManager"/> class.
        /// </summary>
        /// <param name="context">An instance of <see cref="SampleDataContext"/> DataContext.</param>
        public SampleDataManager(SampleDataContext context) : base(context)
        {
            _activeUserManager = new ActiveUserManager(this);
            _priorityManager = new PriorityManager(this);
            _roleManager = new RoleManager(this);
            _statusManager = new StatusManager(this);
            _taskManager = new TaskManager(this);
            _taskExtendedManager = new TaskExtendedManager(this);
            _userManager = new UserManager(this);
            _userRoleManager = new UserRoleManager(this);
        }
        #region Managers
        
        private ActiveUserManager _activeUserManager;

        /// <summary>
        /// Gets the manager for ActiveUser.
        /// </summary>
        public ActiveUserManager ActiveUser
        {
            get { return _activeUserManager; }
        }
        
        private PriorityManager _priorityManager;

        /// <summary>
        /// Gets the manager for Priority.
        /// </summary>
        public PriorityManager Priority
        {
            get { return _priorityManager; }
        }
        
        private RoleManager _roleManager;

        /// <summary>
        /// Gets the manager for Role.
        /// </summary>
        public RoleManager Role
        {
            get { return _roleManager; }
        }
        
        private StatusManager _statusManager;

        /// <summary>
        /// Gets the manager for Status.
        /// </summary>
        public StatusManager Status
        {
            get { return _statusManager; }
        }
        
        private TaskManager _taskManager;

        /// <summary>
        /// Gets the manager for Task.
        /// </summary>
        public TaskManager Task
        {
            get { return _taskManager; }
        }
        
        private TaskExtendedManager _taskExtendedManager;

        /// <summary>
        /// Gets the manager for TaskExtended.
        /// </summary>
        public TaskExtendedManager TaskExtended
        {
            get { return _taskExtendedManager; }
        }
        
        private UserManager _userManager;

        /// <summary>
        /// Gets the manager for User.
        /// </summary>
        public UserManager User
        {
            get { return _userManager; }
        }
        
        private UserRoleManager _userRoleManager;

        /// <summary>
        /// Gets the manager for UserRole.
        /// </summary>
        public UserRoleManager UserRole
        {
            get { return _userRoleManager; }
        }
        #endregion
    }
}