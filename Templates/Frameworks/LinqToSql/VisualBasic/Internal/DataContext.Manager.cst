<%@ CodeTemplate Language="VB" TargetLanguage="VB" Debug="True" 
    Description="Linq to Sql Entity Class." %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="Dbml" %>
<%@ Assembly Name="Generator" %>
<%@ Assembly Src="Manager.vb" %>

<%@ Import Namespace="LinqToSqlShared.DbmlObjectModel" %>

<%@ Property Category="2.Mapping" Name="Database" 
    Type="LinqToSqlShared.DbmlObjectModel.Database" Optional="False" 
    Description="Database schema instance. Must be set by parent template" %>

<%@ Property Category="3.Manager" Name="ManagerNamespace" 
    Type="System.String" Default="" Optional="False" 
    Description="The namespace to use for the generated manager class files."%>

<%@ Property Category="3.Manager" Name="DataManager" 
    Type="Manager.DataManager" Optional="False" 
    Description="DatabaseMapping instance. Must be set by parent template" %>

'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO NOT MODIFY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Diagnostics
Imports CodeSmith.Data
Imports CodeSmith.Data.Rules
Imports <%= ManagerNamespace %>

Namespace <%= Database.ContextNamespace %>
    ''' <summary>
    ''' The DataContext manager class for the <%= Database.Name %> database.
    ''' </summary>
    Partial <%= Naming.GetModifier(Database.AccessModifier) %> Class <%= Database.Class %>
        
        Private _manager As <%= DataManager.DataManagerName %> = Nothing
        
        ''' <summary>
        ''' Gets the data manager.
        ''' </summary>
        ''' <value>The data manager.</value>
        Public ReadOnly Property Manager AS <%= DataManager.DataManagerName %>
            Get
                If _manager IS Nothing Then
                    _manager = New <%= DataManager.DataManagerName %>(Me)
				END IF
                return _manager
            End Get
        END Property
        
        ''' <summary>
        ''' Sends changes made to retrieved objects to the underlying database.
        ''' </summary>
        ''' <param name="failureMode">How concurrency conflicts should be reported.</param>
        Public Overrides Sub SubmitChanges(ByVal failureMode As ConflictMode)
            Dim changes As ChangeSet = MyBase.GetChangeSet()
            Dim isValid As Boolean = Manager.Rules.Run(changes)
            
            If Not isValid
                Throw New BrokenRuleException(Manager.Rules.BrokenRules)
			END IF
            
            MyBase.SubmitChanges(failureMode)
        End Sub
    End Class
End Namespace