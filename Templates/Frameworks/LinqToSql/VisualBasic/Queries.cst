<%@ CodeTemplate Language="VB" TargetLanguage="XML" 
    Description="Generate Linq to Sql Query Extension Class File" 
    Debug="True"  OutputType="None" %>

<%@ Assembly Name="System.Design" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="Microsoft.Build.Engine" %>
<%@ Assembly Name="Microsoft.Build.Utilities" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="Dbml" Path="..\Common" %>
<%@ Assembly Name="Generator" Path="..\Common" %>
<%@ Assembly Src="Internal\Manager.vb" %>

<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="LinqToSqlShared.DbmlObjectModel" %>
<%@ Import Namespace="LinqToSqlShared.Generator" %>
<%@ Import Namespace="Manager" %>

<%@ Property Category="1.Mapping" Name="DbmlFile" 
    Type="System.String" Default="Database.dbml" Optional="False" 
    Description="The full path to the mapping file." 
    Editor="System.Windows.Forms.Design.FileNameEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" %>

<%@ Property Category="2.Query" Name="QueryDirectory" 
    Type="System.String" Default="" Optional="false" 
    Description="The folder to save the generated query extension files." 
    Editor="System.Windows.Forms.Design.FolderNameEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" %>


<%@ Register Name="QueryExtensionGeneratedClass" 
    Template="Internal\QueryExtension.Generated.cst" 
    MergeProperties="true" ExcludeProperties="Database, Type" %>

<script runat="template">    
    Public Sub Generate()
  If Not Directory.Exists(Me.QueryDirectory) Then
    Directory.CreateDirectory(Me.QueryDirectory)
  End If
  
  Dim sourceDatabase As Database = Dbml.FromFile(Me.DbmlFile)

  If sourceDatabase IsNot Nothing Then
    Me.Progress.MaximumValue = (SourceDatabase.Tables.Count + 2)
    Me.Progress.[Step] = 1
  End If

  If sourceDatabase Is Nothing Then
    Throw New Exception("Error loading Dbml file.")
  End If
  
  Dbml.FillInDefaults(sourceDatabase)
  
  CreateQueryClasses(sourceDatabase)
End Sub

Public Sub CreateQueryClasses(ByVal [database] As Database)
  Dim t As QueryExtensionGeneratedClass = Me.Create(Of QueryExtensionGeneratedClass)()
  Me.CopyPropertiesTo(t)
  t.Database = [database]
  
  For Each [table] As Table In [database].Tables
    Dim watch As Stopwatch = Stopwatch.StartNew()
    
    Dim className As String = [table].Member + ""
    
    Dim fileName As String = className + "Extensions.vb"
    fileName = Path.Combine(QueryDirectory, fileName)
    
	Dim strategy As PreserveRegionsMergeStrategy = New PreserveRegionsMergeStrategy("^[ \t]*(?i:User)", "VB")
	
    Debug.WriteLine(String.Format("Creating Entity Query Extension Class '{0}' ...", className))
    t.Type = table.Type
    t.RenderToFile(  fileName, strategy)
    
    Debug.WriteLine(String.Format("Created '{0}' in {1} ms.", className, watch.Elapsed.TotalMilliseconds.ToString()))
    
    Me.Progress.PerformStep()
  Next
End Sub

</script>
Generating Linq to Sql Queries ...
<% Generate() %>