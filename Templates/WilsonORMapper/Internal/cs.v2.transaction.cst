<%@ CodeTemplate 
	Language="C#" 
	TargetLanguage="C#" 
	Description="A read only base class for Wilson ORMapper business objects" 
	Debug="true" %>
	
<%@ Register Name="ClassCommon" Template="class.common.cst" MergeProperties="True" ExcludeProperties="" %>
//------------------------------------------------------------------------------
// <autogenerated>
//		This code was generated by a CodeSmith Template.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Data;
using Wilson.ORMapper;

namespace <%= ClassNamespace %>
{
    /// <summary>
    /// Helper class to manage persistance with a transaction
    /// </summary>
    public class TransactionManager : IDisposable
    {

        private Transaction _transaction;

        /// <summary>
        /// Initializes a new instance of the <see cref="T:TransactionManager"/> class.
        /// </summary>
        /// <param name="isolationLevel">The isolation level.</param>
        public TransactionManager(IsolationLevel isolationLevel)
        {
            _transaction = DataManager.ObjectSpace.BeginTransaction(isolationLevel);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="T:TransactionManager"/> class.
        /// </summary>
        public TransactionManager()
        {
            _transaction = DataManager.ObjectSpace.BeginTransaction();
        }

        /// <summary>
        /// Commits this transaction.
        /// </summary>
        public void Commit()
        {
            _transaction.Commit();
        }

        /// <summary>
        /// Rollbacks this transaction.
        /// </summary>
        public void Rollback()
        {
            _transaction.Rollback();
        }

        /// <summary>
        /// Saves the specified instance with this transaction.
        /// </summary>
        /// <param name="instance">The instance to save.</param>
        public void Save(IPersist instance)
        {
            if (instance == null)
                throw new ArgumentNullException("instance");

            instance.Save(_transaction);
        }

        /// <summary>
        /// Saves the specified instances with this transaction.
        /// </summary>
        /// <param name="instances">The instances to save.</param>
        public void Save(IList<IPersist> instances)
        {
            if (instances == null)
                throw new ArgumentNullException("instances");
            
            foreach (IPersist instance in instances)
                instance.Save(_transaction);
        }

        /// <summary>
        /// Deletes the specified instance with this transaction.
        /// </summary>
        /// <param name="instance">The instance to delete.</param>
        public void Delete(IPersist instance)
        {
            if (instance == null)
                throw new ArgumentNullException("instance");
            
            instance.Delete(_transaction);
        }

        /// <summary>
        /// Deletes the specified instances with this transaction.
        /// </summary>
        /// <param name="instances">The instances to delete.</param>
        public void Delete(IList<IPersist> instances)
        {
            if (instances == null)
                throw new ArgumentNullException("instances");
            
            foreach (IPersist instance in instances)
                instance.Delete(_transaction);
        }

#region IDisposable Members
        /// <summary>
        /// Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
        /// </summary>
        public void Dispose()
        {
            _transaction.Dispose();
        }
#endregion
    }

}