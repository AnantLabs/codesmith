<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA 3.8.X ReadOnlyRoot" %>

<%@ Register Name="ReadOnlyRoot" Template="Internal\ReadOnlyRoot.cst" %>
<%@ Register Name="ReadOnlyRootDataAccess" Template="Internal\ReadOnlyRoot.DataAccess.cst" %>
<%@ Register Name="ReadOnlyRootDataAccessParameterized" Template="Internal\ReadOnlyRoot.DataAccess.ParameterizedSQL.cst" %>
<%@ Register Name="ReadOnlyRootDataAccessStoredProcedures" Template="Internal\ReadOnlyRoot.DataAccess.StoredProcedures.cst" %>
<%@ Register Name="ReadOnlyRootGenerated" Template="Internal\ReadOnlyRoot.Generated.cst" %>

<%@ Register Name="SqlStoredProcedures" Template="..\DataAccessLayer\Internal\SQLStoredProcedures.cst" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<script runat="template">

Public Overloads Overrides Sub Render(writer As System.IO.TextWriter)

    RegisterReferences()

    'ReadOnlyRoot
    Dim readOnlyRoot As ReadOnlyRoot = Me.Create(Of ReadOnlyRoot)()
    Me.CopyPropertiesTo(readOnlyRoot)
    readOnlyRoot.BusinessClassName = String.Format("{0}Info", readOnlyRoot.BusinessClassName)

    Dim parentFileName As String = System.IO.Path.Combine(Me.Location, String.Format("Entities\{0}.vb", readOnlyRoot.BusinessClassName))
    If Not System.IO.File.Exists(parentFileName) Then
        readOnlyRoot.RenderToFile(parentFileName, False)
    End If

    'ReadOnlyRoot.Generated
    Dim fileName As String = System.IO.Path.Combine(Location, String.Format("Entities\{0}.Generated.vb", readOnlyRoot.BusinessClassName))

    Dim readOnlyRootGenerated As ReadOnlyRootGenerated = Me.Create(Of ReadOnlyRootGenerated)()
    Me.CopyPropertiesTo(readOnlyRootGenerated)
    readOnlyRootGenerated.BusinessClassName = String.Format("{0}Info", readOnlyRootGenerated.BusinessClassName)

    readOnlyRootGenerated.RenderToFile(fileName, parentFileName, True)

    'ReadOnlyRoot.DataAccess
    fileName = System.IO.Path.Combine(Location, String.Format("Entities\{0}.DataAccess.vb", readOnlyRoot.BusinessClassName))
    If DataAccessImplementation = DataAccessMethod.None Then
        Dim readOnlyRootDataAccess As ReadOnlyRootDataAccess = Me.Create(Of ReadOnlyRootDataAccess)()
        Me.CopyPropertiesTo(readOnlyRootDataAccess)
        readOnlyRootDataAccess.BusinessClassName = String.Format("{0}Info", readOnlyRootDataAccess.BusinessClassName)

        readOnlyRootDataAccess.RenderToFile(fileName, parentFileName, True)
    ElseIf DataAccessImplementation = DataAccessMethod.ParameterizedSQL Then
        Dim readOnlyRootDataAccessParameterized As ReadOnlyRootDataAccessParameterized = Me.Create(Of ReadOnlyRootDataAccessParameterized)()
        Me.CopyPropertiesTo(readOnlyRootDataAccessParameterized)
        readOnlyRootDataAccessParameterized.BusinessClassName = String.Format("{0}Info", readOnlyRootDataAccessParameterized.BusinessClassName)

        readOnlyRootDataAccessParameterized.RenderToFile(fileName, parentFileName, True)
    ElseIf DataAccessImplementation = DataAccessMethod.StoredProcedures Then
        Dim readOnlyRootDataAccessStoredProcedures As ReadOnlyRootDataAccessStoredProcedures = Me.Create(Of ReadOnlyRootDataAccessStoredProcedures)()
        Me.CopyPropertiesTo(readOnlyRootDataAccessStoredProcedures)
        readOnlyRootDataAccessStoredProcedures.BusinessClassName = String.Format("{0}Info", readOnlyRootDataAccessStoredProcedures.BusinessClassName)
        
        readOnlyRootDataAccessStoredProcedures.RenderToFile(fileName, parentFileName, True)
        
        'StoredProcedures
        fileName = System.IO.Path.Combine(Location, String.Format("Entities\{0}.StoredProcedures.sql", readOnlyRoot.BusinessClassName))
        Dim sqlStoredProcedures As SqlStoredProcedures = Me.Create(Of SqlStoredProcedures)()
        Me.CopyPropertiesTo(sqlStoredProcedures)
        sqlStoredProcedures.DataProjectName = "Not needed for sql stored procedures."
        
        sqlStoredProcedures.RenderToFile(fileName, parentFileName, True)
    End If
End Sub

</script>