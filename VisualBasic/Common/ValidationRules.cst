<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="CodeSmith.QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA Map" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.QuickStart" Path="..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.QuickStart" %>
    
#Region "Business Rules"
    
        Protected Overrides Sub AddBusinessRules()
            ' Call the base class, if this call isn't made than any declared System.ComponentModel.DataAnnotations rules will not work.
            MyBase.AddBusinessRules()

            If AddBusinessValidationRules() Then Exit Sub
    
    <%     For Each member As Member in Entity.GetProperties(PropertyType.NoConcurrency) %>
    <% If (member.SystemType = "System.String" ) Then  %>
    <% If Not member.IsNullable Then %>
    <% If(IsLatestCSLA) Then %>
            BusinessRules.AddRule(New Csla.Rules.CommonRules.Required(<%= member.PrivateMemberVariableName %>Property))
    <% Else %>
            ValidationRules.AddRule(AddressOf CommonRules.StringRequired, <%= member.PrivateMemberVariableName %>Property)
    <%  End If
    End If
        If Not member.ExcludeBusinessSizeRule() Then %>
    <% If(IsLatestCSLA) Then %>
            BusinessRules.AddRule(New Csla.Rules.CommonRules.MaxLength(<%= member.PrivateMemberVariableName %>Property, <%= member.Size %>))
    <% Else %>
            ValidationRules.AddRule(AddressOf CommonRules.StringMaxLength, New CommonRules.MaxLengthRuleArgs(<%= member.PrivateMemberVariableName %>Property, <%= member.Size %>))
    <% End If 
        End If 
        End If 
    Next %>
        End Sub
    
#End Region
