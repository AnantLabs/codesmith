<?xml version="1.0" encoding="utf-8" ?>
<!-- This is a sample of the batch mode property set format -->
<codeSmith xmlns="http://www.codesmithtools.com/schema/csp.xsd">
	<!-- template that will be used to generate code -->
	<defaultTemplate path="hashtable.cst" />
	
	<!-- any number of variables can be setup for use in the propery sets -->
	<variables>
		<!-- this variable can be used in the property sets like $(SomeVariable) -->
		<add key="StringType" value="string" />
	</variables>
	
	<!-- any properties can be setup here as defaults and can be overridden in each property set -->
	<defaultProperties>
		<property name="Accessibility">Public</property>
		<property name="TargetNamespace">MyNamespace</property>
	</defaultProperties>
	
	<!-- list of property sets which each get rendered -->
	<propertySets>
		<!-- this property set will use the default template and will use the template's GetFileName method to name the file -->
		<propertySet>
			<property name="KeyType">$(StringType)</property>
			<property name="ItemType">$(StringType)</property>
			<property name="ClassName">StringHashtable</property>
		</propertySet>
		
		<!-- this property set will use the default template and will be output to a file named StringIntHashtable.cs -->
		<propertySet output="StringIntHashtable.cs">
			<property name="KeyType">$(StringType)</property>
			<property name="ItemType">int</property>
			<property name="ClassName">StringIntHashtable</property>
		</propertySet>
		
		<!-- this property set will use the IList.cst template and will be output to a file named IStringList.cs -->
		<propertySet template="IList.cst" output="IStringList.cs">
			<property name="ItemType">String</property>
		</propertySet>
		
		<!-- this property set will use the MergeOutputSample.cst template and it's output will be inserted into the region named "Sample Generated Region" in the MergeOutputSample.vb file -->
		<propertySet template="MergeOutputSample.cst" output="MergeOutputSample.vb" mergeType="InsertRegion" mergeInit="RegionName=Sample Generated Region;Language=C#;">
			<property name="SampleBooleanProperty">True</property>
			<property name="SampleStringProperty">SampleString</property>
		</propertySet>
		
		<!-- this property set will use the PreserveRegionsMergeSample.cst template and it's output will be merged into the PreserveRegionsMergeSample.sql file preserving any custom regions -->
		<propertySet template="PreserveRegionsMergeSample.cst" output="PreserveRegionsMergeSample.sql" mergeType="PreserveRegions" mergeInit="RegionNameRegex=^[ \t]*(?i:Custom);Language=T-SQL;">
		</propertySet>
	</propertySets>
</codeSmith>
