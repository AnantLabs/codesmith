<%-- 
CodeSmith DBDocumenter Templates
Author:  Jason Alexander (jason@ngallery.org), Eric J. Smith
Website: http://www.ngallery.org/dbdocumenter/
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="HTML" Src="DBDocumenterTemplate.cs" Inherits="DBDocumenterTemplate" Description="Generates a set of HTML-based database documentation." %>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Category="Context" Description="Database that the documentation should be based on." %>
<%@ Property Name="ServerName" Type="System.String" Category="Output" Description="The name of the actual database server that is being documented." %>
<%@ Property Name="DocumentationTitle" Type="System.String" Default="Database Documentation" Category="Output" Description="Defines what the title of the HTML page that will be generated will be." %>
<%@ Register Name="SprocSummaryTemplate" Template="sproc_summary.cst" %>
<%@ Register Name="SprocDetailTemplate" Template="sproc_details.cst" %>
<%@ Register Name="SprocTextTemplate" Template="sproc_text.cst" %>
<%@ Register Name="HeaderTemplate" Template="header.cst" %>
<%@ Register Name="FooterTemplate" Template="footer.cst" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="SchemaExplorer" %>
<script runat="template">
// Override the render method so that we can output seperate files for each sproc.
public override void Render(System.IO.TextWriter writer)
{
	this.Progress.MaximumValue = (SourceDatabase.Commands.Count * 2) + 2;
	this.Progress.Step = 1;
	
	// render the summary list of procs file.
	SprocSummaryTemplate sprocSummaryTemplate = this.Create<SprocSummaryTemplate>();
	this.CopyPropertiesTo(sprocSummaryTemplate);
	sprocSummaryTemplate.RenderToFile(this.OutputDirectory + "sproc_summary.html", true);
	this.Progress.PerformStep();
	
	CommandSchemaCollection commands = new CommandSchemaCollection(SourceDatabase.Commands);
	commands.Sort(new PropertyComparer("FullName"));
	
	for (int i = 0; i < commands.Count; i++)
	{
		// render the sproc source code file.
		Trace.WriteLine("Building sproc source (sproc_" + i + ".html) for " + commands[i].Name + "...");
		SprocTextTemplate sprocTextTemplate = this.Create<SprocTextTemplate>();
		this.CopyPropertiesTo(sprocTextTemplate);
		sprocTextTemplate.SetProperty("SourceCommand", commands[i]);
		sprocTextTemplate.SetProperty("CommandIndex", i);
		sprocTextTemplate.RenderToFile(this.OutputDirectory + "sproc_" + i + ".html", true);
		this.Progress.PerformStep();
		
		// render the sproc details file.
		Trace.WriteLine("Building sproc details (sproc_details_" + i + ".html) for " + commands[i].Name + "...");
		SprocDetailTemplate sprocDetailTemplate = this.Create<SprocDetailTemplate>();
		this.CopyPropertiesTo(sprocDetailTemplate);
		sprocDetailTemplate.SetProperty("SourceCommand", commands[i]);
		sprocDetailTemplate.SetProperty("CommandIndex", i);
		sprocDetailTemplate.RenderToFile(this.OutputDirectory + "sproc_details_" + i + ".html", true);
		this.Progress.PerformStep();
	}
	
	base.Render(writer);
	this.Progress.PerformStep();
}
</script>
<%
HeaderTemplate headerTemplate = this.Create<HeaderTemplate>();
headerTemplate.SelectedTabIndex = 2;
this.OutputTemplate(headerTemplate);
%>
<img src="images/arrow.gif" border="0"/>&nbsp;&nbsp;<span class="header">Stored Procedures (<%= SourceDatabase.Commands.Count %> Total)</span><br/>
<hr width="100%" size="1" />
<iframe src="sproc_summary.html" name="sprocsummary" frameborder="0" height="145" width="100%"></iframe>
<br/>
<img src="images/arrow.gif" border="0">&nbsp;&nbsp;<span class="header">Stored Procedure Details</span><br>
<hr width="100%" size="1" />
<iframe src="sproc_details_0.html" name="sprocdetails" frameborder="0" height="300" width="100%"></iframe>
<% this.OutputTemplate(this.Create<FooterTemplate>()); %>