<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="Generator.CSLA.EntityCodeTemplate" %>
<%@ Register Name="CommandObject" Template="Internal\CommandObject.cst" %>
<%@ Register Name="CommandObjectDataAccess" Template="Internal\CommandObject.DataAccess.cst" %>
<%@ Register Name="CommandObjectGenerated" Template="Internal\CommandObject.Generated.cst" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="Generator.CSLA" Path="..\..\Common" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>

<script runat="template">

public override void Render(System.IO.TextWriter writer)
{
    RegisterReferences();

    #region CommandObject
    
    CommandObject commandObject = this.Create<CommandObject>();
    this.CopyPropertiesTo(commandObject);
    
    string parentFileName = System.IO.Path.Combine(this.Location, String.Format("Command\\{0}.cs", commandObject.BusinessClassName));
    if (!System.IO.File.Exists(parentFileName))
    {
        commandObject.RenderToFile(parentFileName, false);
    }
    
    #region CommandObject.Generated
    
    string fileName = System.IO.Path.Combine(Location, String.Format("Command\\{0}.Generated.cs", commandObject.BusinessClassName));
    
    CommandObjectGenerated commandObjectGenerated = this.Create<CommandObjectGenerated>();
    this.CopyPropertiesTo(commandObjectGenerated);
    
    commandObjectGenerated.RenderToFile(fileName, parentFileName, true);
    
    #endregion
    
    #region CommandObject.DataAccess
    
    fileName = System.IO.Path.Combine(Location, String.Format("Command\\{0}.DataAccess.cs", commandObject.BusinessClassName));
    
    CommandObjectDataAccess commandObjectDataAccess = this.Create<CommandObjectDataAccess>();
    this.CopyPropertiesTo(commandObjectDataAccess);
    
    commandObjectDataAccess.RenderToFile(fileName, parentFileName, true);
    
    #endregion
    
    #endregion
}

</script>