<%-- Author: Blake Niemyjski --%>
<%--          Joe McPherson   --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="Generator.CSLA.EntityCodeTemplate" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.CSharpExtensions" Path="..\..\Common" %>
<%@ Assembly Name="Generator.CSLA" Path="..\..\Common" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
    
            //LinqToSQL Modification
            bool cancel = false;
            OnFetching(criteria, ref cancel);
            if (cancel) return;
            
            // Get <%= Entity.Name %> data for a single criteria
            using (var ctx = ContextManager<DAL.PetshopDataContext>.GetManager(LinqToSQLHelper.ConnectionString, true))
            {
<%    string PrimaryKeyCriteria = "";    
    string PrimaryKeyFields = "";
     int memberCount = 0 ; 
    foreach (IProperty property in Entity.GetProperties(PropertyType.Key)) 
    {
        PrimaryKeyCriteria += "criteria." + property.Name.ToString() ;
        PrimaryKeyFields += property.Name.ToString() ;
        if ( memberCount < (Entity.GetProperties(PropertyType.Key).Count - 1))
        {
            PrimaryKeyCriteria += ", " ;
            PrimaryKeyFields += ", ";
        }
         memberCount = memberCount + 1 ; 
     } 
%>        
                DAL.<%= Entity.Name %> item = ctx.DataContext.<%= Entity.Name %>.GetByKey(<%=PrimaryKeyCriteria%>);
    
                // Raise an error if the record was not found.  Otherwise, map the data retrieved to the current object
                if (item == null)
                    throw new ArgumentNullException("<%=PrimaryKeyFields%>", "Selection by <%=PrimaryKeyFields%> did not return a result.");
                else
                {        
                    Map(item);
                }
                
                OnFetched();
            }
