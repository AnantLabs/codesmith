<%-- Author: Will Comeaux --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Debug="False" Inherits="CodeSmith.QuickStart.EntityMasterCodeTemplate" CompilerVersion="v3.5" Encoding="UTF-8" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Register Name="TestDynamicRootTemplate" Template="TestDynamicRoot.cst" %>
<%@ Register Name="TestDynamicRootListTemplate" Template="TestDynamicRootList.cst" %>
<%@ Register Name="TestEditableChildTemplate" Template="TestEditableChild.cst" %>
<%@ Register Name="TestEditableChildListTemplate" Template="TestEditableChildList.cst" %>
<%@ Register Name="TestEditableRootTemplate" Template="TestEditableRoot.cst" %>
<%@ Register Name="TestEditableRootListTemplate" Template="TestEditableRootList.cst" %>
<%@ Register Name="TestNameValueListTemplate" Template="TestNameValueList.cst" %>
<%@ Register Name="TestReadOnlyChildTemplate" Template="TestReadOnlyChild.cst" %>
<%@ Register Name="TestReadOnlyChildListTemplate" Template="TestReadOnlyChildList.cst" %>
<%@ Register Name="TestReadOnlyRootTemplate" Template="TestReadOnlyRoot.cst" %>
<%@ Register Name="TestReadOnlyRootListTemplate" Template="TestReadOnlyRootList.cst" %>
<%@ Register Name="TestSwitchableTemplate" Template="TestSwitchable.cst" %>
<%@ Register Name="NUnitProjectFileTemplate" Template="NUnitProjectFile.cst" %>

<% Generate(); %>
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using <%= VersionInfo %>.
//       Changes to this template will not be lost.
//
//     Template: <%= CodeTemplateInfo.FileName %>
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
<script runat="template">

public override void Generate()
{
    TableSchema randomSchema = null;
    
    #region DynamicRootTests

    foreach(TableSchema table in this.DynamicRoot)
    {
        TestDynamicRootTemplate template = this.Create<TestDynamicRootTemplate>();
        RenderHelper(template, table);
    }

    #endregion
    
    #region DynamicRootListTests

    foreach(TableSchema table in this.DynamicRootList)
    {
        randomSchema = table;
        TestDynamicRootListTemplate template = this.Create<TestDynamicRootListTemplate>();
        RenderHelper(template, table);
    }

    #endregion    
    
    #region EditableChildTests

    foreach(TableSchema table in this.EditableChild)
    {
        randomSchema = table;
        TestEditableChildTemplate template = this.Create<TestEditableChildTemplate>();
        RenderHelper(template, table);
    }

    #endregion
    
    #region EditableChildListTests

    foreach(TableSchema table in this.EditableChildList)
    {
        randomSchema = table;
        TestEditableChildListTemplate template = this.Create<TestEditableChildListTemplate>();
        RenderHelper(template, table);
    }

    #endregion    
    
    #region EditableRootTests

    foreach(TableSchema table in this.EditableRoot)
    {
        randomSchema = table;
        TestEditableRootTemplate template = this.Create<TestEditableRootTemplate>();
        RenderHelper(template, table);
    }

    #endregion    
    
    #region EditableRootListTests

    foreach(TableSchema table in this.EditableRootList)
    {
        randomSchema = table;
        TestEditableRootListTemplate template = this.Create<TestEditableRootListTemplate>();
        RenderHelper(template, table);
    }

    #endregion
    
    #region NameValueListTests

    foreach(TableSchema table in this.NameValueList)
    {
        randomSchema = table;
        TestNameValueListTemplate template = this.Create<TestNameValueListTemplate>();
        RenderHelper(template, table);
    }

    #endregion    
    
    #region ReadOnlyChildTests

    foreach(TableSchema table in this.ReadOnlyChild)
    {
        randomSchema = table;
        TestReadOnlyChildTemplate template = this.Create<TestReadOnlyChildTemplate>();
        RenderHelper(template, table);
    }

    #endregion
    
    #region ReadOnlyChildListTests

    foreach(TableSchema table in this.ReadOnlyChildList)
    {
        randomSchema = table;
        TestReadOnlyChildListTemplate template = this.Create<TestReadOnlyChildListTemplate>();
        RenderHelper(template, table);
    }

    #endregion    
 
    #region ReadOnlyRootTests

    foreach(TableSchema table in this.ReadOnlyRoot)
    {
        randomSchema = table;
        TestReadOnlyRootTemplate template = this.Create<TestReadOnlyRootTemplate>();
        RenderHelper(template, table);
    }

    #endregion    
    
    #region ReadOnlyListTests

    foreach(TableSchema table in this.ReadOnlyList)
    {
        randomSchema = table;
        TestReadOnlyRootListTemplate template = this.Create<TestReadOnlyRootListTemplate>();
        RenderHelper(template, table);
    }

    #endregion
    
    #region SwitchableObjectTests

    foreach(TableSchema table in this.SwitchableObject)
    {
        randomSchema = table;
        TestSwitchableTemplate template = this.Create<TestSwitchableTemplate>();
        RenderHelper(template, table);
    }

    #endregion
    
    #region NUnitProjectFile
    if(randomSchema != null)
    {
        string parentFileName = System.IO.Path.Combine(this.Location, string.Format("{0}.nunit", TestProjectName));
        if (!System.IO.File.Exists(parentFileName))
        {
            NUnitProjectFileTemplate nUnitProjectFileTemplate = this.Create<NUnitProjectFileTemplate>();
            CopyPropertiesTo(nUnitProjectFileTemplate);
            nUnitProjectFileTemplate.SourceTable = randomSchema;
            nUnitProjectFileTemplate.BusinessClassName = parentFileName;
            RenderHelper(nUnitProjectFileTemplate, randomSchema);
        }
    }
    #endregion
    
    PreserveRegionsMergeStrategy strategy = new PreserveRegionsMergeStrategy();
    strategy.RegionNameRegex = "^[ \\t]*[ \\s]*\"?(?i:Custom)\"?;";
}

</script>