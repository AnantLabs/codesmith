<%-- 
Name: Schema Helper example that will show you the relationships that Schema Helper detects.
Author: Blake Niemyjski
Description: Used to Quick Start Visual Studio Projects
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Inherits="CodeSmith.QuickStart.QuickStartCodeTemplate" Description="Schema Helper example that will show you the relationships that Schema Helper detects." CompilerVersion="v3.5" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" %>
<%@ Assembly Name="CodeSmith.QuickStart" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.VisualBasicExtensions"%>

<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.IO" %>

<% EntityManager em = new EntityManager(SourceDatabase); %>

Excluded Tables
<% foreach(TableSchema t in em.ExcludedTables) { %>
<%= t.FullName %>
<% } %>

Entities
<% foreach(Entity e in em.Entities) { %>

----------------

<%= e.ClassName %>
	Search Criteria
<%	foreach(SearchCriteria sc in e.SearchCriteria(SearchCriteriaEnum.All)) { %>
		<%= sc.MethodName %>
<%	foreach(Member m in sc.Properties) { %>
            <%= m.PropertyName %>
<% }} %>

	PrimaryKey
<%	foreach(Member m in e.PrimaryKey.Properties) { %>
		<%= m.Name %>
<% } %>
	Members
<%	foreach(Member m in e.Members) { %>
		<%= m.Name %>
<% } %>
	ManyToMany
<%	foreach(Association a in e.AssociatedManyToMany) { foreach(AssociationMember am in a) { %>
		<%= am.Name %>
<% }%>
            <%= a.SearchCriteria.MethodName %>
<%	foreach(Member m in a.SearchCriteria.Properties) { %>
                <%= m.PropertyName %>
<% } } %>
	OneToMany
<%	foreach(Association a in e.Where(a => a.AssociationType == AssociationType.OneToMany)) { foreach(AssociationMember am in a) { %>
		<%= am.Name %>
<% }%>
            <%= a.SearchCriteria.MethodName %>
<%	foreach(Member m in a.SearchCriteria.Properties) { %>
                <%= m.PropertyName %>
<% } } %>
	OneToZeroOrOne
<%	foreach(Association a in e.Associations.Where(a => a.AssociationType == AssociationType.OneToZeroOrOne)) { foreach(AssociationMember am in a) { %>
		<%= am.Name %>
<% }%>
            <%= a.SearchCriteria.MethodName %>
<%	foreach(Member m in a.SearchCriteria.Properties) { %>
                <%= m.PropertyName %>
<% } } %>
	ManyToOne
<%	foreach(Association a in e.Associations.Where(a => a.AssociationType == AssociationType.ManyToOne)) { foreach(AssociationMember am in a) { %>
		<%= am.Name %>
<% }%>
            <%= a.SearchCriteria.MethodName %>
<%	foreach(Member m in a.SearchCriteria.Properties) { %>
                <%= m.PropertyName %>
<% } } %>
<% } %>