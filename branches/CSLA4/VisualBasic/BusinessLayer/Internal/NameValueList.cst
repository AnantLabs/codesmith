<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="CodeSmith.QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.VisualBasicExtensions" Path="..\..\..\Common" %>
<%@ Assembly Name="CodeSmith.QuickStart" Path="..\..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.QuickStart" %>
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using <%= VersionInfo %>.
'       Changes to this template will not be lost.
'
'     Template: <%= CodeTemplateInfo.FileName %>
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System
<% If(IncludeSilverlightSupport) Then %>
#If Not SILVERLIGHT Then
<% End If %>
Imports System.Data
Imports System.Data.SqlClient
<% If(IncludeSilverlightSupport) Then %>
#End If
<% End If %>

Imports Csla
Imports Csla.Data

Namespace <%= BusinessProjectName %>
    Public Partial Class <%= BusinessClassName %>
    
#Region "Preserved Code"
    
    <% If(DataAccessImplementation = DataAccessMethod.ParameterizedSQL Or DataAccessImplementation = DataAccessMethod.ObjectFactoryParameterizedSQL) Then %>
    
#Region "Custom Data Access"
    
        Private Shadows Sub DataPortal_Fetch()
            RaiseListChangedEvents = false
            IsReadOnly = false
    
            Dim criteria as New <%= CriteriaClassName %>()
            Dim commandText As String = String.Format("SELECT <%= entity.Members.BuildDataBaseColumns() %> FROM [<%= entity.Table.Owner %>].[<%= entity.Table.Name %>] {0}", ADOHelper.BuildWhereStatement(criteria.StateBag))
            Using connection As New SqlConnection(ADOHelper.ConnectionString)
                connection.Open()
                Using command As New SqlCommand(commandText, connection)
                    command.Parameters.AddRange(ADOHelper.SqlParameters(criteria.StateBag))
                    Using reader As SafeDataReader = New SafeDataReader(command.ExecuteReader())
                        If reader.Read() Then
                            Do
                                ' TODO: You will need to update the GetInt32 and GetString values.
                                Me.Add(New NameValuePair(reader.GetInt32("<%= Entity.GetProperties(PropertyType.Key).ColumnName %>"), reader.GetString("<%= Entity.GetProperties(PropertyType.NoKey)(0).ColumnName %>")))
                            Loop While reader.Read()
                        Else
                            Throw New Exception(String.Format("The record was not found in '<%= entity.Table.Name %>' using the following criteria: {0}.", criteria))
                        End If
                    End Using
                End Using
            End Using
    
            IsReadOnly = true
            RaiseListChangedEvents = true
        End Sub
    
#End Region
    
    <% Else If(DataAccessImplementation = DataAccessMethod.StoredProcedures Or DataAccessImplementation = DataAccessMethod.ObjectFactoryStoredProcedures) Then %>
    
#Region "Custom Data Access"
    
        Private Shadows Sub DataPortal_Fetch()
            RaiseListChangedEvents = false
            IsReadOnly = false
    
            Dim criteria as New <%= CriteriaClassName %>()
            Using connection As New SqlConnection(ADOHelper.ConnectionString)
                connection.Open()
                Using command As New SqlCommand("<%= GetSelectStoredProcedureName() %>", connection)
                    command.CommandType = CommandType.StoredProcedure
                    command.Parameters.AddRange(ADOHelper.SqlParameters(criteria.StateBag))
                    <%= Entity.GetProperties(PropertyType.NoConcurrency).BuildHasValueCommandParameters() %>
                    Using reader As SafeDataReader = New SafeDataReader(command.ExecuteReader())
                        If reader.Read() Then
                            Do
                                ' TODO: You will need to update the GetInt32 and GetString values.
                                Me.Add(New NameValuePair(reader.GetInt32("<%= Entity.GetProperties(PropertyType.Key).ColumnName %>"), reader.GetString("<%= Entity.GetProperties(PropertyType.NoKey)(0).ColumnName %>")))
                            Loop While reader.Read()
                        Else
                            Throw New Exception(String.Format("The record was not found in '<%= entity.Table.Name %>' using the following criteria: {0}.", criteria))
                        End If
                    End Using
                End Using
            End Using
    
            IsReadOnly = true
            RaiseListChangedEvents = true
        End Sub
    
#End Region
    
    <% End If %>
    
#End Region
    
    End Class
End Namespace