
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace Sample.Data
{
    /// <summary>
    /// Class representing data for the Sample database.
    /// </summary>
    
    [DataContract]
    public partial class GetMyTasksResult
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="GetMyTasksResult"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public GetMyTasksResult()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _taskID;

        /// <summary>
        /// Gets or sets the TaskID column value.
        /// </summary>
        [Column(Name="TaskID", Storage="_taskID", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember]
        public int TaskID
        {
            get { return _taskID; }
            set
            {
                if (_taskID != value)
                {
                    OnTaskIDChanging(value);
                    _taskID = value;
                    OnTaskIDChanged();
                }
            }
        }
        
        private int _statusID;

        /// <summary>
        /// Gets or sets the StatusID column value.
        /// </summary>
        [Column(Name="StatusID", Storage="_statusID", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember]
        public int StatusID
        {
            get { return _statusID; }
            set
            {
                if (_statusID != value)
                {
                    OnStatusIDChanging(value);
                    _statusID = value;
                    OnStatusIDChanged();
                }
            }
        }
        
        private int _priorityID;

        /// <summary>
        /// Gets or sets the PriorityID column value.
        /// </summary>
        [Column(Name="PriorityID", Storage="_priorityID", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember]
        public int PriorityID
        {
            get { return _priorityID; }
            set
            {
                if (_priorityID != value)
                {
                    OnPriorityIDChanging(value);
                    _priorityID = value;
                    OnPriorityIDChanged();
                }
            }
        }
        
        private int _createdID;

        /// <summary>
        /// Gets or sets the CreatedID column value.
        /// </summary>
        [Column(Name="CreatedID", Storage="_createdID", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember]
        public int CreatedID
        {
            get { return _createdID; }
            set
            {
                if (_createdID != value)
                {
                    OnCreatedIDChanging(value);
                    _createdID = value;
                    OnCreatedIDChanged();
                }
            }
        }
        
        private System.DateTime _createDate;

        /// <summary>
        /// Gets or sets the CreateDate column value.
        /// </summary>
        [Column(Name="CreateDate", Storage="_createDate", DbType="datetime NOT NULL", CanBeNull=false)]
        [DataMember]
        public System.DateTime CreateDate
        {
            get { return _createDate; }
            set
            {
                if (_createDate != value)
                {
                    OnCreateDateChanging(value);
                    _createDate = value;
                    OnCreateDateChanged();
                }
            }
        }
        
        private System.DateTime _updateDate;

        /// <summary>
        /// Gets or sets the UpdateDate column value.
        /// </summary>
        [Column(Name="UpdateDate", Storage="_updateDate", DbType="datetime NOT NULL", CanBeNull=false)]
        [DataMember]
        public System.DateTime UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    OnUpdateDateChanging(value);
                    _updateDate = value;
                    OnUpdateDateChanged();
                }
            }
        }
        
        private string _summary;

        /// <summary>
        /// Gets or sets the Summary column value.
        /// </summary>
        [Column(Name="Summary", Storage="_summary", DbType="varchar(255) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string Summary
        {
            get { return _summary; }
            set
            {
                if (_summary != value)
                {
                    OnSummaryChanging(value);
                    _summary = value;
                    OnSummaryChanged();
                }
            }
        }
        
        private string _details;

        /// <summary>
        /// Gets or sets the Details column value.
        /// </summary>
        [Column(Name="Details", Storage="_details", DbType="varchar(2000)")]
        [DataMember]
        public string Details
        {
            get { return _details; }
            set
            {
                if (_details != value)
                {
                    OnDetailsChanging(value);
                    _details = value;
                    OnDetailsChanged();
                }
            }
        }
        
        private Nullable<System.DateTime> _startDate;

        /// <summary>
        /// Gets or sets the StartDate column value.
        /// </summary>
        [Column(Name="StartDate", Storage="_startDate", DbType="datetime")]
        [DataMember]
        public Nullable<System.DateTime> StartDate
        {
            get { return _startDate; }
            set
            {
                if (_startDate != value)
                {
                    OnStartDateChanging(value);
                    _startDate = value;
                    OnStartDateChanged();
                }
            }
        }
        
        private Nullable<System.DateTime> _dueDate;

        /// <summary>
        /// Gets or sets the DueDate column value.
        /// </summary>
        [Column(Name="DueDate", Storage="_dueDate", DbType="datetime")]
        [DataMember]
        public Nullable<System.DateTime> DueDate
        {
            get { return _dueDate; }
            set
            {
                if (_dueDate != value)
                {
                    OnDueDateChanging(value);
                    _dueDate = value;
                    OnDueDateChanged();
                }
            }
        }
        
        private Nullable<System.DateTime> _completeDate;

        /// <summary>
        /// Gets or sets the CompleteDate column value.
        /// </summary>
        [Column(Name="CompleteDate", Storage="_completeDate", DbType="datetime")]
        [DataMember]
        public Nullable<System.DateTime> CompleteDate
        {
            get { return _completeDate; }
            set
            {
                if (_completeDate != value)
                {
                    OnCompleteDateChanging(value);
                    _completeDate = value;
                    OnCompleteDateChanged();
                }
            }
        }
        
        private Nullable<int> _assignedID;

        /// <summary>
        /// Gets or sets the AssignedID column value.
        /// </summary>
        [Column(Name="AssignedID", Storage="_assignedID", DbType="int")]
        [DataMember]
        public Nullable<int> AssignedID
        {
            get { return _assignedID; }
            set
            {
                if (_assignedID != value)
                {
                    OnAssignedIDChanging(value);
                    _assignedID = value;
                    OnAssignedIDChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when TaskID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTaskIDChanging(int value);
        /// <summary>Called after TaskID has Changed.</summary>
        partial void OnTaskIDChanged();
        /// <summary>Called when StatusID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnStatusIDChanging(int value);
        /// <summary>Called after StatusID has Changed.</summary>
        partial void OnStatusIDChanged();
        /// <summary>Called when PriorityID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPriorityIDChanging(int value);
        /// <summary>Called after PriorityID has Changed.</summary>
        partial void OnPriorityIDChanged();
        /// <summary>Called when CreatedID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCreatedIDChanging(int value);
        /// <summary>Called after CreatedID has Changed.</summary>
        partial void OnCreatedIDChanged();
        /// <summary>Called when CreateDate is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCreateDateChanging(System.DateTime value);
        /// <summary>Called after CreateDate has Changed.</summary>
        partial void OnCreateDateChanged();
        /// <summary>Called when UpdateDate is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUpdateDateChanging(System.DateTime value);
        /// <summary>Called after UpdateDate has Changed.</summary>
        partial void OnUpdateDateChanged();
        /// <summary>Called when Summary is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSummaryChanging(string value);
        /// <summary>Called after Summary has Changed.</summary>
        partial void OnSummaryChanged();
        /// <summary>Called when Details is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDetailsChanging(string value);
        /// <summary>Called after Details has Changed.</summary>
        partial void OnDetailsChanged();
        /// <summary>Called when StartDate is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnStartDateChanging(Nullable<System.DateTime> value);
        /// <summary>Called after StartDate has Changed.</summary>
        partial void OnStartDateChanged();
        /// <summary>Called when DueDate is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDueDateChanging(Nullable<System.DateTime> value);
        /// <summary>Called after DueDate has Changed.</summary>
        partial void OnDueDateChanged();
        /// <summary>Called when CompleteDate is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCompleteDateChanging(Nullable<System.DateTime> value);
        /// <summary>Called after CompleteDate has Changed.</summary>
        partial void OnCompleteDateChanged();
        /// <summary>Called when AssignedID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAssignedIDChanging(Nullable<int> value);
        /// <summary>Called after AssignedID has Changed.</summary>
        partial void OnAssignedIDChanged();
        #endregion
        
    }
}

