<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 EditableChildList" %>

<%@ Register Name="EditableChildList" Template="Internal\EditableChildList.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableChildListDataAccess" Template="Internal\EditableChildList.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableChildListGenerated" Template="Internal\EditableChildList.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
	foreach(Entity entity in Entities)
	{
		#region EditableChildList
		
		EditableChildList editableChildList = this.Create<EditableChildList>();
		this.CopyPropertiesTo(editableChildList);
		editableChildList.SourceTable = entity.Table;
		editableChildList.BusinessClassName = string.Format("{0}List", editableChildList.BusinessClassName);
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Collections\\{0}.cs", editableChildList.BusinessClassName));
		if (!System.IO.File.Exists(parentFileName))
		{
			editableChildList.RenderToFile(parentFileName, false);
		}
		
		#region EditableChildList.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.Generated.cs", editableChildList.BusinessClassName));
		
		EditableChildListGenerated editableChildListGenerated = this.Create<EditableChildListGenerated>();
		this.CopyPropertiesTo(editableChildListGenerated);
		editableChildListGenerated.SourceTable = entity.Table;
		editableChildListGenerated.BusinessClassName = string.Format("{0}List", editableChildListGenerated.BusinessClassName);
		
		editableChildListGenerated.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#region EditableChildList.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.DataAccess.cs", editableChildList.BusinessClassName));
		
		EditableChildListDataAccess editableChildListDataAccess = this.Create<EditableChildListDataAccess>();
		this.CopyPropertiesTo(editableChildListDataAccess);
		editableChildListDataAccess.SourceTable = entity.Table;
		editableChildListDataAccess.BusinessClassName = string.Format("{0}List", editableChildListDataAccess.BusinessClassName);
		
		editableChildListDataAccess.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#endregion
	}
}

</script>