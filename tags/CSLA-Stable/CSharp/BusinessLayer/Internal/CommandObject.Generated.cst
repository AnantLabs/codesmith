<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA 3.8.X CommandOject" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>

<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using <%= VersionInfo %>.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class '<%= BusinessClassName %>.cs'.
//
//     Template: <%= CodeTemplateInfo.FileName %>
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region Using declarations

using System;
using System.Collections.Generic;
using System.Text;

using Csla;

#endregion

namespace <%= BusinessProjectName %>
{
    [Serializable]
    public partial class <%= BusinessClassName %> : CommandBase
    {
        #region Factory Methods 
        
        public static bool Execute()
        {
            if (!CanExecuteCommand())
                throw new System.Security.SecurityException("Not authorized to execute command");
            
            <%= BusinessClassName %> cmd = new <%= BusinessClassName %>();
            cmd.BeforeServer();
            cmd = DataPortal.Execute< <%= BusinessClassName %> >(cmd);
            cmd.AfterServer();
            
            return cmd.Result;
        }

        private <%= BusinessClassName %>()
        { /* Require use of factory methods */ }
        
        #endregion
        
        #region Client-side Code

        // TODO: add your own fields and properties
        private bool _result;
        public bool Result
        {
            get { return _result; }
        }
        
        private void BeforeServer()
        {
            // TODO: implement code to run on client
            // before server is called
        }
        
        private void AfterServer()
        {
            // TODO: implement code to run on client
            // after server is called
        }
        
        #endregion
    }
}