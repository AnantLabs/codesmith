//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CSLA 3.7.X CodeSmith Templates.
//	   Changes to this template will not be lost.
//
//     Template: EditableChild.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region using declarations

using System;

using Csla;
using Csla.Security;
using Csla.Validation;

#endregion

namespace PetShop.Business
{
	public partial class Cart
	{
		#region Validation Rules

		/// <summary>
        /// All custom rules need to be placed in this method.
        /// </summary>
        /// <returns>Return true to override the generated rules; If false generated rules will be run.</returns>
		protected bool AddBusinessValidationRules()
		{
			// TODO: add validation rules
			//ValidationRules.AddRule(RuleMethod, "");

		    return false;
		}

		#endregion

		#region Authorization Rules

		protected override void AddAuthorizationRules()
		{
            //// More information on these rules can be found here (http://www.devx.com/codemag/Article/40663/1763/page/2).

            //string[] canWrite = { "AdminUser", "RegularUser" };
            //string[] canRead = { "AdminUser", "RegularUser", "ReadOnlyUser" };
            //string[] admin = { "AdminUser" };

            // AuthorizationRules.AllowCreate(typeof(Cart), admin);
            // AuthorizationRules.AllowDelete(typeof(Cart), admin);
            // AuthorizationRules.AllowEdit(typeof(Cart), canWrite);
            // AuthorizationRules.AllowGet(typeof(Cart), canRead);

            //// CartId
            // AuthorizationRules.AllowWrite(_cartIdProperty, canWrite);
            // AuthorizationRules.AllowRead(_cartIdProperty, canRead);

            //// ItemId
            // AuthorizationRules.AllowRead(_itemIdProperty, canRead);

            //// Name
            // AuthorizationRules.AllowRead(_nameProperty, canRead);

            //// Type
            // AuthorizationRules.AllowRead(_typeProperty, canRead);

            //// Price
            // AuthorizationRules.AllowRead(_priceProperty, canRead);

            //// CategoryId
            // AuthorizationRules.AllowRead(_categoryIdProperty, canRead);

            //// ProductId
            // AuthorizationRules.AllowRead(_productIdProperty, canRead);

            //// IsShoppingCart
            // AuthorizationRules.AllowRead(_isShoppingCartProperty, canRead);

            //// Quantity
            // AuthorizationRules.AllowRead(_quantityProperty, canRead);

            //// UniqueID
            // AuthorizationRules.AllowWrite(_uniqueIDProperty, canWrite);
            // AuthorizationRules.AllowRead(_uniqueIDProperty, canRead);

            //// Profile
            // AuthorizationRules.AllowRead(_profileProperty, canRead);

		}

		private static void AddObjectAuthorizationRules()
		{
			// TODO: add authorization rules
			//AuthorizationRules.AllowEdit(typeof(Cart), "Role");
		}

		#endregion
	}
}