//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CSLA 3.7.X CodeSmith Templates.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'Order.cs'.
//
//     Template: SwitchableObject.Generated.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region using declarations

using System;

using Csla;
using Csla.Data;
using Csla.Validation;

#endregion

namespace PetShop.Business
{
	[Serializable]
	public partial class Order : BusinessBase< Order >
	{
        #region Contructor(s)

		private Order()
		{ /* Require use of factory methods */ }
        
        internal Order(SafeDataReader reader)
        {
            Fetch(reader);
        }
        
		#endregion
        
		#region Validation Rules
		
		protected override void AddBusinessRules()
		{
            if(AddBusinessValidationRules())
                return;
            
			ValidationRules.AddRule(CommonRules.StringRequired, _userIdProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_userIdProperty, 20));
			ValidationRules.AddRule(CommonRules.StringRequired, _shipAddr1Property);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipAddr1Property, 80));
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipAddr2Property, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _shipCityProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipCityProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _shipStateProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipStateProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _shipZipProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipZipProperty, 20));
			ValidationRules.AddRule(CommonRules.StringRequired, _shipCountryProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipCountryProperty, 20));
			ValidationRules.AddRule(CommonRules.StringRequired, _billAddr1Property);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billAddr1Property, 80));
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billAddr2Property, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _billCityProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billCityProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _billStateProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billStateProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _billZipProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billZipProperty, 20));
			ValidationRules.AddRule(CommonRules.StringRequired, _billCountryProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billCountryProperty, 20));
			ValidationRules.AddRule(CommonRules.StringRequired, _courierProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_courierProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _billToFirstNameProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billToFirstNameProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _billToLastNameProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_billToLastNameProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _shipToFirstNameProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipToFirstNameProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _shipToLastNameProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_shipToLastNameProperty, 80));
			ValidationRules.AddRule(CommonRules.StringRequired, _localeProperty);
			ValidationRules.AddRule(CommonRules.StringMaxLength, new CommonRules.MaxLengthRuleArgs(_localeProperty, 20));
		}
		
		#endregion
		
		#region Business Methods


		private static readonly PropertyInfo< int > _orderIdProperty = RegisterProperty< int >(p => p.OrderId);
		[System.ComponentModel.DataObjectField(true, true)]
		public int OrderId
		{
			get { return GetProperty(_orderIdProperty); }				
		}
		
		private static readonly PropertyInfo< string > _userIdProperty = RegisterProperty< string >(p => p.UserId);
		public string UserId
		{
			get { return GetProperty(_userIdProperty); }				
            set
            { 
                SetProperty(_userIdProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< SmartDate > _orderDateProperty = RegisterProperty< SmartDate >(p => p.OrderDate);
		public SmartDate OrderDate
		{
			get { return GetProperty(_orderDateProperty); }				
            set
            { 
                SetProperty(_orderDateProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipAddr1Property = RegisterProperty< string >(p => p.ShipAddr1);
		public string ShipAddr1
		{
			get { return GetProperty(_shipAddr1Property); }				
            set
            { 
                SetProperty(_shipAddr1Property, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipAddr2Property = RegisterProperty< string >(p => p.ShipAddr2);
		public string ShipAddr2
		{
			get { return GetProperty(_shipAddr2Property); }				
            set
            { 
                SetProperty(_shipAddr2Property, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipCityProperty = RegisterProperty< string >(p => p.ShipCity);
		public string ShipCity
		{
			get { return GetProperty(_shipCityProperty); }				
            set
            { 
                SetProperty(_shipCityProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipStateProperty = RegisterProperty< string >(p => p.ShipState);
		public string ShipState
		{
			get { return GetProperty(_shipStateProperty); }				
            set
            { 
                SetProperty(_shipStateProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipZipProperty = RegisterProperty< string >(p => p.ShipZip);
		public string ShipZip
		{
			get { return GetProperty(_shipZipProperty); }				
            set
            { 
                SetProperty(_shipZipProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipCountryProperty = RegisterProperty< string >(p => p.ShipCountry);
		public string ShipCountry
		{
			get { return GetProperty(_shipCountryProperty); }				
            set
            { 
                SetProperty(_shipCountryProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billAddr1Property = RegisterProperty< string >(p => p.BillAddr1);
		public string BillAddr1
		{
			get { return GetProperty(_billAddr1Property); }				
            set
            { 
                SetProperty(_billAddr1Property, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billAddr2Property = RegisterProperty< string >(p => p.BillAddr2);
		public string BillAddr2
		{
			get { return GetProperty(_billAddr2Property); }				
            set
            { 
                SetProperty(_billAddr2Property, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billCityProperty = RegisterProperty< string >(p => p.BillCity);
		public string BillCity
		{
			get { return GetProperty(_billCityProperty); }				
            set
            { 
                SetProperty(_billCityProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billStateProperty = RegisterProperty< string >(p => p.BillState);
		public string BillState
		{
			get { return GetProperty(_billStateProperty); }				
            set
            { 
                SetProperty(_billStateProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billZipProperty = RegisterProperty< string >(p => p.BillZip);
		public string BillZip
		{
			get { return GetProperty(_billZipProperty); }				
            set
            { 
                SetProperty(_billZipProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billCountryProperty = RegisterProperty< string >(p => p.BillCountry);
		public string BillCountry
		{
			get { return GetProperty(_billCountryProperty); }				
            set
            { 
                SetProperty(_billCountryProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _courierProperty = RegisterProperty< string >(p => p.Courier);
		public string Courier
		{
			get { return GetProperty(_courierProperty); }				
            set
            { 
                SetProperty(_courierProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< decimal > _totalPriceProperty = RegisterProperty< decimal >(p => p.TotalPrice);
		public decimal TotalPrice
		{
			get { return GetProperty(_totalPriceProperty); }				
            set
            { 
                SetProperty(_totalPriceProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billToFirstNameProperty = RegisterProperty< string >(p => p.BillToFirstName);
		public string BillToFirstName
		{
			get { return GetProperty(_billToFirstNameProperty); }				
            set
            { 
                SetProperty(_billToFirstNameProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _billToLastNameProperty = RegisterProperty< string >(p => p.BillToLastName);
		public string BillToLastName
		{
			get { return GetProperty(_billToLastNameProperty); }				
            set
            { 
                SetProperty(_billToLastNameProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipToFirstNameProperty = RegisterProperty< string >(p => p.ShipToFirstName);
		public string ShipToFirstName
		{
			get { return GetProperty(_shipToFirstNameProperty); }				
            set
            { 
                SetProperty(_shipToFirstNameProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _shipToLastNameProperty = RegisterProperty< string >(p => p.ShipToLastName);
		public string ShipToLastName
		{
			get { return GetProperty(_shipToLastNameProperty); }				
            set
            { 
                SetProperty(_shipToLastNameProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< int > _authorizationNumberProperty = RegisterProperty< int >(p => p.AuthorizationNumber);
		public int AuthorizationNumber
		{
			get { return GetProperty(_authorizationNumberProperty); }				
            set
            { 
                SetProperty(_authorizationNumberProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< string > _localeProperty = RegisterProperty< string >(p => p.Locale);
		public string Locale
		{
			get { return GetProperty(_localeProperty); }				
            set
            { 
                SetProperty(_localeProperty, value); 
            }
		}
		
		private static readonly PropertyInfo< LineItem > _lineItemProperty = RegisterProperty< LineItem >(p => p.LineItem, Csla.RelationshipTypes.LazyLoad);
		public LineItem LineItem
		{
			get
            {
                if(!FieldManager.FieldExists(_lineItemProperty))
                    SetProperty(_lineItemProperty, LineItem.GetLineItem(OrderId));

                   return GetProperty(_lineItemProperty); 
            }
		}

		private static readonly PropertyInfo< OrderStatus > _orderStatusProperty = RegisterProperty< OrderStatus >(p => p.OrderStatus, Csla.RelationshipTypes.LazyLoad);
		public OrderStatus OrderStatus
		{
			get
            {
                if(!FieldManager.FieldExists(_orderStatusProperty))
                    SetProperty(_orderStatusProperty, OrderStatus.GetOrderStatus(OrderId));

                   return GetProperty(_orderStatusProperty); 
            }
		}

// NOTE: Many-To-Many support coming soon.
		#endregion
				
		#region Root Factory Methods 
		
		public static Order NewOrder()
		{
			return DataPortal.Create< Order >();
		}
		
		public static Order GetOrder(int orderId)
		{
			return DataPortal.Fetch< Order >(
                new OrderCriteria(orderId));
		}

        public static void DeleteOrder(int orderId)
		{
                DataPortal.Delete(new OrderCriteria(orderId));
		}
		
		#endregion
		
		#region Child Factory Methods 
		
		internal static Order NewOrderChild()
		{
			return DataPortal.CreateChild< Order >();
		}
		
		public static Order GetOrderChild(int orderId)
		{
            return DataPortal.FetchChild< Order >(
				new OrderCriteria(orderId));
		}

		#endregion
		
	}
}