//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Data.Linq;

namespace PetShop.Core.Data
{
    /// <summary>
    /// The query extension class for OrderStatus.
    /// </summary>
    public static partial class OrderStatusExtensions
    {

        /// <summary>
        /// Gets an instance by the primary key.
        /// </summary>
        public static PetShop.Core.Data.OrderStatus ByKey(this IQueryable<PetShop.Core.Data.OrderStatus> queryable, int orderId, int lineNum)
        {
            var entity = queryable as System.Data.Linq.Table<PetShop.Core.Data.OrderStatus>;
            if (entity != null && entity.Context.LoadOptions == null)
                return Query.ByKey.Invoke((PetShop.Core.Data.PetShopDataContext)entity.Context, orderId, lineNum);
            
            return queryable.FirstOrDefault(o => o.OrderId == orderId 
					&& o.LineNum == lineNum);
        }

        /// <summary>
        /// Immediately deletes the entity by the primary key from the underlying data source with a single delete command.
        /// </summary>
        /// <param name="table">Represents a table for a particular type in the underlying database containing rows are to be deleted.</param>
        /// <returns>The number of rows deleted from the database.</returns>
        public static int Delete(this System.Data.Linq.Table<PetShop.Core.Data.OrderStatus> table, int orderId, int lineNum)
        {
            return table.Delete(o => o.OrderId == orderId 
					&& o.LineNum == lineNum);
        }
        
        /// <summary>
        /// Gets a query for <see cref="OrderStatus.Timestamp"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.OrderStatus> ByTimestamp(this IQueryable<PetShop.Core.Data.OrderStatus> queryable, System.DateTime timestamp)
        {
            return queryable.Where(o => o.Timestamp == timestamp);
        }
        
        /// <summary>
        /// Gets a query for <see cref="OrderStatus.Status"/>.
        /// </summary>
        public static IQueryable<PetShop.Core.Data.OrderStatus> ByStatus(this IQueryable<PetShop.Core.Data.OrderStatus> queryable, string status)
        {
            return queryable.Where(o => o.Status == status);
        }

        #region Query
        /// <summary>
        /// A private class for lazy loading static compiled queries.
        /// </summary>
        private static partial class Query
        {

            internal static readonly Func<PetShop.Core.Data.PetShopDataContext, int, int, PetShop.Core.Data.OrderStatus> ByKey = 
                System.Data.Linq.CompiledQuery.Compile(
                    (PetShop.Core.Data.PetShopDataContext db, int orderId, int lineNum) => 
                        db.OrderStatus.FirstOrDefault(o => o.OrderId == orderId 
							&& o.LineNum == lineNum));

        }
        #endregion
    }
}

