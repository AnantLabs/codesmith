<%-- 
CodeSmith DBDocumenter Templates
Author:  Jason Alexander (jalexander@telligent.com), Eric J. Smith
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="HTML" Src="DBDocumenterTemplate.cs" Inherits="DBDocumenterTemplate" Description="Template description here." %>
<%@ Property Name="SourceCommand" Type="SchemaExplorer.CommandSchema" Category="Context" Description="Stored procedure that the documentation should be based on." %>
<%@ Property Name="CommandIndex" Type="System.Int32" Category="Context" Description="The index of the command in the overall collection." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="SchemaExplorer" %>
<html>
<head>
	<title>Stored Procedure Details</title>
	<link href="dbdocs.css" type="text/css" rel="stylesheet" />	
</head>
<body>
<center>
<table border="0" width="90%">
<tr>
	<td class="sprocheaderbar" width="100%">
		<img src="images/stored_proc_icon.gif" border="0">&nbsp;&nbsp;<%= SourceCommand.FullName %>&nbsp;&nbsp;<i>(Created <%= SourceCommand.DateCreated %>)</i>
	</td>
	<td class="sprocheaderbar" align="center" nowrap="1">
		&nbsp;[ <a href="sproc_details_<%= CommandIndex %>.html">Details</a> | <a href="sproc_<%= CommandIndex %>.html">Source</a> ]&nbsp;
	</td>
</tr>
<% if (SourceCommand.Description.Length > 0) { %>	
<tr>
	<td class="descriptionBlock" colspan="2">
		<%= SourceCommand.Description %>
	</td>
</tr>
<% } %>
<tr>
	<td align="center" colspan="2">
<%
ParameterSchemaCollection[] parameterCollections = new ParameterSchemaCollection[] {SourceCommand.InputParameters, SourceCommand.OutputParameters};
string[] parameterCollectionNames = new string[] {"Input", "Output"};
int index = 0;

foreach (ParameterSchemaCollection parameters in parameterCollections)
{
	if (parameters.Count > 0)
	{
%>
		<table border="0" width="100%">
		<tr>
			<td><span class="subheader"><%= parameterCollectionNames[index] %> Parameters</span></td>
		</tr>
		<tr>
			<td class="columnheaderbar">Nulls</td>
			<td class="columnheaderbar">Name</td>
			<td class="columnheaderbar">Data Type</td>
			<td class="columnheaderbar">Size(Precision,Scale)</td>
			<td class="columnheaderbar">Default</td>
		</tr>
		<% for (int i = 0; i < parameters.Count; i++) { %>
		<tr>
			<% if (parameters[i].AllowDBNull) { %>
			<td align="center"><img src="images/check_icon.gif" border="0"/></td>
			<% } else { %>
			<td align="center"><img src="images/unchecked_icon.gif" border="0"/></td>
			<% } %>
			<td><span class="bodyText"><%= parameters[i].Name %></span></td>
			<td><span class="bodyText"><%= parameters[i].NativeType %></span></td>
			<td><span class="bodyText"><%= this.GetParameterSize(parameters[i]) %></span></td>
			<% if (parameters[i].ExtendedProperties["CS_Default"].Value.ToString().Length > 0) { %>
			<td><span class="bodyText"><%= parameters[i].ExtendedProperties["CS_Default"].Value %></span></td>
			<% } else { %>
			<td>&nbsp;</td>
			<% } %>
		</tr>
			<% if (parameters[i].Description.Length > 0) { %>	
        <tr>
          <td>&nbsp;</td>
          <td class="descriptionBlock" colspan="4"><%= parameters[i].Description %></td>
        </tr>
			<% } %>
		<% } %>
		</table>
		<br>
<%
	}
	index++;
}

if (SourceCommand.InputParameters.Count == 0 && SourceCommand.OutputParameters.Count == 0)
{
%>
		<center><span class="bodyText">This stored procedure has no parameters.</span></center>
<% } %>
	</td>
</tr>
</table>
</center>
</body>
</html>