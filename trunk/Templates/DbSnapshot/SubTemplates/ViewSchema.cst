<%--
	Author: 
		Todd Carrico
	
	Description:
		DBSnaptshot will create a file for every database object 
		and if configured will attempt to script your database.
	Remarks:
		Only tested with Sql2000, Sql2005, SqlExpress
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="T-SQL" Description="Generates a set of HTML-based database documentation." %>
<%@ Property Name="SourceView" Type="SchemaExplorer.ViewSchema" Category="Context" Description="View that the documentation should be based on." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
/*
 * SC Header, do not delete!
 *
 * $Revision: $
 * $Date: <%= DateTime.Now.ToShortDateString() %> $
 * $Author: <%= Environment.UserName %> $
 * $Archive: $
 *
 */
GO
USE <%= this.SourceView.Database %>
GO
/*
Description: 

HISTORY:
*/
GO
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[<%= this.SourceView.Owner %>].[<%= this.SourceView.Name %>]') AND OBJECTPROPERTY(id, N'IsView') = 1)
    DROP VIEW [<%= this.SourceView.Owner %>].[<%= this.SourceView.Name %>]
GO
<%= this.SourceView.ViewText %>
GO
GO
<% foreach ( ExtendedProperty prop in this.SourceView.ExtendedProperties ) { %>
    <% if (!prop.Name.StartsWith("CS_")) { %>
EXEC dbo.sp_addextendedproperty N'<%= prop.Name %>', N'<%= prop.Value %>', N'user', N'<%= this.SourceView.Owner %>', N'TABLE', N'<%= SourceView.Name %>'
    <% } %>
<% } %>

<% foreach ( ViewColumnSchema col in this.SourceView.Columns ) { %>
    <% foreach ( ExtendedProperty prop in col.ExtendedProperties ) { %>
        <% if (!prop.Name.StartsWith("CS_")) { %>
EXEC dbo.sp_addextendedproperty N'<%= prop.Name %>', N'<%= prop.Value %>', N'user', N'<%= this.SourceView.Owner %>', N'TABLE', N'<%= SourceView.Name %>', N'COLUMN', N'<%= col.Name %>'
        <% } %>
    <% } %>
<% } %>
GO

<script runat="template">
public string ParseServerName()
{
    string _serverName = "";
    string _scratch = "";
    
    System.Text.RegularExpressions.Regex regExp = new Regex(@"Data Source=\w*;", RegexOptions.IgnoreCase);
    System.Text.RegularExpressions.Match m = regExp.Match(this.SourceView.Database.ConnectionString);

    if ( m.Success ) 
    {
        _scratch = m.ToString();
        _serverName = _scratch.Substring(_scratch.IndexOf('=') + 1).TrimEnd(';') ;        
    }
    return _serverName;
}
</script>
