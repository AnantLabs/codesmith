
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace Petshop.Data
{
    /// <summary>
    /// The class representing the dbo.Inventory table.
    /// </summary>
    [Table(Name="dbo.Inventory")]
    [DataContract]
    public partial class Inventory
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Inventory"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Inventory()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private string _itemId;

        /// <summary>
        /// Gets or sets the ItemId column value.
        /// </summary>
        [Column(Name="ItemId", Storage="_itemId", DbType="varchar(10) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        [DataMember]
        public string ItemId
        {
            get { return _itemId; }
            set
            {
                if (_itemId != value)
                {
                    OnItemIdChanging(value);
                    OnPropertyChanging("ItemId");
                    _itemId = value;
                    OnPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        
        private int _qty;

        /// <summary>
        /// Gets or sets the Qty column value.
        /// </summary>
        [Column(Name="Qty", Storage="_qty", DbType="int NOT NULL", CanBeNull=false)]
        [DataMember]
        public int Qty
        {
            get { return _qty; }
            set
            {
                if (_qty != value)
                {
                    OnQtyChanging(value);
                    OnPropertyChanging("Qty");
                    _qty = value;
                    OnPropertyChanged("Qty");
                    OnQtyChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when ItemId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnItemIdChanging(string value);
        /// <summary>Called after ItemId has Changed.</summary>
        partial void OnItemIdChanged();
        /// <summary>Called when Qty is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnQtyChanging(int value);
        /// <summary>Called after Qty has Changed.</summary>
        partial void OnQtyChanged();
        #endregion
        
    }
}

