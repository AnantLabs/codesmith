
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace Petshop.Data
{
    /// <summary>
    /// The class representing the dbo.Product table.
    /// </summary>
    [Table(Name="dbo.Product")]
    [DataContract]
    public partial class Product
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Product"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Product()
        {
            OnCreated();
            _category = default(EntityRef<Category>);
            _itemList = new EntitySet<Item>(
                new System.Action<Item>(this.Attach_ItemList),
                new System.Action<Item>(this.Detach_ItemList));
        }
        #endregion
        
        #region Column Mapped Properties
        
        private string _productId;

        /// <summary>
        /// Gets or sets the ProductId column value.
        /// </summary>
        [Column(Name="ProductId", Storage="_productId", DbType="varchar(10) NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        [DataMember]
        public string ProductId
        {
            get { return _productId; }
            set
            {
                if (_productId != value)
                {
                    OnProductIdChanging(value);
                    OnPropertyChanging("ProductId");
                    _productId = value;
                    OnPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        
        private string _categoryId;

        /// <summary>
        /// Gets or sets the CategoryId column value.
        /// </summary>
        [Column(Name="CategoryId", Storage="_categoryId", DbType="varchar(10) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string CategoryId
        {
            get { return _categoryId; }
            set
            {
                if (_categoryId != value)
                {
                    if (_category.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnCategoryIdChanging(value);
                    OnPropertyChanging("CategoryId");
                    _categoryId = value;
                    OnPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the Name column value.
        /// </summary>
        [Column(Name="Name", Storage="_name", DbType="varchar(80)")]
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        
        private string _descn;

        /// <summary>
        /// Gets or sets the Descn column value.
        /// </summary>
        [Column(Name="Descn", Storage="_descn", DbType="varchar(255)")]
        [DataMember]
        public string Descn
        {
            get { return _descn; }
            set
            {
                if (_descn != value)
                {
                    OnDescnChanging(value);
                    OnPropertyChanging("Descn");
                    _descn = value;
                    OnPropertyChanged("Descn");
                    OnDescnChanged();
                }
            }
        }
        
        private string _image;

        /// <summary>
        /// Gets or sets the Image column value.
        /// </summary>
        [Column(Name="Image", Storage="_image", DbType="varchar(80)")]
        [DataMember]
        public string Image
        {
            get { return _image; }
            set
            {
                if (_image != value)
                {
                    OnImageChanging(value);
                    OnPropertyChanging("Image");
                    _image = value;
                    OnPropertyChanged("Image");
                    OnImageChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntityRef<Category> _category;

        /// <summary>
        /// Gets or sets the Category association.
        /// </summary>
        [Association(Name="Category_Product", Storage="_category", ThisKey="CategoryId", OtherKey="CategoryId", IsUnique=true, IsForeignKey=true)]
        [DataMember]
        public Category Category
        {
            get { return _category.Entity; }
            set
            {
                Category previousValue = _category.Entity;
                if (previousValue != value || _category.HasLoadedOrAssignedValue == false)
                {
                    OnPropertyChanging("Category");
                    if (previousValue != null)
                    {
                        _category.Entity = null;
                        previousValue.ProductList.Remove(this);
                    }
                    _category.Entity = value;
                    if (value != null)
                    {
                        value.ProductList.Add(this);
                        _categoryId = value.CategoryId;
                    }
                    else
                    {
                        _categoryId = default(string);
                    }
                    OnPropertyChanged("Category");
                }
            }
        }
        
        private EntitySet<Item> _itemList;
        
        /// <summary>
        /// Gets or sets the Item association.
        /// </summary>
        [Association(Name="Product_Item", Storage="_itemList", ThisKey="ProductId", OtherKey="ProductId")]
        [DataMember]
        public EntitySet<Item> ItemList
        {
            get { return _itemList; }
            set { _itemList.Assign(value); }
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Attach_ItemList(Item entity)
        {
            OnPropertyChanging(null);
            entity.Product = this;
            OnPropertyChanged(null);
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Detach_ItemList(Item entity)
        {
            OnPropertyChanging(null);
            entity.Product = null;
            OnPropertyChanged(null);
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when ProductId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnProductIdChanging(string value);
        /// <summary>Called after ProductId has Changed.</summary>
        partial void OnProductIdChanged();
        /// <summary>Called when CategoryId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCategoryIdChanging(string value);
        /// <summary>Called after CategoryId has Changed.</summary>
        partial void OnCategoryIdChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        /// <summary>Called when Descn is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDescnChanging(string value);
        /// <summary>Called after Descn has Changed.</summary>
        partial void OnDescnChanged();
        /// <summary>Called when Image is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnImageChanging(string value);
        /// <summary>Called after Image has Changed.</summary>
        partial void OnImageChanged();
        #endregion
        
    }
}

