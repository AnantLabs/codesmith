
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Runtime.Serialization;

namespace Petshop.Data
{
    /// <summary>
    /// The class representing the dbo.Supplier table.
    /// </summary>
    [Table(Name="dbo.Supplier")]
    [DataContract]
    public partial class Supplier
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Supplier"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Supplier()
        {
            OnCreated();
            _itemList = new EntitySet<Item>(
                new System.Action<Item>(this.Attach_ItemList),
                new System.Action<Item>(this.Detach_ItemList));
        }
        #endregion
        
        #region Column Mapped Properties
        
        private int _suppId;

        /// <summary>
        /// Gets or sets the SuppId column value.
        /// </summary>
        [Column(Name="SuppId", Storage="_suppId", DbType="int NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        [DataMember]
        public int SuppId
        {
            get { return _suppId; }
            set
            {
                if (_suppId != value)
                {
                    OnSuppIdChanging(value);
                    OnPropertyChanging("SuppId");
                    _suppId = value;
                    OnPropertyChanged("SuppId");
                    OnSuppIdChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the Name column value.
        /// </summary>
        [Column(Name="Name", Storage="_name", DbType="varchar(80)")]
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        
        private string _status;

        /// <summary>
        /// Gets or sets the Status column value.
        /// </summary>
        [Column(Name="Status", Storage="_status", DbType="varchar(2) NOT NULL", CanBeNull=false)]
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    OnStatusChanging(value);
                    OnPropertyChanging("Status");
                    _status = value;
                    OnPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        
        private string _addr1;

        /// <summary>
        /// Gets or sets the Addr1 column value.
        /// </summary>
        [Column(Name="Addr1", Storage="_addr1", DbType="varchar(80)")]
        [DataMember]
        public string Addr1
        {
            get { return _addr1; }
            set
            {
                if (_addr1 != value)
                {
                    OnAddr1Changing(value);
                    OnPropertyChanging("Addr1");
                    _addr1 = value;
                    OnPropertyChanged("Addr1");
                    OnAddr1Changed();
                }
            }
        }
        
        private string _addr2;

        /// <summary>
        /// Gets or sets the Addr2 column value.
        /// </summary>
        [Column(Name="Addr2", Storage="_addr2", DbType="varchar(80)")]
        [DataMember]
        public string Addr2
        {
            get { return _addr2; }
            set
            {
                if (_addr2 != value)
                {
                    OnAddr2Changing(value);
                    OnPropertyChanging("Addr2");
                    _addr2 = value;
                    OnPropertyChanged("Addr2");
                    OnAddr2Changed();
                }
            }
        }
        
        private string _city;

        /// <summary>
        /// Gets or sets the City column value.
        /// </summary>
        [Column(Name="City", Storage="_city", DbType="varchar(80)")]
        [DataMember]
        public string City
        {
            get { return _city; }
            set
            {
                if (_city != value)
                {
                    OnCityChanging(value);
                    OnPropertyChanging("City");
                    _city = value;
                    OnPropertyChanged("City");
                    OnCityChanged();
                }
            }
        }
        
        private string _state;

        /// <summary>
        /// Gets or sets the State column value.
        /// </summary>
        [Column(Name="State", Storage="_state", DbType="varchar(80)")]
        [DataMember]
        public string State
        {
            get { return _state; }
            set
            {
                if (_state != value)
                {
                    OnStateChanging(value);
                    OnPropertyChanging("State");
                    _state = value;
                    OnPropertyChanged("State");
                    OnStateChanged();
                }
            }
        }
        
        private string _zip;

        /// <summary>
        /// Gets or sets the Zip column value.
        /// </summary>
        [Column(Name="Zip", Storage="_zip", DbType="varchar(5)")]
        [DataMember]
        public string Zip
        {
            get { return _zip; }
            set
            {
                if (_zip != value)
                {
                    OnZipChanging(value);
                    OnPropertyChanging("Zip");
                    _zip = value;
                    OnPropertyChanged("Zip");
                    OnZipChanged();
                }
            }
        }
        
        private string _phone;

        /// <summary>
        /// Gets or sets the Phone column value.
        /// </summary>
        [Column(Name="Phone", Storage="_phone", DbType="varchar(40)")]
        [DataMember]
        public string Phone
        {
            get { return _phone; }
            set
            {
                if (_phone != value)
                {
                    OnPhoneChanging(value);
                    OnPropertyChanging("Phone");
                    _phone = value;
                    OnPropertyChanged("Phone");
                    OnPhoneChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntitySet<Item> _itemList;
        
        /// <summary>
        /// Gets or sets the Item association.
        /// </summary>
        [Association(Name="Supplier_Item", Storage="_itemList", ThisKey="SuppId", OtherKey="Supplier")]
        [DataMember]
        public EntitySet<Item> ItemList
        {
            get { return _itemList; }
            set { _itemList.Assign(value); }
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Attach_ItemList(Item entity)
        {
            OnPropertyChanging(null);
            entity.Supplier1 = this;
            OnPropertyChanged(null);
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Detach_ItemList(Item entity)
        {
            OnPropertyChanging(null);
            entity.Supplier1 = null;
            OnPropertyChanged(null);
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when SuppId is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSuppIdChanging(int value);
        /// <summary>Called after SuppId has Changed.</summary>
        partial void OnSuppIdChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        /// <summary>Called when Status is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnStatusChanging(string value);
        /// <summary>Called after Status has Changed.</summary>
        partial void OnStatusChanged();
        /// <summary>Called when Addr1 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddr1Changing(string value);
        /// <summary>Called after Addr1 has Changed.</summary>
        partial void OnAddr1Changed();
        /// <summary>Called when Addr2 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddr2Changing(string value);
        /// <summary>Called after Addr2 has Changed.</summary>
        partial void OnAddr2Changed();
        /// <summary>Called when City is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCityChanging(string value);
        /// <summary>Called after City has Changed.</summary>
        partial void OnCityChanged();
        /// <summary>Called when State is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnStateChanging(string value);
        /// <summary>Called after State has Changed.</summary>
        partial void OnStateChanged();
        /// <summary>Called when Zip is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnZipChanging(string value);
        /// <summary>Called after Zip has Changed.</summary>
        partial void OnZipChanged();
        /// <summary>Called when Phone is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPhoneChanging(string value);
        /// <summary>Called after Phone has Changed.</summary>
        partial void OnPhoneChanged();
        #endregion
        
    }
}

