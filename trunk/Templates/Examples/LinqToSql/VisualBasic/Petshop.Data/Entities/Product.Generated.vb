

'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a CodeSmith Template.
'
'     DO Not MODIfY contents of this file. Changes to this
'     file will be lost if the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Diagnostics
Imports System.Runtime.Serialization

Namespace Petshop.Data
    ''' <summary>
    ''' The class representing the dbo.Product table.
    ''' </summary>
    <Table(Name:="dbo.Product")> _
    <System.Runtime.Serialization.DataContractAttribute()> _
    public Partial Class Product
        Inherits LinqEntityBase
        
        #Region "Default Constructor"
        ''' <summary>
        ''' Initializes a new instance of the <see cref="Product"/> class.
        ''' </summary>
        <DebuggerNonUserCodeAttribute()> _
        public  Sub New()
            OnCreated()
            _category = Nothing
            _itemList = New EntitySet(Of Item)( _
                New System.Action(Of Item)(AddressOf Me.Attach_ItemList), _
                New System.Action(Of Item)(AddressOf Me.Detach_ItemList))
        End Sub
        #End Region
        
        #Region "Column Mapped Properties"
        
        Private _productId As String

        ''' <summary>
        ''' Gets or sets the ProductId column value.
        ''' </summary>
        <Column(Name:="ProductId", Storage:="_productId", DbType:="varchar(10) NOT NULL", IsPrimaryKey:=true, CanBeNull:=false)> _
        <DataMember()> _
        public Property ProductId As String
            Get 
				return _productId 
			End Get
            Set
                If Not _productId.Equals(value) Then
                    OnProductIdChanging(value)
                    OnPropertyChanging("ProductId")
                    _productId = value
                    OnPropertyChanged("ProductId")
                    OnProductIdChanged()
                End If
            End Set
        End Property
        
        Private _categoryId As String

        ''' <summary>
        ''' Gets or sets the CategoryId column value.
        ''' </summary>
        <Column(Name:="CategoryId", Storage:="_categoryId", DbType:="varchar(10) NOT NULL", CanBeNull:=false)> _
        <DataMember()> _
        public Property CategoryId As String
            Get 
				return _categoryId 
			End Get
            Set
                If Not _categoryId.Equals(value) Then
                    If (_category.HasLoadedOrAssignedValue) Then
                        Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
                    End If
                    OnCategoryIdChanging(value)
                    OnPropertyChanging("CategoryId")
                    _categoryId = value
                    OnPropertyChanged("CategoryId")
                    OnCategoryIdChanged()
                End If
            End Set
        End Property
        
        Private _name As String

        ''' <summary>
        ''' Gets or sets the Name column value.
        ''' </summary>
        <Column(Name:="Name", Storage:="_name", DbType:="varchar(80)")> _
        <DataMember()> _
        public Property Name As String
            Get 
				return _name 
			End Get
            Set
                If Not _name.Equals(value) Then
                    OnNameChanging(value)
                    OnPropertyChanging("Name")
                    _name = value
                    OnPropertyChanged("Name")
                    OnNameChanged()
                End If
            End Set
        End Property
        
        Private _descn As String

        ''' <summary>
        ''' Gets or sets the Descn column value.
        ''' </summary>
        <Column(Name:="Descn", Storage:="_descn", DbType:="varchar(255)")> _
        <DataMember()> _
        public Property Descn As String
            Get 
				return _descn 
			End Get
            Set
                If Not _descn.Equals(value) Then
                    OnDescnChanging(value)
                    OnPropertyChanging("Descn")
                    _descn = value
                    OnPropertyChanged("Descn")
                    OnDescnChanged()
                End If
            End Set
        End Property
        
        Private _image As String

        ''' <summary>
        ''' Gets or sets the Image column value.
        ''' </summary>
        <Column(Name:="Image", Storage:="_image", DbType:="varchar(80)")> _
        <DataMember()> _
        public Property Image As String
            Get 
				return _image 
			End Get
            Set
                If Not _image.Equals(value) Then
                    OnImageChanging(value)
                    OnPropertyChanging("Image")
                    _image = value
                    OnPropertyChanged("Image")
                    OnImageChanged()
                End If
            End Set
        End Property
        #End Region
        
        #Region "Association Mapped Properties"
        
        Private  _category As EntityRef(Of Category)

        ''' <summary>
        ''' Gets or sets the Category association.
        ''' </summary>
        <Association(Name:="Category_Product", Storage:="_category", ThisKey:="CategoryId", OtherKey:="CategoryId", IsUnique:=true, IsForeignKey:=true)> _
        <DataMember()> _
        public Property Category As Category
            Get  
				Return _category.Entity 
			End Get
            Set
                Dim previousValue As Category = _category.Entity
                If Not previousValue Is value Or _category.HasLoadedOrAssignedValue = False Then
                    OnPropertyChanging("Category")
                    If previousValue IsNot Nothing Then
                        _category.Entity = Nothing
                        previousValue.ProductList.Remove(Me)
                    End If
                    _category.Entity = value
                    If value IsNot Nothing Then
                        value.ProductList.Add(Me)
                        _categoryId = value.CategoryId
                    Else
                        _categoryId = Nothing
                    End If
                    OnPropertyChanged("Category")
                End If
            End SET
        End PROPERTY
        
        Private _itemList As EntitySet(Of Item)
        
        ''' <summary>
        ''' Gets or sets the Item association.
        ''' </summary>
        <Association(Name:="Product_Item", Storage:="_itemList", ThisKey:="ProductId", OtherKey:="ProductId")> _
        <DataMember()> _
        public Property ItemList As EntitySet(Of Item)
            Get
				return _itemList
			End GET
            Set
				_itemList.Assign(value)
			End SET
        End Property
        
        <DebuggerNonUserCodeAttribute()> _
        Private Sub Attach_ItemList(ByVal entity As Item)
            OnPropertyChanging(Nothing)
            entity.Product = Me
            OnPropertyChanged(Nothing)
        End Sub
        
        <DebuggerNonUserCodeAttribute()> _
        Private Sub Detach_ItemList(ByVal entity As Item)
            OnPropertyChanging(Nothing)
            entity.Product = Nothing
            OnPropertyChanged(Nothing)
        End Sub
        #End Region
        
        #Region "Extensibility Method Definitions"
        ''' <summary>Called when this instance is loaded.</summary>
        Private Partial Sub OnLoaded()
		End Sub
        ''' <summary>Called when this instance is being saved.</summary>
        Private Partial Sub OnValidate(ByVal action As ChangeAction)
		End Sub
        ''' <summary>Called when this instance is created.</summary>
        Private Partial Sub OnCreated()
		End Sub
        ''' <summary>Called when ProductId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnProductIdChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after ProductId has Changed.</summary>
        Private Partial Sub OnProductIdChanged()
		End Sub
        ''' <summary>Called when CategoryId is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnCategoryIdChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after CategoryId has Changed.</summary>
        Private Partial Sub OnCategoryIdChanged()
		End Sub
        ''' <summary>Called when Name is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnNameChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after Name has Changed.</summary>
        Private Partial Sub OnNameChanged()
		End Sub
        ''' <summary>Called when Descn is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnDescnChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after Descn has Changed.</summary>
        Private Partial Sub OnDescnChanged()
		End Sub
        ''' <summary>Called when Image is changing.</summary>
        ''' <param name="value">The new value.</param>
        Private Partial Sub OnImageChanging(ByVal value As String)
		End Sub
        ''' <summary>Called after Image has Changed.</summary>
        Private Partial Sub OnImageChanged()
		End Sub
        #End Region
        
    End Class
End Namespace

