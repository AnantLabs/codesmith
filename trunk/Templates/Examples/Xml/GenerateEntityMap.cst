<%-- 
Name: GenerateEntityMap.cst
Author: Eric J. Smith
Description: Generates a basic entity map from a pre-existing database schema.
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="XML" Inherits="OutputFileCodeTemplate" Description="Generates a basic entity map from a pre-existing database schema." %>
<%@ Property Name="TargetNamespace" Type="System.String" Optional="False" Category="Context" Description="The namespace for the generated entities." %>
<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Optional="False" Category="Context" Description="The database to generate the entity map from." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<?xml version="1.0" encoding="utf-8" ?>
<EntityMap Version="1.0" xmlns="http://www.codesmithtools.com/entitymap" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<% foreach (TableSchema table in SourceDatabase.Tables) { %>
	<Entity Name="<%= GetEntityName(table) %>" Namespace="<%= TargetNamespace %>" DbName="<%= table.Name %>">
		<% foreach (ColumnSchema column in table.Columns) { %>
		<Property Name="<%= column.Name %>" Type="<%= column.SystemType.Name %>" DbName="<%= column.Name %>" DbType="<%= column.DataType %>" NullValue="" AllowNull="<%= column.AllowDBNull.ToString().ToLower() %>" Size="<%= column.Size %>" Precision="<%= column.Precision %>" />
		<% } %>
		<% foreach (TableKeySchema foreignKey in table.ForeignKeys) { %>
			<% if (foreignKey.ForeignKeyMemberColumns.Count == 1) { %>
		<Relationship Name="<%= GetEntityName(foreignKey.PrimaryKeyTable) %>" RelatedEntity="<%= GetEntityName(foreignKey.PrimaryKeyTable) %>" RelatedProperty="<%= foreignKey.PrimaryKeyMemberColumns[0].Name %>" Cardinality="OneToMany" LazyLoad="true" />
			<% } %>
		<% } %>
	</Entity>
	<% } %>
</EntityMap>
<script runat="template">
public string GetEntityName(TableSchema table)
{
	string entityName = StringUtil.ToSingular(table.Name);
	entityName = entityName.Replace(" ", "");
	entityName = entityName.Replace('-', '_');
	
	return entityName;
}

// Override the OutputFile property and assign our specific settings to it.
[FileDialog(FileDialogType.Save, Title="Select Output File", Filter="XML Files (*.xml)|*.xml|All Files (*.*)|*.*", DefaultExtension=".xml")]
public override string OutputFile
{
	get {return base.OutputFile;}
	set {base.OutputFile = value;}
}

public override string GetFileName()
{
	if (this.SourceDatabase != null)
	{
		return this.SourceDatabase.Name + "Map.xml";
	}
	else
	{
		return base.GetFileName();
	}
}
</script>