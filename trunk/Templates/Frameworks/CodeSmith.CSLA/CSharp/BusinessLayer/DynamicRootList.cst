<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 DynamicRootList" %>

<%@ Register Name="DynamicRootList" Template="Internal\DynamicRootList.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootListDataAccess" Template="Internal\DynamicRootList.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="DynamicRootListGenerated" Template="Internal\DynamicRootList.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
	foreach(Entity entity in Entities)
	{
		#region DynamicRootList
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("{0}List.cs", entity.ClassName));
		
		DynamicRootList dynamicRootList = this.Create<DynamicRootList>();
		this.CopyPropertiesTo(dynamicRootList);
		dynamicRootList.SourceTable = entity.Table;
		dynamicRootList.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		if (!System.IO.File.Exists(parentFileName))
		{
			dynamicRootList.RenderToFile(parentFileName, false);
		}
		
		#region DynamicRootList.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("{0}List.Generated.cs", entity.ClassName));
		
		DynamicRootListGenerated dynamicRootListGenerated = this.Create<DynamicRootListGenerated>();
		this.CopyPropertiesTo(dynamicRootListGenerated);
		dynamicRootListGenerated.SourceTable = entity.Table;
		dynamicRootListGenerated.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		dynamicRootListGenerated.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#region DynamicRootList.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("{0}List.DataAccess.cs", entity.ClassName));
		
		DynamicRootListDataAccess dynamicRootListDataAccess = this.Create<DynamicRootListDataAccess>();
		this.CopyPropertiesTo(dynamicRootListDataAccess);
		dynamicRootListDataAccess.SourceTable = entity.Table;
		dynamicRootListDataAccess.BusinessClassName = string.Format("{0}List", entity.ClassName);
		
		dynamicRootListDataAccess.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#endregion
	}
}

</script>