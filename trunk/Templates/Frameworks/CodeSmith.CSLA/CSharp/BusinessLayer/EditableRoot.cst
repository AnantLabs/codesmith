<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 EditableRoot" %>

<%@ Register Name="EditableRoot" Template="Internal\EditableRoot.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootDataAccess" Template="Internal\EditableRoot.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="EditableRootGenerated" Template="Internal\EditableRoot.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<% Generate(); %>

<script runat="template">

public override void Generate()
{
    RegisterReferences();
    
	foreach(Entity entity in Entities)
	{
		#region EditableRoot
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Entities\\{0}.cs", entity.ClassName));
		
		EditableRoot editableRoot = this.Create<EditableRoot>();
		this.CopyPropertiesTo(editableRoot);
		editableRoot.SourceTable = entity.Table;
		editableRoot.BusinessClassName = entity.ClassName;
		
		if (!System.IO.File.Exists(parentFileName))
		{
			editableRoot.RenderToFile(parentFileName, false);
		}
		
		#region EditableRoot.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.Generated.cs", entity.ClassName));
		
		EditableRootGenerated editableRootGenerated = this.Create<EditableRootGenerated>();
		this.CopyPropertiesTo(editableRootGenerated);
		editableRootGenerated.SourceTable = entity.Table;
		editableRootGenerated.BusinessClassName = entity.ClassName;
		
		editableRootGenerated.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#region EditableRoot.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("Entities\\{0}.DataAccess.cs", entity.ClassName));
		
		EditableRootDataAccess editableRootDataAccess = this.Create<EditableRootDataAccess>();
		this.CopyPropertiesTo(editableRootDataAccess);
		editableRootDataAccess.SourceTable = entity.Table;
		editableRootDataAccess.BusinessClassName = entity.ClassName;
		
		editableRootDataAccess.RenderToFile(fileName, parentFileName, true);
		
		#endregion
		
		#endregion
	}
}

</script>