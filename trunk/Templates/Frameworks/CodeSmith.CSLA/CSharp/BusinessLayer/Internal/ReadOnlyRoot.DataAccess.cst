<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 ReadOnlyRoot" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>

<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>

//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CSLA 3.6.x CodeSmith Templates.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class '<%= BusinessClassName %>.cs'.
//
//     Template: <%= CodeTemplateInfo.FileName %>
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
#region using declarations

using System;

using Csla;
using Csla.Data;

using <%= DataProjectName %>;

#endregion

namespace <%= BusinessProjectName %>
{
	public partial class <%= BusinessClassName %>
	{
		#region Data Access
		
<% if(DataAccessImplementation == DataAccessMethod.None) { %>
private void DataPortal_Fetch(<%= BusinessClassName %>Criteria criteria)
		{
			// TODO: load values.
		}
<% } else if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL) { %>
		private void DataPortal_Fetch(<%= BusinessClassName %>Criteria criteria)
		{
			using(SafeDataReader reader = <%= DataClassName %>.Instance.<%= BusinessClassName %>Fetch(criteria.StateBag)) 
			{
				if(reader.Read())
				{	
					Fetch(reader);
				}
			}
		}
		
		private void Fetch(SafeDataReader reader)
		{
<% foreach(Member member in Entity.MembersPrimaryKeyUnion) { %>
<% if(UseMemberVariables) { %>
			<%= member.PrivateMemberVariableName %> = reader.<%= member.GetReaderMethod() %>("<%= member.Name %>");
<% } else { %>
			LoadProperty(<%= Entity.PrimaryKey.KeyMember.PrivateMemberVariableName %>Property, reader.<%= member.GetReaderMethod() %>("<%= member.Name %>"));
<% } } %>
        }
<% } %>

		#endregion
	}
}