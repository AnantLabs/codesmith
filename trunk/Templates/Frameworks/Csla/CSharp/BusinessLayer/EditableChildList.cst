<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.8.X EditableChildList" %>

<%@ Register Name="EditableChildList" Template="Internal\EditableChildList.cst" %>
<%@ Register Name="EditableChildListDataAccess" Template="Internal\EditableChildList.DataAccess.cst" %>
<%@ Register Name="EditableChildListDataAccessParameterized" Template="Internal\EditableChildList.DataAccess.ParameterizedSQL.cst" %>
<%@ Register Name="EditableChildListDataAccessStoredProcedures" Template="Internal\EditableChildList.DataAccess.StoredProcedures.cst" %>
<%@ Register Name="EditableChildListGenerated" Template="Internal\EditableChildList.Generated.cst" %>

<%@ Register Name="SqlStoredProcedures" Template="..\DataAccessLayer\Internal\SQLStoredProcedures.cst" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<script runat="template">

public override void Render(System.IO.TextWriter writer)
{
    RegisterReferences();

    #region EditableChildList
    
    EditableChildList editableChildList = this.Create<EditableChildList>();
    this.CopyPropertiesTo(editableChildList);
    editableChildList.BusinessClassName = string.Format("{0}List", editableChildList.BusinessClassName);
    
    string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Collections\\{0}.cs", editableChildList.BusinessClassName));
    if (!System.IO.File.Exists(parentFileName))
    {
        editableChildList.RenderToFile(parentFileName, false);
    }
    
    #region EditableChildList.Generated
    
    string fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.Generated.cs", editableChildList.BusinessClassName));
    
    EditableChildListGenerated editableChildListGenerated = this.Create<EditableChildListGenerated>();
    this.CopyPropertiesTo(editableChildListGenerated);
    editableChildListGenerated.BusinessClassName = string.Format("{0}List", editableChildListGenerated.BusinessClassName);
    
    editableChildListGenerated.RenderToFile(fileName, parentFileName, true);
    
    #endregion
    
    #region EditableChildList.DataAccess
    
    fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.DataAccess.cs", editableChildList.BusinessClassName));
    if(DataAccessImplementation == DataAccessMethod.None)
    {
        EditableChildListDataAccess editableChildListDataAccess = this.Create<EditableChildListDataAccess>();
        this.CopyPropertiesTo(editableChildListDataAccess);
        editableChildListDataAccess.BusinessClassName = string.Format("{0}List", editableChildListDataAccess.BusinessClassName);
        
        editableChildListDataAccess.RenderToFile(fileName, parentFileName, true);
    }
    else if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL)
    {
        EditableChildListDataAccessParameterized editableChildListDataAccessParameterized = this.Create<EditableChildListDataAccessParameterized>();
        this.CopyPropertiesTo(editableChildListDataAccessParameterized);
        editableChildListDataAccessParameterized.BusinessClassName = string.Format("{0}List", editableChildListDataAccessParameterized.BusinessClassName);
        
        editableChildListDataAccessParameterized.RenderToFile(fileName, parentFileName, true);
    }
    else if(DataAccessImplementation == DataAccessMethod.StoredProcedures)
    {
        EditableChildListDataAccessStoredProcedures editableChildListDataAccessStoredProcedures = this.Create<EditableChildListDataAccessStoredProcedures>();
        this.CopyPropertiesTo(editableChildListDataAccessStoredProcedures);
        editableChildListDataAccessStoredProcedures.BusinessClassName = string.Format("{0}List", editableChildListDataAccessStoredProcedures.BusinessClassName);
        
        editableChildListDataAccessStoredProcedures.RenderToFile(fileName, parentFileName, true);

        //StoredProcedures
        fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.StoredProcedures.sql", editableChildList.BusinessClassName));
        SqlStoredProcedures sqlStoredProcedures = this.Create<SqlStoredProcedures>();
        this.CopyPropertiesTo(sqlStoredProcedures);
        sqlStoredProcedures.DataProjectName = "Not needed for sql stored procedures.";
        
        sqlStoredProcedures.RenderToFile(fileName, parentFileName, true);
    }
    
    #endregion
    
    #endregion
}

</script>