<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Debug="False" Inherits="QuickStart.EntityMasterCodeTemplate" CompilerVersion="v3.5" Description="CSLA 3.8.X Entities" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Register Name="CommandObjectTemplate" Template="CommandObject.cst" %>
<%@ Register Name="CriteriaTemplate" Template="Criteria.cst" %>
<%@ Register Name="DynamicRootTemplate" Template="DynamicRoot.cst" %>
<%@ Register Name="DynamicRootListTemplate" Template="DynamicRootList.cst" %>
<%@ Register Name="EditableChildTemplate" Template="EditableChild.cst" %>
<%@ Register Name="EditableChildListTemplate" Template="EditableChildList.cst" %>
<%@ Register Name="EditableRootTemplate" Template="EditableRoot.cst" %>
<%@ Register Name="EditableRootListTemplate" Template="EditableRootList.cst" %>
<%@ Register Name="NameValueListTemplate" Template="NameValueList.cst" %>
<%@ Register Name="ReadOnlyChildTemplate" Template="ReadOnlyChild.cst" %>
<%@ Register Name="ReadOnlyChildListTemplate" Template="ReadOnlyChildList.cst" %>
<%@ Register Name="ReadOnlyListTemplate" Template="ReadOnlyList.cst" %>
<%@ Register Name="ReadOnlyRootTemplate" Template="ReadOnlyRoot.cst" %>
<%@ Register Name="SwitchableObjectTemplate" Template="SwitchableObject.cst" %>

<%@ Register Name="ADOHelperTemplate" Template="Internal\ADOHelper.cst" %>
<%@ Register Name="FactoryNamesTemplate" Template="Internal\FactoryNames.cst" %>
<%@ Register Name="ExistsCommandTemplate" Template="Internal\ExistsCommand.cst" %>
<%@ Register Name="IGeneratedCriteriaTemplate" Template="Internal\IGeneratedCriteria.cst" %>
<% Generate(); %>

<script runat="template">

public override void Generate()
{
    #region CommandObjectTemplate
    
    if(this.CommandObject != null && this.CommandObject.Count > 0)
    {
        CommandObjectTemplate commandObjectTemplate = this.Create<CommandObjectTemplate>();
        this.CopyPropertiesTo(commandObjectTemplate);
        commandObjectTemplate.SourceTables = this.CommandObject;
        commandObjectTemplate.Generate();
    }
    
    #endregion
    
    #region CriteriaTemplate
    
    if(this.Criteria != null && this.Criteria.Count > 0)
    {
        CriteriaTemplate criteriaTemplate = this.Create<CriteriaTemplate>();
        this.CopyPropertiesTo(criteriaTemplate);
        criteriaTemplate.SourceTables = this.Criteria;
        criteriaTemplate.Generate();
    }
    
    #endregion    
    
    #region DynamicRootTemplate
    
    if(this.DynamicRoot != null && this.DynamicRoot.Count > 0)
    {
        DynamicRootTemplate dynamicRootTemplate = this.Create<DynamicRootTemplate>();
        this.CopyPropertiesTo(dynamicRootTemplate);
        dynamicRootTemplate.SourceTables = this.DynamicRoot;
        dynamicRootTemplate.Generate();
    }
    
    #endregion
    
    #region DynamicRootListTemplate
    
    if(this.DynamicRootList != null && this.DynamicRootList.Count > 0)
    {
        DynamicRootListTemplate dynamicRootListTemplate = this.Create<DynamicRootListTemplate>();
        this.CopyPropertiesTo(dynamicRootListTemplate);
        dynamicRootListTemplate.SourceTables = this.DynamicRootList;
        dynamicRootListTemplate.Generate();
    }
    
    #endregion    
    
    #region EditableChildTemplate
    
    if(this.EditableChild != null && this.EditableChild.Count > 0)
    {
        EditableChildTemplate editableChildTemplate = this.Create<EditableChildTemplate>();
        this.CopyPropertiesTo(editableChildTemplate);
        editableChildTemplate.SourceTables = this.EditableChild;
        editableChildTemplate.Generate();
    }
    
    #endregion
    
    #region EditableChildListTemplate
    
    if(this.EditableChildList != null && this.EditableChildList.Count > 0)
    {
        EditableChildListTemplate editableChildListTemplate = this.Create<EditableChildListTemplate>();
        this.CopyPropertiesTo(editableChildListTemplate);
        editableChildListTemplate.SourceTables = this.EditableChildList;
        editableChildListTemplate.Generate();
    }
    
    #endregion    
    
    #region EditableRootTemplate
    
    if(this.EditableRoot != null && this.EditableRoot.Count > 0)
    {
        EditableRootTemplate editableRootTemplate = this.Create<EditableRootTemplate>();
        this.CopyPropertiesTo(editableRootTemplate);
        editableRootTemplate.SourceTables = this.EditableRoot;
        editableRootTemplate.Generate();
    }
    
    #endregion    
    
    #region EditableRootListTemplate
    
    if(this.EditableRootList != null && this.EditableRootList.Count > 0)
    {
        EditableRootListTemplate editableRootListTemplate = this.Create<EditableRootListTemplate>();
        this.CopyPropertiesTo(editableRootListTemplate);
        editableRootListTemplate.SourceTables = this.EditableRootList;
        editableRootListTemplate.Generate();
    }
    
    #endregion
    
    #region NameValueListTemplate
    
    if(this.NameValueList != null && this.NameValueList.Count > 0)
    {
        NameValueListTemplate nameValueListTemplate = this.Create<NameValueListTemplate>();
        this.CopyPropertiesTo(nameValueListTemplate);
        nameValueListTemplate.SourceTables = this.NameValueList;
        nameValueListTemplate.Generate();
    }
    
    #endregion    
    
    #region ReadOnlyChildTemplate
    
    if(this.ReadOnlyChild != null && this.ReadOnlyChild.Count > 0)
    {
        ReadOnlyChildTemplate readOnlyChildTemplate = this.Create<ReadOnlyChildTemplate>();
        this.CopyPropertiesTo(readOnlyChildTemplate);
        readOnlyChildTemplate.SourceTables = this.ReadOnlyChild;
        readOnlyChildTemplate.Generate();
    }
    
    #endregion
    
    #region ReadOnlyChildListTemplate
    
    if(this.ReadOnlyChildList != null && this.ReadOnlyChildList.Count > 0)
    {
        ReadOnlyChildListTemplate readOnlyChildListTemplate = this.Create<ReadOnlyChildListTemplate>();
        this.CopyPropertiesTo(readOnlyChildListTemplate);
        readOnlyChildListTemplate.SourceTables = this.ReadOnlyChildList;
        readOnlyChildListTemplate.Generate();
    }
    
    #endregion    
    
    #region ReadOnlyListTemplate
    
    if(this.ReadOnlyList != null && this.ReadOnlyList.Count > 0)
    {
        ReadOnlyListTemplate readOnlyListTemplate = this.Create<ReadOnlyListTemplate>();
        this.CopyPropertiesTo(readOnlyListTemplate);
        readOnlyListTemplate.SourceTables = this.ReadOnlyList;
        readOnlyListTemplate.Generate();
    }
    
    #endregion
    
    #region ReadOnlyRootTemplate
    
    if(this.ReadOnlyRoot != null && this.ReadOnlyRoot.Count > 0)
    {
        ReadOnlyRootTemplate readOnlyRootTemplate = this.Create<ReadOnlyRootTemplate>();
        this.CopyPropertiesTo(readOnlyRootTemplate);
        readOnlyRootTemplate.SourceTables = this.ReadOnlyRoot;
        readOnlyRootTemplate.Generate();
    }
    
    #endregion    
    
    #region SwitchableObjectTemplate
    
    if(this.SwitchableObject != null && this.SwitchableObject.Count > 0)
    {
        SwitchableObjectTemplate switchableObjectTemplate = this.Create<SwitchableObjectTemplate>();
        this.CopyPropertiesTo(switchableObjectTemplate);
        switchableObjectTemplate.SourceTables = this.SwitchableObject;
        switchableObjectTemplate.Generate();
    }
    
    #endregion
    
    #region ADOHelperTemplate
    
    if(DataAccessImplementation == DataAccessMethod.ParameterizedSQL || DataAccessImplementation == DataAccessMethod.StoredProcedures)
    {
        ADOHelperTemplate ADOHelper = this.Create<ADOHelperTemplate>();
        this.CopyPropertiesTo(ADOHelper);
        
        string fileName = System.IO.Path.Combine(this.Location, "Utility\\ADOHelper.cs");
        if (!System.IO.File.Exists(fileName))
        {
            ADOHelper.RenderToFile(fileName, false);
        }
    }

    #endregion
    
    #region FactoryNamesTemplate

    if(DataAccessImplementation == DataAccessMethod.ObjectFactoryNone || DataAccessImplementation == DataAccessMethod.ObjectFactoryParameterizedSQL)
    {
        FactoryNamesTemplate factoryNames = this.Create<FactoryNamesTemplate>();
        this.CopyPropertiesTo(factoryNames);
        factoryNames.SourceTables = this.Criteria;

        string fileName = System.IO.Path.Combine(this.Location, "Factory\\FactoryNames.cs");
        if (!System.IO.File.Exists(fileName))
        {
            factoryNames.RenderToFile(fileName, false);
        }
    }

    #endregion

    #region ExistsCommandTemplate

    ExistsCommandTemplate ExistsCommand = this.Create<ExistsCommandTemplate>();
    this.CopyPropertiesTo(ExistsCommand);
    ExistsCommand.RenderToFile(System.IO.Path.Combine(this.Location, "Commands\\ExistsCommand.cs"), true);

    #endregion

    #region IGeneratedCriteriaTemplate

    IGeneratedCriteriaTemplate IGeneratedCriteria = this.Create<IGeneratedCriteriaTemplate>();
    this.CopyPropertiesTo(IGeneratedCriteria);
    IGeneratedCriteria.RenderToFile(System.IO.Path.Combine(this.Location, "Criteria\\Interfaces\\IGeneratedCriteria.cs"), true);

    #endregion
}

</script>