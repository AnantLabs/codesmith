<%-- Author: Will Comeaux --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" Inherits="QuickStart.TestCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="Test CSLA Editable Root" %>

<%@ Register Name="TestEditableRoot" Template="Internal\TestEditableRoot.cst" %>
<%@ Register Name="TestEditableRootGenerated" Template="Internal\TestEditableRoot.Generated.cst" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<script runat="template">

public override void Render(System.IO.TextWriter writer)
{
    RegisterReferences();
    
    TestEditableRoot template = this.Create<TestEditableRoot>();
    TestEditableRootGenerated templateGenerated = this.Create<TestEditableRootGenerated>();
    
    this.CopyPropertiesTo(template);
    this.CopyPropertiesTo(templateGenerated);
    
    string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Tests\\Entities\\{0}Tests.cs", BusinessClassName));
    if (!System.IO.File.Exists(parentFileName))
    {
        template.RenderToFile(parentFileName, false);
    }
    
    string fileName = System.IO.Path.Combine(this.Location, string.Format("Tests\\Entities\\{0}Tests.Generated.cs", BusinessClassName));
    templateGenerated.RenderToFile(fileName, parentFileName, true);    
}

</script>