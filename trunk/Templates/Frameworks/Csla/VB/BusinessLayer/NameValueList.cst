<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.EntitiesCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.6.1 NameValueList" %>

<%@ Register Name="NameValueList" Template="Internal\NameValueList.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="NameValueListDataAccess" Template="Internal\NameValueList.DataAccess.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>
<%@ Register Name="NameValueListGenerated" Template="Internal\NameValueList.Generated.cst" MergeProperties="True" ExcludeProperties="SourceTable, BusinessClassName" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>
<% Generate() %>

<script runat="template">

Public override void Generate()
{
    RegisterReferences()
    
	foreach(Entity entity in Entities)
	{
		#Region NameValueList
		
		NameValueList nameValueList = this.Create<NameValueList>()
		this.CopyPropertiesTo(nameValueList)
		nameValueList.SourceTable = entity.Table
		nameValueList.BusinessClassName = string.Format("{0}List", nameValueList.BusinessClassName)
		
		string parentFileName = System.IO.Path.Combine(this.Location, string.Format("Collections\\{0}.cs", nameValueList.BusinessClassName))
		If Not (System.IO.File.Exists(parentFileName))
		{
			nameValueList.RenderToFile(parentFileName, false)
		}
		
		#Region NameValueList.Generated
		
		string fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.Generated.cs", nameValueList.BusinessClassName))
		
		NameValueListGenerated nameValueListGenerated = this.Create<NameValueListGenerated>()
		this.CopyPropertiesTo(nameValueListGenerated)
		nameValueListGenerated.SourceTable = entity.Table
		nameValueListGenerated.BusinessClassName = string.Format("{0}List", nameValueListGenerated.BusinessClassName)
		
		nameValueListGenerated.RenderToFile(fileName, parentFileName, true)
		
		#End Region
		
		#Region NameValueList.DataAccess
		
		fileName = System.IO.Path.Combine(Location, string.Format("Collections\\{0}.DataAccess.cs", nameValueList.BusinessClassName))
		
		NameValueListDataAccess nameValueListDataAccess = this.Create<NameValueListDataAccess>()
		this.CopyPropertiesTo(nameValueListDataAccess)
		nameValueListDataAccess.SourceTable = entity.Table
		nameValueListDataAccess.BusinessClassName = string.Format("{0}List", nameValueListDataAccess.BusinessClassName)
		
		nameValueListDataAccess.RenderToFile(fileName, parentFileName, true)
		
		#End Region
		
		#End Region
	}
}

</script>