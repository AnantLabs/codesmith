<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="Generator.CSLA.EntityCodeTemplate" %>
<%@ Register Name="DynamicListBase" Template="Internal\DynamicListBase.cst" %>
<%@ Register Name="DynamicListBaseDataAccess" Template="Internal\DynamicListBase.DataAccess.cst" %>
<%@ Register Name="DynamicListBaseDataAccessParameterized" Template="Internal\DynamicListBase.DataAccess.ParameterizedSQL.cst" %>
<%@ Register Name="DynamicListBaseDataAccessStoredProcedures" Template="Internal\DynamicListBase.DataAccess.StoredProcedures.cst" %>
<%@ Register Name="DynamicListBaseGenerated" Template="Internal\DynamicListBase.Generated.cst" %>
<%@ Register Name="SqlStoredProcedures" Template="..\DataAccessLayer\Internal\SQLStoredProcedures.cst" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="Generator.CSLA" Path="..\..\Common" %>

<script runat="template">

Public Overloads Overrides Sub Render(writer As System.IO.TextWriter)

    RegisterReferences()

Dim parentFileName As String = System.IO.Path.Combine(Me.Location, String.Format("Collections\{0}.vb", BusinessClassName))
Dim fileName As String = System.IO.Path.Combine(Location, String.Format("Collections\{0}.Generated.vb", BusinessClassName))
RenderToFileHelper(Of DynamicListBase)(parentFileName, False)
RenderToFileHelper(Of DynamicListBaseGenerated)(fileName, parentFileName, True)

fileName = System.IO.Path.Combine(Location, String.Format("Collections\{0}.DataAccess.vb", BusinessClassName))
If DataAccessImplementation = DataAccessMethod.None Then
    RenderToFileHelper(Of DynamicListBaseDataAccess)(fileName, parentFileName, False)
ElseIf DataAccessImplementation = DataAccessMethod.ParameterizedSQL Then
    RenderToFileHelper(Of DynamicListBaseDataAccessParameterized)(fileName, parentFileName, True)
ElseIf DataAccessImplementation = DataAccessMethod.StoredProcedures Then
    RenderToFileHelper(Of DynamicListBaseDataAccessStoredProcedures)(fileName, parentFileName, True)

    fileName = System.IO.Path.Combine(Location, String.Format("Collections\{0}.StoredProcedures.sql", BusinessClassName))
    RenderProceduresToFileHelper(Of SqlStoredProcedures)(fileName, parentFileName, True, False, True)
End If

End Sub

Public Overrides Function OnEntityChanging() As Boolean
    If String.IsNullOrEmpty(BusinessClassName) Then
        BusinessClassName = String.Concat(Entity.Name, "List")
        ChildBusinessClassName = Entity.Name
    End If

    If String.IsNullOrEmpty(CriteriaClassName) OrElse CriteriaClassName.Equals("Criteria", StringComparison.InvariantCultureIgnoreCase) Then
        CriteriaClassName = String.Concat(Entity.Name, "Criteria")
    End If

    Return False
End Function

</script>