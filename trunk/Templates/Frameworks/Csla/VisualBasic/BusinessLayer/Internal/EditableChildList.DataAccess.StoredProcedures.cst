<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA EditableChildList" %>
<%@ Register Name="DataPortalFetchList" Template="..\..\Common\DataPortalFetchList.StoredProcedures.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using <%= VersionInfo %>.
'     Changes to this file will be lost after each regeneration.
'     To extend the functionality of this class, please modify the partial class '<%= BusinessClassName %>.vb.
'
'     Template: <%= CodeTemplateInfo.FileName %>
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On
<% If(IncludeSilverlightSupport) Then %>
#If Not SILVERLIGHT Then
<% End If %>

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Linq

Imports Csla
Imports Csla.Data
<% If(IsCSLA40) Then %>
Imports Csla.Rules
<% Else %>
Imports Csla.Validation
<% End If %>

Public Partial Class <%= BusinessClassName %><%= Entity.GenericProperty %>

    Protected Overrides Sub Child_Create()
        Dim cancel As Boolean = False
        OnCreating(cancel)
        If (cancel) Then
            Return
        End If

        OnCreated()
    End Sub

    Private Shadows Sub Child_Fetch(ByVal criteria As <%= ChildBusinessClassName %>Criteria<%= Entity.GenericProperty %>)
<% RenderHelper(New DataPortalFetchList()) %>
    End Sub

    ''' <summary>
    ''' Updates the child object.
    ''' </summary>
    ''' <param name="parameters">The parameters collection may contain more parameters than needed based on the context it was called. We need to filter this list.</param>
    Protected Overrides Sub Child_Update(ParamArray parameters As Object())
	Dim cancel As Boolean = False
	OnUpdating(cancel)
	If cancel Then
		Return
	End If

	' We require that one of the parameters be a connection so we can do the CRUD operations.
	Dim connection As SqlConnection = parameters.OfType(Of SqlConnection)().FirstOrDefault()
	If connection Is Nothing Then
		Throw New ArgumentNullException("parameters", "Must contain a SqlConnection parameter.")
	End If

	RaiseListChangedEvents = False

	For Each item As <%= ChildBusinessClassName %> In DeletedList
		DataPortal.UpdateChild(item, connection)
	Next

	DeletedList.Clear()
	
    ' Trim down the list to what is actually contained in the child class.
    Dim list As New System.Collections.Generic.Dictionary(Of String, Object)
    Dim key As String
    For Each o As Object In parameters
        If Not o Is Nothing Then
            key = o.GetType().ToString()
            If Not list.ContainsKey(key) Then
                list.Add(key, o)
            End If
        End If
    Next

	For Each item As <%= ChildBusinessClassName %> In Items
		DataPortal.UpdateChild(item, list.Values.ToArray())
	Next

	RaiseListChangedEvents = True

	OnUpdated()
    End Sub
End Class
<% If(IncludeSilverlightSupport) Then %>
#End If
<% End If %>