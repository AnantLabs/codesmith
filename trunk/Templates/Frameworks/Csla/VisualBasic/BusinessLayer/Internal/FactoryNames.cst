<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityMasterCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA 3.8.X DataAccessLayer" %>
<%@ Property Name="BusinessProjectName" Type="System.String" Optional="False" Category="3. Business Project" Description="The namespace for the business project." %>
<%@ Property Name="DataProjectName" Type="System.String" Optional="False" Category="4. Data Project" Description="The namespace for the data project." %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated using <%= VersionInfo %>.
'     Changes to this template will not be lost.
'
'     Template: <%= CodeTemplateInfo.FileName %>
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
<% RegisterReferences() %>
Option Explicit On
Option Strict On

Imports System
Imports System.Runtime.CompilerServices

' Note: I really don't like having this here but if someone can come up with a better way to populate identity columns after update let me know.
' Documentation: http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.internalsvisibletoattribute.aspx
<assembly: InternalsVisibleTo("<%= DataProjectName %>")> _

Public Module FactoryNames

    #Region "Preserved Code"

    #End Region

<% For Each entity As Entity In new EntityManager(DynamicRoot).Entities %>
    Public Const <%= entity.ClassName %>FactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>Factory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(EditableChild).Entities %>
    Public Const <%= entity.ClassName %>FactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>Factory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(EditableRoot).Entities %>
    Public Const <%= entity.ClassName %>FactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>Factory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(ReadOnlyChild).Entities %>
    Public Const <%= entity.ClassName %>InfoFactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>Factory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(ReadOnlyRoot).Entities %>
    Public Const <%= entity.ClassName %>InfoFactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>Factory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(SwitchableObject).Entities %>
    Public Const <%= entity.ClassName %>FactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>Factory, <%= DataProjectName %>"
<% Next %>

<% For Each entity As Entity In new EntityManager(DynamicRootList).Entities %>
    Public Const <%= entity.ClassName %>ListFactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>ListFactory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(EditableRootList).Entities %>
    Public Const <%= entity.ClassName %>ListFactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>ListFactory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(EditableChildList).Entities %>
    Public Const <%= entity.ClassName %>ListFactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>ListFactory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(ReadOnlyList).Entities %>
    Public Const <%= entity.ClassName %>InfoListFactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>ListFactory, <%= DataProjectName %>"
<% Next %>
<% For Each entity As Entity In new EntityManager(ReadOnlyChildList).Entities %>
    Public Const <%= entity.ClassName %>InfoListFactoryName As String = "<%= DataProjectName %>.<%= entity.ClassName %>ListFactory, <%= DataProjectName %>"
<% Next %>
End Module
