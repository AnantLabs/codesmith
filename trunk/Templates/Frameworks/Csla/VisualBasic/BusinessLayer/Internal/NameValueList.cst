<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.8.X NameValueList" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="SchemaExplorer" %>
'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated Imports CSLA 3.8.X CodeSmith Templates.
'       Changes to this template will not be lost.
'
'     Template: <%= CodeTemplateInfo.FileName %>
'     Template website: http://code.google.com/p/codesmith/
' </autogenerated>
'------------------------------------------------------------------------------
Option Explicit On
Option Strict On

Imports System
Imports System.Data
Imports System.Data.SqlClient

Imports Csla

Public Partial Class <%= BusinessClassName %>

<% If(DataAccessImplementation = DataAccessMethod.ParameterizedSQL) Then %>

    #Region "Custom Data Access"

    Private Shadows Sub DataPortal_Fetch()
        RaiseListChangedEvents = false
        IsReadOnly = false

        Dim criteria as New <%= ChildBusinessClassName %>Criteria
<% If (entity.Table.ForeignKeyColumns.Count = 0) Then%>
        Dim commandText As String = String.Format("SELECT <%= entity.MembersPrimaryKeyUnion.BuildDataBaseColumns() %> FROM [<%= entity.Table.Owner %>].[<%= entity.Table.Name %>] {0}", ADOHelper.BuildWhereStatement(criteria.StateBag))
<% Else %>
        Dim commandText As String = String.Format("SELECT <%= entity.MembersIncludePrimaryKeyForeignKey.BuildDataBaseColumns() %> FROM [<%= entity.Table.Owner %>].[<%= entity.Table.Name %>] {0}", ADOHelper.BuildWhereStatement(criteria.StateBag))
<% End If%>
        Using connection As New SqlConnection(ADOHelper.ConnectionString)
            connection.Open()
            Using command As New SqlCommand(commandText, connection)
                command.Parameters.AddRange(ADOHelper.SqlParameters(criteria.StateBag))
                Using reader As SafeDataReader = New SafeDataReader(command.ExecuteReader())
                    If reader.Read() Then
                        Do
                            ' TODO: You will need to update the GetInt32 and GetString values.
                            Me.Add(New NameValuePair(reader.GetInt32("<%= Entity.PrimaryKey.KeyMember.Name %>"), reader.GetString("<%= Entity.Members(0).Name %>")))
                        Loop While reader.Read()
                    Else
                        Throw New Exception(String.Format("The record was not found in '<%= entity.Table.Name %>' using the following criteria: {0}.", criteria))
                    End If
                End Using
            End Using
        End Using

        IsReadOnly = true
        RaiseListChangedEvents = true
    End Sub

    #End Region

<% Else If(DataAccessImplementation = DataAccessMethod.StoredProcedures) Then %>

    #Region "Custom Data Access"

    Private Shadows Sub DataPortal_Fetch()
        RaiseListChangedEvents = false
        IsReadOnly = false

        Dim criteria as New <%= ChildBusinessClassName %>Criteria
        Using connection As New SqlConnection(ADOHelper.ConnectionString)
            connection.Open()
            Using command As New SqlCommand("<%= GetSelectStoredProcedureName() %>", connection)
                command.CommandType = CommandType.StoredProcedure
                command.Parameters.AddRange(ADOHelper.WhereSqlParameters(criteria.StateBag))
                Using reader As SafeDataReader = New SafeDataReader(command.ExecuteReader())
                    If reader.Read() Then
                        Do
                            ' TODO: You will need to update the GetInt32 and GetString values.
                            Me.Add(New NameValuePair(reader.GetInt32("<%= Entity.PrimaryKey.KeyMember.Name %>"), reader.GetString("<%= Entity.Members(0).Name %>")))
                        Loop While reader.Read()
                    Else
                        Throw New Exception(String.Format("The record was not found in '<%= entity.Table.Name %>' using the following criteria: {0}.", criteria))
                    End If
                End Using
            End Using
        End Using

        IsReadOnly = true
        RaiseListChangedEvents = true
    End Sub

    #End Region

<% End If %>
End Class