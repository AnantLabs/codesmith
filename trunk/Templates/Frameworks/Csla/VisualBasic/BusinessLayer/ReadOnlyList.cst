<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.8.X ReadOnlyList" %>

<%@ Register Name="ReadOnlyList" Template="Internal\ReadOnlyList.cst" %>
<%@ Register Name="ReadOnlyListDataAccess" Template="Internal\ReadOnlyList.DataAccess.cst" %>
<%@ Register Name="ReadOnlyListDataAccessParameterized" Template="Internal\ReadOnlyList.DataAccess.ParameterizedSQL.cst" %>
<%@ Register Name="ReadOnlyListDataAccessStoredProcedures" Template="Internal\ReadOnlyList.DataAccess.StoredProcedures.cst" %>
<%@ Register Name="ReadOnlyListGenerated" Template="Internal\ReadOnlyList.Generated.cst" %>

<%@ Register Name="SqlStoredProcedures" Template="..\DataAccessLayer\Internal\SQLStoredProcedures.cst" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="SchemaExplorer" %>

<script runat="template">

Public Overloads Overrides Sub Render(writer As System.IO.TextWriter)

    RegisterReferences()

    'ReadOnlyList
    Dim readOnlyList As ReadOnlyList = Me.Create(Of ReadOnlyList)()
    Me.CopyPropertiesTo(readOnlyList)
    readOnlyList.BusinessClassName = String.Format("{0}List", readOnlyList.BusinessClassName)

    Dim parentFileName As String = System.IO.Path.Combine(Location, String.Format("Collections\{0}.vb", readOnlyList.BusinessClassName))
    If Not System.IO.File.Exists(parentFileName) Then
        readOnlyList.RenderToFile(parentFileName, False)
    End If

    'ReadOnlyList.Generated
    Dim fileName As String = System.IO.Path.Combine(Location, String.Format("Collections\{0}.Generated.vb", readOnlyList.BusinessClassName))

    Dim readOnlyListGenerated As ReadOnlyListGenerated = Me.Create(Of ReadOnlyListGenerated)()
    Me.CopyPropertiesTo(readOnlyListGenerated)
    readOnlyListGenerated.BusinessClassName = String.Format("{0}List", readOnlyListGenerated.BusinessClassName)

    readOnlyListGenerated.RenderToFile(fileName, parentFileName, True)

    'ReadOnlyList.DataAccess
    fileName = System.IO.Path.Combine(Location, String.Format("Collections\{0}.DataAccess.vb", readOnlyList.BusinessClassName))
    If DataAccessImplementation = DataAccessMethod.None Then
        Dim readOnlyListDataAccess As ReadOnlyListDataAccess = Me.Create(Of ReadOnlyListDataAccess)()
        Me.CopyPropertiesTo(readOnlyListDataAccess)
        readOnlyListDataAccess.BusinessClassName = String.Format("{0}List", readOnlyListDataAccess.BusinessClassName)

        readOnlyListDataAccess.RenderToFile(fileName, parentFileName, True)
    ElseIf DataAccessImplementation = DataAccessMethod.ParameterizedSQL Then
        Dim readOnlyListDataAccessParameterized As ReadOnlyListDataAccessParameterized = Me.Create(Of ReadOnlyListDataAccessParameterized)()
        Me.CopyPropertiesTo(readOnlyListDataAccessParameterized)
        readOnlyListDataAccessParameterized.BusinessClassName = String.Format("{0}List", readOnlyListDataAccessParameterized.BusinessClassName)

        readOnlyListDataAccessParameterized.RenderToFile(fileName, parentFileName, True)
    ElseIf DataAccessImplementation = DataAccessMethod.StoredProcedures Then
        Dim readOnlyListDataAccessStoredProcedures As ReadOnlyListDataAccessStoredProcedures = Me.Create(Of ReadOnlyListDataAccessStoredProcedures)()
        Me.CopyPropertiesTo(readOnlyListDataAccessStoredProcedures)
        readOnlyListDataAccessStoredProcedures.BusinessClassName = String.Format("{0}List", readOnlyListDataAccessStoredProcedures.BusinessClassName)
        
        readOnlyListDataAccessStoredProcedures.RenderToFile(fileName, parentFileName, True)
        
        'StoredProcedures
        fileName = System.IO.Path.Combine(Location, String.Format("Collections\{0}.StoredProcedures.sql", readOnlyList.BusinessClassName))
        Dim sqlStoredProcedures As SqlStoredProcedures = Me.Create(Of SqlStoredProcedures)()
        Me.CopyPropertiesTo(sqlStoredProcedures)
        sqlStoredProcedures.DataProjectName = "Not needed for sql stored procedures."
        
        sqlStoredProcedures.RenderToFile(fileName, parentFileName, True)
    End If
End Sub

</script>