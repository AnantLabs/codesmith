<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Encoding="UTF-8" Description="CSLA Map" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.VisualBasicExtensions" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
        Dim cancel As Boolean = False
        OnChildInserting(connection, cancel)
        If (cancel) Then
            Return
        End If

        If connection.State <> ConnectionState.Open Then connection.Open()
        Using command As New SqlCommand("<%= GetInsertStoredProcedureName() %>", connection)
            command.CommandType = CommandType.StoredProcedure
            <%= entity.MembersNoRowVersion.BuildCommandParameters(False, False, Not RenderOptionalContent, True) %>
<% If(Entity.HasRowVersionMember) Then %>
            command.Parameters.AddWithValue("<%= ParameterPrefix  %><%= Entity.RowVersionMember.ColumnName %>", SqlDbType.Timestamp)
            command.Parameters("<%= ParameterPrefix  %><%= Entity.RowVersionMember.ColumnName %>").Value = Me.<%= Entity.RowVersionMember.PropertyName %>
            command.Parameters("<%= ParameterPrefix  %><%= Entity.RowVersionMember.ColumnName %>").Direction = ParameterDirection.InputOutput
<% End If %>

            command.ExecuteNonQuery()

<% If (Entity.HasRowVersionMember) Then %>
            <%= Entity.RowVersionMember.PropertyName %> = DirectCast(command.Parameters("<%= ParameterPrefix  %><%= Entity.RowVersionMember.ColumnName %>").Value, <%= Entity.RowVersionMember.SystemType %>)
<% End If %>
<% For Each member As Member In Entity.PrimaryKey.KeyMembers
    If(member.IsIdentity) Then
        If(UseMemberVariables) Then %>
            <%= member.PrivateMemberVariableName %> = DirectCast(command.Parameters("<%= member.BuildParameterVariableName() %>").Value, <%= member.SystemType %>)
<%      Else %>
            LoadProperty(<%= member.PrivateMemberVariableName %>Property, DirectCast(command.Parameters("<%= member.BuildParameterVariableName() %>").Value, <%= member.SystemType %>))
<%      End If
    End If
Next %>
<% For Each member As Member In Entity.PrimaryKey.KeyMembers
    If Not (member.IsIdentity OrElse member.DataType = DbType.Guid.ToString()) Then
        If(UseMemberVariables) Then %>
            _original<%= member.PropertyName %> = Me.<%= member.PropertyName %>
<%      Else %>
            LoadProperty(_original<%= member.PropertyName %>Property, Me.<%= member.PropertyName %>)
<%      End If
    End If
Next %>
        End Using

        OnChildInserted()
