<%@ CodeTemplate Language="VB" TargetLanguage="VB" Inherits="QuickStart.EntityCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA Map" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.Extensions" Path="..\..\Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.VisualBasicExtensions" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="QuickStart" %>
        Dim cancel As Boolean = False
        OnInserting(cancel)
        If (cancel) Then
            Return
        End If

        Using connection As New SqlConnection(ADOHelper.ConnectionString)
            connection.Open()
            Using command As New SqlCommand("<%= GetInsertStoredProcedureName() %>", connection)
                command.CommandType = CommandType.StoredProcedure
                <%= entity.MembersNoRowVersion.BuildCommandParameters(False, True, False, True) %>

<% If (Entity.HasRowVersionMember) Then %>
                Using reader As SafeDataReader = New SafeDataReader(command.ExecuteReader())
                    If reader.Read() Then
                        _timestamp = ADOHelper.GetBytes(reader, "<%= Entity.RowVersionMember.ColumnName %>")
                    End If
                End Using
<% Else %>
                command.ExecuteNonQuery()
<% End If
If (Entity.HasIdentityMember) Then %>
                Using (BypassPropertyChecks)
<% for each member As Member in Entity.PrimaryKey.KeyMembers
    If(member.IsIdentity) Then
        If(UseMemberVariables) Then %>
                    <%= member.PrivateMemberVariableName %> =  (<%= member.SystemType %>)command.Parameters("<%= member.BuildParameterVariableName() %>").Value
        <% else %>
                    LoadProperty(<%= member.PrivateMemberVariableName %>Property, command.Parameters("<%= member.BuildParameterVariableName() %>").Value)
        <%  End If
    End If
Next %>
                End Using
<% End If %>
            End Using
        End Using

<% If (Entity.AssociatedToManyUnion.Count > 0 OrElse Entity.AssociatedManyToOne.Count > 0)Then %>
        FieldManager.UpdateChildren(Me)
<% End If %>

        OnInserted()
