<%@ CodeTemplate Language="VB" TargetLanguage="VB" OutputType="None" Inherits="QuickStart.DataAccessCodeTemplate" Debug="False" CompilerVersion="v3.5" Description="CSLA 3.7.X DataAccessLayer" %>

<%@ Register Name="ObjectFactory" Template="Internal\ObjectFactory.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ObjectFactoryDataAccess" Template="Internal\ObjectFactory.DataAccess.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ObjectFactoryDataAccessParameterized" Template="Internal\ObjectFactory.DataAccess.ParameterizedSQL.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ObjectFactoryDataAccessStoredProcedures" Template="Internal\ObjectFactory.DataAccess.StoredProcedures.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Register Name="ADOHelperTemplate" Template="Internal\ADOHelper.cst" %>

<%@ Register Name="SqlStoredProcedures" Template="Internal\SQLStoredProcedures.cst" %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\Common" %>
<%@ Assembly Name="QuickStart" Path="..\..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="QuickStart" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>

<% Generate() %>

<script runat="template">

Public Overloads Overrides Sub Generate()
    RegisterReferences()

    For Each entity As Entity In Entities

        Dim objectFactory As ObjectFactory = Me.Create(Of ObjectFactory)()
        Me.CopyPropertiesTo(objectFactory)
        objectFactory.SourceTable = entity.Table
        objectFactory.BusinessClassName = entity.ClassName + "Factory"

        Dim parentFileName As String = System.IO.Path.Combine(Me.Location, String.Format("{0}.vb", objectFactory.BusinessClassName))
        If Not System.IO.File.Exists(parentFileName) Then
            objectFactory.RenderToFile(parentFileName, False)
        End If

        Dim fileName As String = System.IO.Path.Combine(Location, String.Format("{0}.DataAccess.vb", objectFactory.BusinessClassName))
        If DataAccessImplementation = DataAccessMethod.ObjectFactoryNone Then
            Dim objectFactoryDataAccess As ObjectFactoryDataAccess = Me.Create(Of ObjectFactoryDataAccess)()
            Me.CopyPropertiesTo(objectFactoryDataAccess)
            objectFactoryDataAccess.SourceTable = entity.Table

            objectFactoryDataAccess.RenderToFile(fileName, parentFileName, True)
        ElseIf DataAccessImplementation = DataAccessMethod.ObjectFactoryParameterizedSQL Then
            Dim objectFactoryDataAccessParameterized As ObjectFactoryDataAccessParameterized = Me.Create(Of ObjectFactoryDataAccessParameterized)()
            Me.CopyPropertiesTo(objectFactoryDataAccessParameterized)
            objectFactoryDataAccessParameterized.SourceTable = entity.Table

            objectFactoryDataAccessParameterized.RenderToFile(fileName, parentFileName, True)

            Dim ADOHelper As ADOHelperTemplate = Me.Create(Of ADOHelperTemplate)()
            Me.CopyPropertiesTo(ADOHelper)
            ADOHelper.SourceTable = entity.Table

            fileName = System.IO.Path.Combine(Me.Location, "Utility\ADOHelper.vb")
            If Not System.IO.File.Exists(fileName) Then
                ADOHelper.RenderToFile(fileName, False)
            End If
        ElseIf DataAccessImplementation = DataAccessMethod.ObjectFactoryStoredProcedures Then
            'ObjectFactoryDataAccessStoredProcedures
            Dim objectFactoryDataAccessStoredProcedures As ObjectFactoryDataAccessStoredProcedures = Me.Create(Of ObjectFactoryDataAccessStoredProcedures)()
            Me.CopyPropertiesTo(objectFactoryDataAccessStoredProcedures)
            objectFactoryDataAccessStoredProcedures.SourceTable = entity.Table
            
            objectFactoryDataAccessStoredProcedures.RenderToFile(fileName, parentFileName, True)
            
            'SqlStoredProcedures
            Dim sqlStoredProcedures As SqlStoredProcedures = Me.Create(Of SqlStoredProcedures)()
            Me.CopyPropertiesTo(sqlStoredProcedures)
            sqlStoredProcedures.SourceTable = entity.Table
            
            fileName = System.IO.Path.Combine(Location, String.Format("{0}.StoredProcedures.sql", objectFactory.BusinessClassName))
            sqlStoredProcedures.RenderToFile(fileName, parentFileName, True)
            
            'ADOHelperTemplate
            Dim ADOHelper As ADOHelperTemplate = Me.Create(Of ADOHelperTemplate)()
            Me.CopyPropertiesTo(ADOHelper)
            ADOHelper.SourceTable = entity.Table
            
            fileName = System.IO.Path.Combine(Me.Location, "Utility\ADOHelper.cs")
            If Not System.IO.File.Exists(fileName) Then
            ? ? ADOHelper.RenderToFile(fileName, False)
            End If
        End If
    Next
End Sub

</script>