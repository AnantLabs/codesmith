<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeSmith.Data</name>
    </assembly>
    <members>
        <member name="T:CodeSmith.Data.Rules.RuleCollection">
            <summary>
            A collection of rules.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.Validation.RequiredRule">
            <summary>
            A rule to check that the value is not null.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.PropertyRuleBase">
            <summary>
            A base class for property rules.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.IRule">
            <summary>
            Interface defining validation rules.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.IRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified rule using the RuleContext.
            </summary>
            <param name="context">The current RuleContext.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.IRule.Priority">
            <summary>
            Gets the rule priority. The lowest number runs first.
            </summary>
            <value>The rule priority.</value>        
        </member>
        <member name="P:CodeSmith.Data.Rules.IRule.TargetProperty">
            <summary>
            Gets the target property to apply rule to.
            </summary>
            <value>The target property.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.IRule.ErrorMessage">
            <summary>
            Gets the error message when rule fails.
            </summary>
            <value>The error message when rule fails.</value>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.PropertyRuleBase"/> class.
            </summary>
            <param name="property">The target property to apply rule to.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.PropertyRuleBase"/> class.
            </summary>
            <param name="property">The target property to apply rule to.</param>
            <param name="message">The error message when rule fails.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.#ctor(System.String,CodeSmith.Data.Rules.EntityState)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.PropertyRuleBase"/> class.
            </summary>
            <param name="property">The target property to apply rule to.</param>
            <param name="applyState">The state of the entity in which to apply rule.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.#ctor(System.String,System.String,CodeSmith.Data.Rules.EntityState)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.PropertyRuleBase"/> class.
            </summary>
            <param name="property">The target property.</param>
            <param name="message">The error message when rule fails.</param>
            <param name="applyState">The state of the entity in which to apply rule.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.CanRun(CodeSmith.Data.TrackedObject)">
            <summary>
            Determines whether this instance can run the specified rule based on the TrackedObject.
            </summary>
            <param name="trackedObject">The tracked object.</param>
            <returns>
            	<c>true</c> if this instance can run the rule; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.GetPropertyInfo(System.Object)">
            <summary>
            Gets the PropertyInfo for the TargetProperty.
            </summary>
            <param name="target">The target object.</param>
            <returns></returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.GetPropertyValue(System.Object)">
            <summary>
            Gets the property value for the TargetProperty.
            </summary>
            <param name="target">The target object.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.GetPropertyValue``1(System.Object)">
            <summary>
            Gets the property value for the TargetProperty.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="target">The target object.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.PropertyRuleBase.SetPropertyValue(System.Object,System.Object)">
            <summary>
            Sets the property value for the TargetProperty.
            </summary>
            <param name="target">The target object.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.PropertyRuleBase.TargetProperty">
            <summary>
            Gets the target property to apply rule to.
            </summary>
            <value>The target property.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.PropertyRuleBase.ErrorMessage">
            <summary>
            Gets the error message when rule fails.
            </summary>
            <value>The error message when rule fails.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.PropertyRuleBase.ApplyState">
            <summary>
            Gets the state of the entity in which to apply rule.
            </summary>
            <value>The state of the apply.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.PropertyRuleBase.Priority">
            <summary>
            Gets the rule priority. The lowest number runs first.
            </summary>
            <value>The rule priority.</value>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.RequiredRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.RequiredRule"/> class.
            </summary>
            <param name="property">The target property to apply rule to.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.RequiredRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.RequiredRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.RequiredRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:CodeSmith.Data.Rules.Validation.ComparisonOperator">
            <summary>
            The operator the Compare Validator uses.
            </summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.Validation.ComparisonOperator.Equal">
            <summary>
            A comparison for equality.  
            </summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.Validation.ComparisonOperator.GreaterThan">
            <summary>
            A comparison for greater than.  
            </summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.Validation.ComparisonOperator.GreaterThanOrEqual">
            <summary>
            A comparison for greater than or equal to. 
            </summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.Validation.ComparisonOperator.LessThan">
            <summary>
            A comparison for less than.  
            </summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.Validation.ComparisonOperator.LessThanOrEqual">
            <summary>
            A comparison for less than or equal to.  
            </summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.Validation.ComparisonOperator.NotEqual">
            <summary>
            A comparison for inequality.  
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.RuleContext">
            <summary>
            The context for a rule.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleContext.#ctor(CodeSmith.Data.TrackedObject,CodeSmith.Data.Rules.IRule)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.RuleContext"/> class.
            </summary>
            <param name="trackedObject">The tracked object.</param>
            <param name="rule">The rule to apply.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.RuleContext.TrackedObject">
            <summary>
            Gets or sets the tracked object.
            </summary>
            <value>The tracked object.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.RuleContext.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeSmith.Data.Rules.RuleContext"/> is success.
            </summary>
            <value><c>true</c> if success; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.RuleContext.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.RuleContext.Rule">
            <summary>
            Gets or sets the rule to run.
            </summary>
            <value>The rule to run.</value>
        </member>
        <member name="T:CodeSmith.Data.EntityManagerBase`2">
            <summary>
            A base class for entity managers.
            </summary>
            <typeparam name="TManager">The type of the manager.</typeparam>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="T:CodeSmith.Data.IEntityManager`2">
            <summary>
            The entity manager interface.
            </summary>
            <typeparam name="TManager">The type of the manager.</typeparam>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.IEntityManager`2.GetByKey(CodeSmith.Data.IEntityKey)">
            <summary>
            Gets an entity by the primary key.
            </summary>
            <param name="key">The key for the entity.</param>
            <returns>
            An instance of the entity or null if not found.
            </returns>
        </member>
        <member name="P:CodeSmith.Data.IEntityManager`2.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="M:CodeSmith.Data.EntityManagerBase`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.EntityManagerBase`2"/> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:CodeSmith.Data.EntityManagerBase`2.AddValidationRules">
            <summary>
            Add validation rules.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.EntityManagerBase`2.GetByKey(CodeSmith.Data.IEntityKey)">
            <summary>
            Gets an entity by the primary key.
            </summary>
            <param name="key">The key for the entity.</param>
            <returns>
            An instance of the entity or null if not found.
            </returns>
            <remarks>
            This method provides a common retrieval of an entity.
            </remarks>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:CodeSmith.Data.EntityManagerBase`2.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="T:CodeSmith.Data.Rules.Validation.CustomRule`1">
            <summary>
            A rule that run a method to validate.
            </summary>
            <typeparam name="T">The property type.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CustomRule`1.#ctor(System.String,System.String,System.Predicate{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.CustomRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="method">The method.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CustomRule`1.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.Validation.CustomRule`1.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="T:CodeSmith.Data.Rules.Security.UpdateRule">
            <summary>
            A rule to determine if the current user has update permission.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.Security.AuthorizationRuleBase">
            <summary>
            A base class for authorization rules.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Security.AuthorizationRuleBase"/> class.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Security.AuthorizationRuleBase"/> class.
            </summary>
            <param name="authorizedRoles">The authorized roles.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.IsAuthorized">
            <summary>
            Determines whether this instance is authorized.
            </summary>
            <returns>
            	<c>true</c> if this instance is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.GetUser">
            <summary>
            Gets the current username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.GetPrincipal">
            <summary>
            Gets the current user principal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified rule using the RuleContext.
            </summary>
            <param name="context">The current RuleContext.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.AuthorizedRoles">
            <summary>
            Gets or sets the authorized roles.
            </summary>
            <value>The authorized roles.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.ErrorMessage">
            <summary>
            Gets the error message when rule fails.
            </summary>
            <value>The error message when rule fails.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.TargetProperty">
            <summary>
            Gets the target property to apply rule to.
            </summary>
            <value>The target property.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.Security.AuthorizationRuleBase.Priority">
            <summary>
            Gets the rule priority. The lowest number runs first.
            </summary>
            <value>The rule priority.</value>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.UpdateRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified rule using the RuleContext.
            </summary>
            <param name="context">The current RuleContext.</param>
        </member>
        <member name="T:CodeSmith.Data.Rules.BrokenRuleCollection">
            <summary>
            A collection of broken rules.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleCollection.Filter(System.Type)">
            <summary>
            Filters colleciton to the specified type.
            </summary>
            <param name="type">The type to filter.</param>
            <returns>Enumerator of BrokenRule for the type.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleCollection.Filter``1">
            <summary>
            Filters colleciton to the specified type.
            </summary>
            <typeparam name="T">The type to filter.</typeparam>
            <returns>Enumerator of BrokenRule for the type.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleCollection.Filter(System.Type,System.String)">
            <summary>
            Filters colleciton to the specified type and property.
            </summary>
            <param name="property">The property to filter.</param>
            <param name="type">The type to filter.</param>
            <returns>Enumerator of BrokenRule for the type.</returns>        
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleCollection.Filter``1(System.String)">
            <summary>
            Filters colleciton to the specified type and property.
            </summary>
            <param name="property">The property to filter.</param>
            <typeparam name="T">The type to filter.</typeparam>
            <returns>Enumerator of BrokenRule for the type.</returns>        
        </member>
        <member name="T:CodeSmith.Data.Rules.BrokenRule">
            <summary>
            A class indicating a broken rule.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRule.#ctor(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.BrokenRule"/> class.
            </summary>
            <param name="context">The rule context.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.BrokenRule.Message">
            <summary>
            Gets or sets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.BrokenRule.Context">
            <summary>
            Gets or sets the rule context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="T:CodeSmith.Data.Rules.Assign.NowRule">
            <summary>
            Assigns the current date time to the property.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.NowRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.NowRule"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.NowRule.#ctor(System.String,CodeSmith.Data.Rules.EntityState)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.NowRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="assignState">State of the object that can be assigned.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.NowRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs this rule.
            </summary>
            <param name="context">The rule context.</param>
        </member>
        <member name="T:CodeSmith.Data.DataManagerBase`1">
            <summary>
            The base class for the data manager.
            </summary>
            <typeparam name="TContext">The type of DataContext.</typeparam>
        </member>
        <member name="T:CodeSmith.Data.IDataManager`1">
            <summary>
            An interface defining a data manager.
            </summary>
            <typeparam name="TContext">The type of the DataContext.</typeparam>
        </member>
        <member name="T:CodeSmith.Data.IDataManager">
            <summary>
            An interface defining a data manager.
            </summary>
        </member>
        <member name="P:CodeSmith.Data.IDataManager`1.Context">
            <summary>
            Gets the DataContext for this manager.
            </summary>
            <value>The DataContext.</value>
        </member>
        <member name="M:CodeSmith.Data.DataManagerBase`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.DataManagerBase`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:CodeSmith.Data.DataManagerBase`1.Context">
            <summary>
            Gets the managers DataContext.
            </summary>
            <value>The current DataContext.</value>
        </member>
        <member name="P:CodeSmith.Data.DataManagerBase`1.Rules">
            <summary>
            Gets the current rules for the entities.
            </summary>
            <value>The entity rules.</value>
        </member>
        <member name="T:CodeSmith.Data.Attributes.IpAddressAttribute">
            <summary>
            Assigns the current user's IP address to the property for the specified entity states.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.RegexRule">
            <summary>
            A rule to match a regular expression.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.RegexRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.RegexRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.RegexRule.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.RegexRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.RegexRule.#ctor(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.RegexRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="regex">The regex.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.RegexRule.#ctor(System.String,System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.RegexRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="regex">The regex.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.RegexRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.RegexRule.Regex">
            <summary>
            Gets or sets the regex.
            </summary>
            <value>The regex.</value>
        </member>
        <member name="T:CodeSmith.Data.Rules.Assign.GuidRule">
            <summary>
            Assigns a new Guid to a property.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.GuidRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.GuidRule"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.GuidRule.#ctor(System.String,CodeSmith.Data.Rules.EntityState)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.GuidRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="assignState">State of the object that can be assigned.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.GuidRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs this rule.
            </summary>
            <param name="context">The rule context.</param>
        </member>
        <member name="T:CodeSmith.Data.Rules.Security.CreateRule">
            <summary>
            A rule to determine if the current user has create permission.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.CreateRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified rule using the RuleContext.
            </summary>
            <param name="context">The current RuleContext.</param>
        </member>
        <member name="T:CodeSmith.Data.Rules.Validation.RangeRule`1">
            <summary>
            A rule to check if the value is between a range.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.RangeRule`1.#ctor(System.String,`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.RangeRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="minValue">The min value.</param>
            <param name="maxValue">The max value.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.RangeRule`1.#ctor(System.String,System.String,`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.RangeRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="minValue">The min value.</param>
            <param name="maxValue">The max value.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.RangeRule`1.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.Validation.RangeRule`1.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.Validation.RangeRule`1.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="T:CodeSmith.Data.Attributes.NowAttribute">
            <summary>
            Assigns the current date / time to the property for the specified entity states.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Web.LinqCacheDataSource">
            <summary>
            A LinqDataSource that provides caching for Linq queries.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Web.LinqCacheDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Web.LinqCacheDataSource"/> class.
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Web.LinqCacheDataSource.EnableCache">
            <summary>
            Gets or sets a value indicating whether query caching is enabled.
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Web.LinqCacheDataSource.Duration">
            <summary>
            Gets or sets the time, in seconds, that the query is cached.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.DefaultValidationErrorMessage">
            <summary>
              Looks up a localized string similar to Validation Error.
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.InvalidValidatorMessage">
            <summary>
              Looks up a localized string similar to {0} cannot be applied to a(n) {1}..
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ValidatorCompareMessage">
            <summary>
              Looks up a localized string similar to {0} must be {1} to {2}..
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ValidatorDefaultMessage">
            <summary>
              Looks up a localized string similar to {0} is not valid..
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ValidatorLengthMessage">
            <summary>
              Looks up a localized string similar to {0} must be of length {1} - {2}..
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ValidatorNotEmptyMessage">
            <summary>
              Looks up a localized string similar to {0} cannot be empty..
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ValidatorRangeMessage">
            <summary>
              Looks up a localized string similar to {0} must fall between {1} and {2}..
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ValidatorRegexMessage">
            <summary>
              Looks up a localized string similar to {0} must match the expression {1}..
            </summary>
        </member>
        <member name="P:CodeSmith.Data.Properties.Resources.ValidatorRequiredMessage">
            <summary>
              Looks up a localized string similar to {0} is a required field..
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.Validation.LengthRule">
            <summary>
            A rule to check the length.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.LengthRule.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.LengthRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="maxLength">The maximum length.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.LengthRule.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.LengthRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="minLength">The minimum length.</param>
            <param name="maxLength">The maximum length.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.LengthRule.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.LengthRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="maxLength">The maximum length.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.LengthRule.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.LengthRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="minLength">The minimum length.</param>
            <param name="maxLength">The maximum length.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.LengthRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.Validation.LengthRule.MaxLength">
            <summary>
            Gets or sets the max length.
            </summary>
            <value>The maximum length.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.Validation.LengthRule.MinLength">
            <summary>
            Gets or sets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="T:CodeSmith.Data.Rules.Validation.CompareRule`1">
            <summary>
            A rule to compare values.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CompareRule`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.CompareRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CompareRule`1.#ctor(System.String,`0,CodeSmith.Data.Rules.Validation.ComparisonOperator)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.CompareRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <param name="comparison">The comparison.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CompareRule`1.#ctor(System.String,System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.CompareRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CompareRule`1.#ctor(System.String,System.String,`0,CodeSmith.Data.Rules.Validation.ComparisonOperator)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Validation.CompareRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="message">The message.</param>
            <param name="value">The value.</param>
            <param name="comparison">The comparison.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CompareRule`1.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Validation.CompareRule`1.CompareResult(System.Int32)">
            <summary>
            Tests the comparison result.
            </summary>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="P:CodeSmith.Data.Rules.Validation.CompareRule`1.ComparisonOperator">
            <summary>
            Gets or sets the comparison operator.
            </summary>
            <value>The comparison operator.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.Validation.CompareRule`1.ExpectedValue">
            <summary>
            Gets or sets the expected value.
            </summary>
            <value>The expected value.</value>
        </member>
        <member name="T:CodeSmith.Data.Attributes.UserNameAttribute">
            <summary>
            Assigns the current users name to the property for the specified entity states.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.Assign.DefaultValueRule`1">
            <summary>
            Assign a default value to a property.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.DefaultValueRule`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.DefaultValueRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.DefaultValueRule`1.#ctor(System.String,`0,CodeSmith.Data.Rules.EntityState)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.DefaultValueRule`1"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="defaultValue">The default value.</param>
            <param name="assignState">State of the object that can be assigned.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.DefaultValueRule`1.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs this rule.
            </summary>
            <param name="context">The rule context.</param>
        </member>
        <member name="P:CodeSmith.Data.Rules.Assign.DefaultValueRule`1.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="T:CodeSmith.Data.Rules.EntityState">
            <summary>
            The state to the tracked entity
            </summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.EntityState.New">
            <summary>The entity is new.</summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.EntityState.Changed">
            <summary>The entity is changed.</summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.EntityState.Deleted">
            <summary>The entity is deleted.</summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.EntityState.Dirty">
            <summary>The entity is new or changed.</summary>
        </member>
        <member name="F:CodeSmith.Data.Rules.EntityState.All">
            <summary>All the entity states.</summary>
        </member>
        <member name="T:CodeSmith.Data.TrackedObject`1">
            <summary>
            A class representing a tracked object.
            </summary>
            <typeparam name="T">The type of the tracked object.</typeparam>
        </member>
        <member name="P:CodeSmith.Data.TrackedObject`1.Current">
            <summary>
            Gets the current tracked object.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:CodeSmith.Data.TrackedObject`1.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeSmith.Data.TrackedObject`1.IsDeleted">
            <summary>
            Gets a value indicating whether this instance is deleted.
            </summary>
            <value>
            	<c>true</c> if this instance is deleted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeSmith.Data.TrackedObject`1.IsNew">
            <summary>
            Gets a value indicating whether this instance is new.
            </summary>
            <value><c>true</c> if this instance is new; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeSmith.Data.TrackedObject`1.Original">
            <summary>
            Gets the original tracked object.
            </summary>
            <value>The original.</value>
        </member>
        <member name="T:CodeSmith.Data.TrackedObject">
            <summary>
            A class representing a tracked object.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.IpAddressRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.IpAddressRule"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.IpAddressRule.#ctor(System.String,CodeSmith.Data.Rules.EntityState)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.IpAddressRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="assignState">State of the object that can be assigned.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.IpAddressRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs this rule.
            </summary>
            <param name="context">The rule context.</param>
        </member>
        <member name="T:CodeSmith.Data.IEntityKey">
            <summary>Interface for an entity key.</summary>
        </member>
        <member name="T:CodeSmith.Data.IEntityKey`1">
            <summary>Interface for an entity key.</summary>
            <typeparam name="TKey">The type of the key.</typeparam>
        </member>
        <member name="P:CodeSmith.Data.IEntityKey`1.Key">
            <summary>Gets the entity key.</summary>
        </member>
        <member name="T:CodeSmith.Data.IEntityKey`2">
            <summary>Interface for a two part entity key.</summary>
            <typeparam name="TKey0">The type of the first key.</typeparam>
            <typeparam name="TKey1">The type of the second key.</typeparam>
        </member>
        <member name="P:CodeSmith.Data.IEntityKey`2.Key1">
            <summary>Gets the second key.</summary>
        </member>
        <member name="T:CodeSmith.Data.IEntityKey`3">
            <summary>Interface for a three part entity key.</summary>
            <typeparam name="TKey0">The type of the first key.</typeparam>
            <typeparam name="TKey1">The type of the second key.</typeparam>
            <typeparam name="TKey2">The type of the key2.</typeparam>
        </member>
        <member name="P:CodeSmith.Data.IEntityKey`3.Key2">
            <summary>Gets the third key.</summary>
        </member>
        <member name="T:CodeSmith.Data.IEntityKey`4">
            <summary>Interface for a four part entity key.</summary>
            <typeparam name="TKey0">The type of the first key.</typeparam>
            <typeparam name="TKey1">The type of the second key.</typeparam>
            <typeparam name="TKey2">The type of the third key.</typeparam>
            <typeparam name="TKey3">The type of the fourth key.</typeparam>
        </member>
        <member name="P:CodeSmith.Data.IEntityKey`4.Key3">
            <summary>Gets the fourth key.</summary>
        </member>
        <member name="T:CodeSmith.Data.EntityKey`1">
            <summary>Class representing an entity key.</summary>
            <typeparam name="TKey">The type of the entity key.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.EntityKey`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.EntityKey`1"/> class.
            </summary>
            <param name="key">The entity key.</param>
        </member>
        <member name="P:CodeSmith.Data.EntityKey`1.Key">
            <summary>Gets the entity key.</summary>
        </member>
        <member name="T:CodeSmith.Data.EntityKey`2">
            <summary>Class representing a two part entity key.</summary>
            <typeparam name="TKey0">The type of the first key.</typeparam>
            <typeparam name="TKey1">The type of the second key.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.EntityKey`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.EntityKey`2"/> class.
            </summary>
            <param name="key0">The first key value.</param>
            <param name="key1">The second key value.</param>
        </member>
        <member name="P:CodeSmith.Data.EntityKey`2.Key1">
            <summary>Gets the second key.</summary>
        </member>
        <member name="T:CodeSmith.Data.EntityKey`3">
            <summary>Class representing a three part entity key.</summary>
            <typeparam name="TKey0">The type of the first key.</typeparam>
            <typeparam name="TKey1">The type of the second key.</typeparam>
            <typeparam name="TKey2">The type of the third key.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.EntityKey`3.#ctor(`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.EntityKey`3"/> class.
            </summary>
            <param name="key0">The first key value.</param>
            <param name="key1">The second key value.</param>
            <param name="key2">The third key value.</param>
        </member>
        <member name="P:CodeSmith.Data.EntityKey`3.Key2">
            <summary>Gets the third key.</summary>
        </member>
        <member name="T:CodeSmith.Data.EntityKey`4">
            <summary>Class representing a four part entity key.</summary>
            <typeparam name="TKey0">The type of the first key.</typeparam>
            <typeparam name="TKey1">The type of the second key.</typeparam>
            <typeparam name="TKey2">The type of the third key.</typeparam>
            <typeparam name="TKey3">The type of the fourth key.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.EntityKey`4.#ctor(`0,`1,`2,`3)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.EntityKey`4"/> class.
            </summary>
            <param name="key0">The first key value.</param>
            <param name="key1">The second key value.</param>
            <param name="key2">The third key value.</param>
            <param name="key3">The fourth key value.</param>
        </member>
        <member name="P:CodeSmith.Data.EntityKey`4.Key3">
            <summary>Gets the fourth key.</summary>
        </member>
        <member name="T:CodeSmith.Data.Attributes.GuidAttribute">
            <summary>
            Assigns a new GUID to the property for the specified entity states.
            </summary>
        </member>
        <member name="T:CodeSmith.Data.Rules.Security.DeleteRule">
            <summary>
            A rule to determine if the current user has delete permission.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Security.DeleteRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs the specified rule using the RuleContext.
            </summary>
            <param name="context">The current RuleContext.</param>
        </member>
        <member name="T:CodeSmith.Data.Rules.RuleManager">
            <summary>
            A class to manage rules.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.RuleManager"/> class.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.Add``1(CodeSmith.Data.Rules.IRule)">
            <summary>
            Adds the specified rule.
            </summary>
            <typeparam name="EntityType">The type of the entity.</typeparam>
            <param name="rule">The rule.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.AddShared``1(CodeSmith.Data.Rules.IRule)">
            <summary>
            Adds the shared global rules.
            </summary>
            <typeparam name="EntityType">The type of the entity.</typeparam>
            <param name="rule">The rule.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.AddShared``1">
            <summary>
            Adds rules to the rule manager from any property attributes on the specified type. 
            </summary>
            <typeparam name="EntityType">The type of the entity.</typeparam>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.GetRules``1">
            <summary>
            Gets the rules for a type.
            </summary>
            <typeparam name="EntityType">The type of the entity.</typeparam>
            <returns>A collection of rules.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.GetRules(System.Type)">
            <summary>
            Gets the rules for a type.
            </summary>
            <param name="type">The type of the entity.</param>
            <returns>A collection of rules.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.Run(System.Collections.Generic.List{CodeSmith.Data.TrackedObject})">
            <summary>
            Run the rules specified objects.
            </summary>
            <param name="objects">The objects to run rules on.</param>
            <returns><c>true</c> if rules ran successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.Run(System.Object[])">
            <summary>
            Run the rules specified objects.
            </summary>
            <param name="objects">The objects to run rules on.</param>
            <returns><c>true</c> if rules ran successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.RuleManager.Run(System.Data.Linq.ChangeSet)">
            <summary>
            Run the rules specified changed objects.
            </summary>
            <param name="changedObjects">The changed objects.</param>
            <returns><c>true</c> if rules ran successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CodeSmith.Data.Rules.RuleManager.BrokenRules">
            <summary>
            Gets the broken rules.
            </summary>
            <value>The broken rules.</value>
        </member>
        <member name="T:CodeSmith.Data.Rules.BrokenRuleException">
            <summary>
            An exception class for broken rules.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleException.#ctor(CodeSmith.Data.Rules.BrokenRuleCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.BrokenRuleException"/> class.
            </summary>
            <param name="brokenRules">The broken rules.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.BrokenRuleException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleException.op_Implicit(CodeSmith.Data.Rules.BrokenRuleException)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:CodeSmith.Data.Rules.BrokenRuleException"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="ex">The ex.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleException.ToString">
            <summary>
            Creates and returns a string representation of the current exception.
            </summary>
            <returns>
            A string representation of the current exception.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
            </PermissionSet>
        </member>
        <member name="M:CodeSmith.Data.Rules.BrokenRuleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is a null reference (Nothing in Visual Basic). </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
            </PermissionSet>
        </member>
        <member name="P:CodeSmith.Data.Rules.BrokenRuleException.BrokenRules">
            <summary>
            Gets the broken rules.
            </summary>
            <value>The broken rules.</value>
        </member>
        <member name="P:CodeSmith.Data.Rules.BrokenRuleException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="T:CodeSmith.Data.Rules.Assign.UserNameRule">
            <summary>
            Assigns the current logged in username.
            </summary>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.UserNameRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.UserNameRule"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.UserNameRule.#ctor(System.String,CodeSmith.Data.Rules.EntityState)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Data.Rules.Assign.UserNameRule"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="assignState">State of the object that can be assigned.</param>
        </member>
        <member name="M:CodeSmith.Data.Rules.Assign.UserNameRule.Run(CodeSmith.Data.Rules.RuleContext)">
            <summary>
            Runs this rule.
            </summary>
            <param name="context">The rule context.</param>
        </member>
    </members>
</doc>
