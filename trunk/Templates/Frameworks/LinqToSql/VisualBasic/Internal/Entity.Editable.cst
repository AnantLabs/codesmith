<%@ CodeTemplate Language="VB" TargetLanguage="VB" Debug="True" 
    Description="Linq to Sql Entity Class." %>

<%@ Assembly Name="ICSharpCode.NRefactory" Path="..\..\Common" %>
<%@ Assembly Name="InsertClassMergeStrategy" Path="..\..\Common" %>
<%@ Assembly Name="Generator" Path="..\..\Common" %>
<%@ Assembly Name="Dbml" Path="..\..\Common"%>

<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="LinqToSqlShared.DbmlObjectModel" %>
<%@ Import Namespace="LinqToSqlShared.Generator" %>

<%@ Property Category="1.Mapping" Name="Database" 
    Type="LinqToSqlShared.DbmlObjectModel.Database" Optional="False" 
    Description="Database instance. Must be set by parent template" %>

<%@ Property Category="1.Mapping" Name="Type" 
    Type="LinqToSqlShared.DbmlObjectModel.Type" Optional="False" 
    Description="The Type instance for this entity. Must be set by parent template" %>
	
<%@ Property Category="2.Class" Name="Framework"
    Type="LinqToSqlShared.Generator.FrameworkEnum" Default="v35_SP1" Optional="False"
    Description="Which version of the .Net Framework is being generated for." %>

<%@ Property Category="2.Class" Name="ExistingFile"
    Type="CodeFileParser" Optional="True" %>

<%@ Map Name="VBAlias" 
    Src="System-VBAlias.csmap" Reverse="False" 
    Description="Convert system data types to vb alias" %>
Imports System
Imports System.Linq
Imports System.Collections.Generic
Imports System.Text
<%If(Framework = FrameworkEnum.v35_SP1)Then%>Imports System.ComponentModel.DataAnnotations<%End If%>

Namespace <%= Database.EntityNamespace %>
	
    <%= Naming.GetModifier(Type.AccessModifier, Type.Modifier) %> Partial Class <%= Type.Name %>
        
		' For more information about the features contained in this class, please visit our GoogleCode Wiki at...
		' http://code.google.com/p/codesmith/wiki/PLINQO
		' Also, you can watch our Video Tutorials at...
		' http://community.codesmithtools.com/
		
		<%If(Framework = FrameworkEnum.v35_SP1)Then%>
		#Region "Metadata"

		
		Protected Friend Class Metadata
			' Only Attributes in the class will be preserved.
			
<%          Dim sourceAttributes As AttributeSectionVisitor = new AttributeSectionVisitor()
            If ExistingFile IsNot Nothing Then
                ExistingFile.CompilationUnit.AcceptVisitor(sourceAttributes, String.Concat(Type.Name, "MetaData"))
            End If 
            For Each column As Column In Type.Columns
                If sourceAttributes.PropertyMap.ContainsKey(column.Name) Then
                    For Each attributeSection As ICSharpCode.NRefactory.Ast.AttributeSection In sourceAttributes.PropertyMap(column.Name).Attributes %>
			<%= ExistingFile.GetSection(attributeSection.StartLocation, attributeSection.EndLocation) %>
<%					Next
				End If %>
			Public <%=column.Name%> As <%= VBAlias(column.Type) %>
			
<% 			Next %>
		End Class
		
		#End Region
<%		End If%>	
	
    End Class

End Namespace
