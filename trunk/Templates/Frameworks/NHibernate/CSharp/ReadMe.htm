<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>NHibernate Templates - C#</title>
<style type="text/css">
.style1 {
	color: #FF0000;
}
</style>
</head>

<body>

<h1>NHibernate Templates - C#</h1>

<h2>Table of Contents</h2>
<ul>
<li><a href="#Overview">Overview</a></li>
<li><a href="#QuickStart">Quick Start</a></li>
<li><a href="#SampleAppConfig">Sample App.Config</li>
<li><a href="#Dependancies">Dependancies</li>
<li><a href="#KnownIssues">Known Issues</li>
<li><a href="#Downloads">Downloads</li>
<li><a href="#History">History</li>
<li><a href="#Links">Links</li>
</ul>



<h2><a title="Overview" name="Overview"></a>Overview</h2>
<p>
These are a collection of templates that generate code that use NHiberate Framework.
</p>
<p>
These templates are designed to produce 5 major things...
<ol>
<li>NHibernate XML mapping files.</li>
<li>Business objects to match the NHibernate maps.</li>
<li>A Manager object for each business object that provide table specific access methods.</li>
<li>A NHibernateSessionManager that produces NHibernateSession objects to help abstract NHibernate ISession logic.</li>
<li>Very basic unit tests for each business object/manager.</li>
</ol>
</p>



<h2><a title="QuickStart" name="QuickStart"></a>Quick Start</h2>
<p><ol>
<li>Create a new VisualStudio project.</li>
<li>Add a new CodeSmith Project (CSP) to your project.
<ol>
<li>Right click on the project.</i>
<li>Select "Add new item..."</i>
<li>In Common Items there will be a CodeSmith Project.</i>
</ol></li>
<li>Add NHibernateMaster.cst to your CSP's output.</li>
<li>Configure NHibernateMaster as desired.
<ol>
<li>Don't forget to update your Assembly name!</i>
</ol></li>
<li>Create/Update your App.Config to support NHibernate (example below).
<ol>
<li>If using the sample below, update the connection string and...</li>
<li>...update the mapping assembly.</li>
</ol></li>
<li>Right click on your CSP and Generate Outputs.</li>
<li>Compile, and enjoy!</li>
</ol></p>



<h2><a title="SampleAppConfig" name="SampleAppConfig"></a>Sample App.Config</h2>
<p>
&lt;?xml version="1.0" encoding="utf-8" ?&gt;<br>
&lt;configuration&gt;<br>
&nbsp; &lt;configSections&gt;<br>
&nbsp; &nbsp; &lt;section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" /&gt;<br>
&nbsp; &lt;/configSections&gt;<br>
&nbsp; &lt;hibernate-configuration xmlns="urn:nhibernate-configuration-2.2"&gt;<br>
&nbsp; &nbsp; &lt;session-factory&gt;<br>
&nbsp; &nbsp; &nbsp; &lt;property name="connection.provider"&gt;NHibernate.Connection.DriverConnectionProvider&lt;/property&gt;<br>
&nbsp; &nbsp; &nbsp; &lt;property name="dialect"&gt;NHibernate.Dialect.MsSql2005Dialect&lt;/property&gt;<br>
&nbsp; &nbsp; &nbsp; &lt;property name="connection.driver_class"&gt;NHibernate.Driver.SqlClientDriver&lt;/property&gt;<br>
&nbsp; &nbsp; &nbsp; &lt;property name="connection.connection_string"&gt;&lt;/property&gt;<br>
&nbsp; &nbsp; &nbsp; &lt;mapping assembly="NHibernate.Generated"/&gt;<br>
&nbsp; &nbsp; &lt;/session-factory&gt;<br>
&nbsp; &lt;/hibernate-configuration&gt;<br>
&lt;/configuration&gt;<br>
</p>



<h2><a title="Dependancies" name="Dependancies"></a>Dependancies</h2>
<p>
These templates will only build with CodeSmith 5.0.
</p>
<p>
These templates include NHibernate version 2.0.0.Alpha1; but they can also support NHibernate 1.2.1<br>
NHibernate 1.2.1 Differences:
<ol>
<li>Supports legacy Namespaces.</li>
<li>UnitTests validate deleted rows differently.</li>
</ol>
</p>
<p>
These templates linclude NUnit 2.4.7 for .Net 2.0
</p>
<p>
These templates support both Visual Studio 2008 and 2005.<br>
Visual Studio 2005 Differences:
<ol>
<li>Does not include partial methods in business ojects.</li>
</ol>
</p>



<h2><a title="KnownIssues" name="KnownIssues"></a>Known Issues</h2>
<p>
<ul>
<li>UnitTests require that each table in the database have at least valid row.</li>
<li>Columns will the same name as their table will cause issues at compile time.
<ul><li>Solution: Adding a "cs_alias" extended property to any column or table will override it's name with the specified value.</li></ul>
</li>
</ul>
</p>



<h2><a title="Downloads" name="Downloads"></a>Downloads</h2>
<p>
Download the latest release from GoogleCode.
<ul>
<li><a href="http://codesmith.googlecode.com/svn/trunk/Templates/Frameworks/NHibernate/">http://codesmith.googlecode.com/svn/trunk/Templates/Frameworks/NHibernate/</a></li>
</ul>
</p>



<h2><a title="History" name="History"></a>History</h2>
<p>
<ul>
<li>Release 1.0.1
<ul>
<li>Bug Fix: We now support creating unit test data for varchar(max).</li>
<li>New Feature: Any table or column name can be overriden by added "cs_alias" to it's extended properties.
<ul>
<li>Bug Fix: We now support one table having two foreign keys tied to the same table.</li>
</ul></li>
</ul></li>
<li>Release 1.0.0
<ul>
<li>Initial release.</li>
</ul></li>
</ul>
</p>
<p class="style1">*Breaking change</p>



<h2><a title="Links" name="Links"></a>Links</h2>
<p>
<a href="http://www.hibernate.org/343.html">NHibernate for .NET</a>
</p>
<p>
<a href="http://www.nunit.org/">NUnit</a>
</p>
<p>
<h4>Special Thanks</h4>
<a href="http://www.codeproject.com/KB/architecture/NHibernateBestPractices.aspx">Billy McCafferty</a><br>
<a href="http://www.ayende.com/Blog/">Ayende @ Rahien</a><br>
<a href="http://www.manning.com/kuate/">NHibernate in Action</a><br>
</p>
