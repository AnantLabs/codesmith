<%-- Author: Blake Niemyjski --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" OutputType="None" CompilerVersion="v3.5" Encoding="UTF-8" Description="EF Entities" %>

<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\Common" %>
<%@ Assembly Name="Generator.QuickStart" Path="..\Common" %>
<%@ Assembly Name="Generator.Microsoft.Frameworks" Path="..\Common" %>
<%@ Assembly Name="Xml.Schema.Linq" Path="..\Common" %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="Generator.QuickStart" %>
<%@ Import Namespace="Generator.Microsoft.Frameworks" %>
<%@ Import Namespace="SchemaExplorer" %>

<%@ Register Name="QueryExtensionEditable" Template="Internal\QueryExtension.Editable.cst"  %>
<%@ Register Name="QueryExtensionGenerated" Template="Internal\QueryExtension.Generated.cst" MergeProperties="true" ExcludeProperties="EntityNamespace, ContextNamespace, DataContextName" %>
<%@ Property Name="QueryDirectory" Type="System.String" Category="2. Class" Default=".\" Optional="False" Description="The folder to save the generated query extension files." Editor="System.Windows.Forms.Design.FileNameEditor, System.Design" %>
<%@ Property Name="EdmxFile" Type="System.String" Category="4. Mapping" Optional="False" Description="The full path to the edmx file." Editor="System.Windows.Forms.Design.FileNameEditor, System.Design" %>
Generating  Queries ...
<%
Generate(); 
RegisterReferences();
%>
<script runat="template">
public void Generate() {
    CodeSmith.SchemaHelper.Configuration.Instance.NamingProperty.PropertyNaming = CodeSmith.SchemaHelper.PropertyNaming.NormalizeRemovePrefix;
    CodeSmith.SchemaHelper.Configuration.Instance.NamingProperty.AssociationNaming = CodeSmith.SchemaHelper.AssociationNaming.List;

    if(String.IsNullOrEmpty(EdmxFile) || !System.IO.File.Exists(EdmxFile))
    {
        Response.WriteLine("The Edmx File does not exist, the queries will not be generated.");
        return;
    }

    if (!Directory.Exists(this.QueryDirectory))
        Directory.CreateDirectory(this.QueryDirectory);

    var queryExtensionsEditable = this.Create<QueryExtensionEditable>();
    var queryExtensionsGenerated = this.Create<QueryExtensionGenerated>();

    var entityProvider = new EdmxEntityProvider(EdmxFile);
    var entityManager = new EntityManager((IEntityProvider)entityProvider);
    foreach(var entity in entityManager.Entities.Where(e => IsConceptualEntity(e)))
    {
        var className = String.Concat(entity.Name, "Extensions");
        var parentFileName = Path.Combine(QueryDirectory, String.Concat(className, ".cs"));
        var fileName = Path.Combine(QueryDirectory, String.Concat(className, ".Generated.cs"));
        if (!File.Exists(parentFileName))
        {
            this.CopyPropertiesTo(queryExtensionsEditable);
            queryExtensionsEditable.Entity = entity;
            queryExtensionsEditable.EntityNamespace = entityProvider.EntityNamespace;
            queryExtensionsEditable.RenderToFile(parentFileName, false);
        }

        this.CopyPropertiesTo(queryExtensionsGenerated);
        queryExtensionsGenerated.Entity = entity;
        queryExtensionsGenerated.EntityNamespace = entityProvider.EntityNamespace;
        queryExtensionsGenerated.ContextNamespace = entityProvider.ContextNamespace;
        queryExtensionsGenerated.DataContextName = entityProvider.DataContextName;
        queryExtensionsGenerated.RenderToFile(fileName, parentFileName, true);
    }
}

private bool IsConceptualEntity(IEntity entity)
{
    return (entity is ConceptualEntity);
}

private bool IsViewEntity(IEntity entity)
{
    return entity.ExtendedProperties.ContainsKey(EdmxConstants.IsViewEntityCustomAttribute);
}

public void RegisterReferences()
{
    RegisterReference(Path.Combine(CodeTemplateInfo.DirectoryName,"..\\Common\\v4.0\\CodeSmith.Data.dll"));
}
</script>